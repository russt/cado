TESTNAME is codegen00019

%push/%pop STATEMENT TESTS
%push/%pop test 1 PASSED
%push/%pop test 1 MYSTACK:stacksize=1
%push/%pop test 1 MYSTACK='trailing   spaces   '
%push/%pop test 2 PASSED
%push/%pop test 2 MYSTACK:stacksize=0
%push/%pop test 2 foo='trailing   spaces   '
%push/%pop test 3 PASSED
%push/%pop test 3 MYSTACK:stacksize=3
%push/%pop test 3 MYSTACK='trailing   spaces   middle elementlast element'
%push/%pop test 4 foo='last element' MYSTACK:stacksize=2
%push/%pop test 4 foo='middle element' MYSTACK:stacksize=1
%push/%pop test 4 foo='trailing   spaces   ' MYSTACK:stacksize=0
%push/%pop test 4 PASSED
%push/%pop test 5 PASSED (missing rhs)
MYSTACK: 1 "${rhs:undef}"
%push/%pop test 6 PASSED (undef rhs)
size=2
%push/%pop test 7 PASSED (good + undef rhs)

%upush STATEMENT TESTS
MYSTACK: 2 "a	b"
%upush test 1 PASSED
MYSTACK: 3 "a	b	c"
%upush test 2 PASSED
MYSTACK: 6 "a	b	c	d	e	f"
%upush test 3 PASSED
MYSTACK: 3 "a	b	c"
%upush test 4 PASSED

:unique OP TESTS
MYSTACK: 3 "a	b	c"
:unique test 1 PASSED

%push CG_STACK_DELIMITER STATEMENT TESTS
%push CG_STACK_DELIMITER test 1 PASSED
%push CG_STACK_DELIMITER test 2 PASSED
%push CG_STACK_DELIMITER test 3 PASSED
%push CG_STACK_DELIMITER test 4 PASSED
%push CG_STACK_DELIMITER test 5 PASSED
%push CG_STACK_DELIMITER test 6 PASSED
%push CG_STACK_DELIMITER test 7 PASSED
%push CG_STACK_DELIMITER test 8 PASSED
%push CG_STACK_DELIMITER test 9 PASSED
%push CG_STACK_DELIMITER test 10 PASSED
%push CG_STACK_DELIMITER test 11 PASSED
%push CG_STACK_DELIMITER test 12 PASSED
%push CG_STACK_DELIMITER test 13 PASSED
%push CG_STACK_DELIMITER test 14 PASSED

%pushv STATEMENT TESTS
POSTFIX OPERATOR %pushv TEST #1 PASSED
POSTFIX OPERATOR %pushv TEST #2 PASSED
####### with //'s
SI_010101_01	SI_020202_02	SI_030303_03	SI_040404_04	SI_050505_05	SI_060606_06	SI_070707_07	SI_080808_08	SI_090909_09	SI_101010_10
elem='SI_010101_01'
elem='SI_020202_02'
elem='SI_030303_03'
elem='SI_040404_04'
elem='SI_050505_05'
elem='SI_060606_06'
elem='SI_070707_07'
elem='SI_080808_08'
elem='SI_090909_09'
elem='SI_101010_10'
####### without //'s
SI_010101_01	SI_020202_02	SI_030303_03	SI_040404_04	SI_050505_05	SI_060606_06	SI_070707_07	SI_080808_08	SI_090909_09	SI_101010_10
elem='SI_010101_01'
elem='SI_020202_02'
elem='SI_030303_03'
elem='SI_040404_04'
elem='SI_050505_05'
elem='SI_060606_06'
elem='SI_070707_07'
elem='SI_080808_08'
elem='SI_090909_09'
elem='SI_101010_10'
PASS BAD REGULAR EXPRESSION TO %pushv:
if we get here test completed successfully
