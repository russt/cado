TESTNAME is codegen00022
We want to interpret m..n as a range value.
Axioms:
    :rangelb => m..n => m
    :rangeub => m..n => n
    common behavior
        non-integer and non-nil-string => warning, ignore
        "" => 0
        m => m

This script codegen00022.cg tests this behavior.

:rangelb POSTFIX OPERATOR TESTS
POSTFIX OPERATOR :rangelb TEST #1 PASSED
POSTFIX OPERATOR :rangelb TEST #2 PASSED
POSTFIX OPERATOR :rangelb TEST #3 PASSED
:rangeub POSTFIX OPERATOR TESTS
POSTFIX OPERATOR :rangeub TEST #1 PASSED
POSTFIX OPERATOR :rangeub TEST #2 PASSED
POSTFIX OPERATOR :rangeub TEST #3 PASSED
:isint POSTFIX OPERATOR TESTS
POSTFIX OPERATOR :isint TEST #1 PASSED
POSTFIX OPERATOR :isint TEST #2 PASSED
:split POSTFIX OPERATOR TESTS
POSTFIX OPERATOR :split TEST #1 PASSED
POSTFIX OPERATOR :split TEST #2 PASSED
POSTFIX OPERATOR :split TEST #3 PASSED
POSTFIX OPERATOR :split TEST #4 PASSED
POSTFIX OPERATOR :split TEST #5 PASSED
############ pop with top
POP elem[1]=''
POP elem[2]='c'
POP elem[3]='b'
POP elem[4]='a'
POP elem[5]=''
############ shift with bottom
SHIFT elem[1]=''
SHIFT elem[2]='a'
SHIFT elem[3]='b'
SHIFT elem[4]='c'
SHIFT elem[5]=''
############ pop w/o top
POP elem[1]=''
POP elem[2]='c'
POP elem[3]='b'
POP elem[4]='a'
POP elem[5]=''
############ shift w/o bottom
SHIFT elem[1]=''
SHIFT elem[2]='a'
SHIFT elem[3]='b'
SHIFT elem[4]='c'
SHIFT elem[5]=''

:car,:cdr POSTFIX OPERATOR TESTS
POSTFIX OPERATOR :car,:cdr TEST #1 PASSED
POSTFIX OPERATOR :car,:cdr TEST #2 PASSED

POSTFIX OPERATOR :car,:cdr  %while
LOOP:  car=a
LOOP:  car=b
LOOP:  car=c

POSTFIX OPERATOR :car,:cdr  %whiledef
LOOP:  car=a
LOOP:  car=b
LOOP:  car=c
