#
# BEGIN_HEADER - DO NOT EDIT
#
# The contents of this file are subject to the terms
# of the Common Development and Distribution License
# (the "License").  You may not use this file except
# in compliance with the License.
#
# You can obtain a copy of the license at
# https://open-esb.dev.java.net/public/CDDLv1.0.html.
# See the License for the specific language governing
# permissions and limitations under the License.
#
# When distributing Covered Code, include this CDDL
# HEADER in each file and include the License file at
# https://open-esb.dev.java.net/public/CDDLv1.0.html.
# If applicable add the following below this CDDL HEADER,
# with the fields enclosed by brackets "[]" replaced with
# your own identifying information: Portions Copyright
# [year] [name of copyright owner]
#

#
# @(#)codegen00040.cg
# Copyright 2010 Russ Tremain. All Rights Reserved.
#
# END_HEADER - DO NOT EDIT
#

#
#this tests more esoteric use of embedded assignment op, pushv, undef
#

tname= embeddefs
tnum = 0

ii = 00
LQ=!
RQ=!
DS := $

varprefix = quotedliteral
foo_template := << EOF
{=LQ=}{=%a tmp = $varprefix$ii:incr:a=}{=%a $tmp=some real data=}{=$tmp:cgvar=}{=RQ=}
{=LQ=}{=%a tmp = $varprefix$ii:incr:a=}{=%a $tmp=some more real data=}{=$tmp:cgvar=}{=RQ=}
EOF

%evalmacro xx foo_template
%echo after evalmacro xx='$xx'
%echo

%echo last tmp='$tmp'
%echo quotedliteral01=$quotedliteral01
%echo

vpattern = /^${varprefix}\d+$DS/
%pushv vdefs $vpattern
%echo VAR DUMP for $vpattern=$vdefs:showstack
%echo

result=FAILED
#stack should have 2 items:
%ifnot $vdefs:stacksize:minus2	result=PASSED
%echo $tname TEST #$tnum:incr:a $result

%foreach var vpattern %push varstack $var := $var:valueof

result=FAILED
#stack should have 2 items:
%ifnot $varstack:stacksize:minus2	result=PASSED
%echo $tname TEST #$tnum:incr:a $result

#output definitions into string:
CG_STACK_DELIMITER = $CG_STACK_DELIMITER:clr:newline
VARDEFS  = $varstack:showstack:newline
%pragma reset_stack_delimiter

%echo varstack='$VARDEFS'

#now clear the varpattern:
%undef $vpattern
%undef vdefs
%pushv vdefs $vpattern
%echo AFTER UNDEF DUMP for $vpattern=$vdefs:showstack
%echo AFTER UNDEF stacksize=$vdefs:stacksize
%echo

result=FAILED
#stack should now have 0 items:
%ifnot $vdefs:stacksize	result=PASSED
%echo $tname TEST #$tnum:incr:a $result

#now read in our defs:
%call VARDEFS
%undef vdefs
%pushv vdefs $vpattern
%echo AFTER INTERPRET for $vpattern=$vdefs:showstack
