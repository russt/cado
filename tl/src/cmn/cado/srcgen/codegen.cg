#
#this script generates the codegen processor and documentation.
#
#Usage:  codegen -u -cgroot .. codegen.cg

PWD=
PWD=$PWD:pwd

#if CG_ROOT is not defined ...
%ifndef CG_ROOT %echo WARNING: defaulting CG_ROOT to $PWD/bld
%ifndef CG_ROOT CG_ROOT = $PWD/bld

#save CG_ROOT base setting as we will adjust it for different sections:
CG_ROOT_BASE = $CG_ROOT

#generate file test  ops:
%include cgsrc/filetest_op.defs

CODEGEN_PACKAGE_NAME = codegen
%include cgsrc/codegen.defs
cgsrc/codegen.pl	/codegen.pl

CODEGEN_PACKAGE_NAME = cado
%include cgsrc/codegen.defs
cgsrc/codegen.pl	/cado.pl

#generate documentation:
CG_TMPDIR  = $CG_ROOT_BASE/tmp
CG_ROOT  = $CG_TMPDIR
CG_TEMPLATE_PATH = $CG_ROOT;$CG_TEMPLATE_PATH

%pragma quiet 1
#this is used in one of the examples, and was getting interpolated:
foo = $foo:nameof:cgvar
cgsrc/cgdoc.txt	/cgdoc_tmp.txt

#document for template operators can not be interpolated:
%pragma copy 1
cgsrc/templatedoc.txt >>	/cgdoc_tmp.txt
%pragma quiet 0

#generate final (copy):
CG_ROOT  = $CG_ROOT_BASE
cgdoc_tmp.txt	/cgdoc.txt

#clean up:
#%echo removing $CG_TMPDIR
#%rm -rf $CG_TMPDIR

#display test skel if requested for cut/paste
%ifdef SHOW_TESTS %echo $REGRESS_FILETEST_OPS
