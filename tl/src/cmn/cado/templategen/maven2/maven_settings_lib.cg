#
# WARNING:  this library is generated, DO NOT EDIT.  Run "codegen genmavenlib.cg: instead
#
# This library is used to xml files, from simple declarations.
#

#only include this once:
%ifdef MVNCONF_POM_GENERATOR_INCLUDED %return

%include xml/xml_macros.cg
#use special xml

#load special codegen support operators:
%pragma require xml/xmlcg_ops.pl

#this must be in CG_TEMPLATE_PATH:
%include maven2/settings_doc.defs

mvnconf_lib_reset_globals := << EOF
{
    #initialize globals:
    parent_instance_count = 00
    instance_count = 01

    parent_macro_name_ptr = headless_macro_name
    $parent_macro_name_ptr = NULL_PARENT

    #set this to zero to avoid generating empty elements:
    %ifndef MVNCONF_GENERATE_EMPTY_ELEMENTS   MVNCONF_GENERATE_EMPTY_ELEMENTS = 01
    #pad if set:
    %if $MVNCONF_GENERATE_EMPTY_ELEMENTS      MVNCONF_GENERATE_EMPTY_ELEMENTS = 01

    #always generate the top element:
    MVNCONF_SETTINGS_COUNT = 01

    %undef MVNCONF_LIB_VERBOSE 

    children =

    #zero pad instance counters:
    CG_PAD_SPEC = %02d
}
EOF

#ensure globals are initialized on first include:
%call mvnconf_lib_reset_globals


mvnconf_proxy_active := << EOF
{# mvnconf_proxy_active: TERMINAL ELEMENT
    mvnconf_proxy_active_valuevar = MVNCONF_PROXY_ACTIVE_$instance_count:pad:assign
    %ifndef $mvnconf_proxy_active_valuevar    mvnconf_proxy_active_valuevar = MVNCONF_PROXY_ACTIVE

    #set element contents to nil if not defined:
    %ifndef $mvnconf_proxy_active_valuevar    $mvnconf_proxy_active_valuevar =

    XML_ELEMENT_NAME = active
    XML_ELEMENT_BODY = $mvnconf_proxy_active_valuevar:valueof
    %call xml_line_element
}
EOF

mvnconf_proxy_protocol := << EOF
{# mvnconf_proxy_protocol: TERMINAL ELEMENT
    mvnconf_proxy_protocol_valuevar = MVNCONF_PROXY_PROTOCOL_$instance_count:pad:assign
    %ifndef $mvnconf_proxy_protocol_valuevar    mvnconf_proxy_protocol_valuevar = MVNCONF_PROXY_PROTOCOL

    #set element contents to nil if not defined:
    %ifndef $mvnconf_proxy_protocol_valuevar    $mvnconf_proxy_protocol_valuevar =

    XML_ELEMENT_NAME = protocol
    XML_ELEMENT_BODY = $mvnconf_proxy_protocol_valuevar:valueof
    %call xml_line_element
}
EOF

mvnconf_proxy_username := << EOF
{# mvnconf_proxy_username: TERMINAL ELEMENT
    mvnconf_proxy_username_valuevar = MVNCONF_PROXY_USERNAME_$instance_count:pad:assign
    %ifndef $mvnconf_proxy_username_valuevar    mvnconf_proxy_username_valuevar = MVNCONF_PROXY_USERNAME

    #set element contents to nil if not defined:
    %ifndef $mvnconf_proxy_username_valuevar    $mvnconf_proxy_username_valuevar =

    XML_ELEMENT_NAME = username
    XML_ELEMENT_BODY = $mvnconf_proxy_username_valuevar:valueof
    %call xml_line_element
}
EOF

mvnconf_proxy_password := << EOF
{# mvnconf_proxy_password: TERMINAL ELEMENT
    mvnconf_proxy_password_valuevar = MVNCONF_PROXY_PASSWORD_$instance_count:pad:assign
    %ifndef $mvnconf_proxy_password_valuevar    mvnconf_proxy_password_valuevar = MVNCONF_PROXY_PASSWORD

    #set element contents to nil if not defined:
    %ifndef $mvnconf_proxy_password_valuevar    $mvnconf_proxy_password_valuevar =

    XML_ELEMENT_NAME = password
    XML_ELEMENT_BODY = $mvnconf_proxy_password_valuevar:valueof
    %call xml_line_element
}
EOF

mvnconf_proxy_port := << EOF
{# mvnconf_proxy_port: TERMINAL ELEMENT
    mvnconf_proxy_port_valuevar = MVNCONF_PROXY_PORT_$instance_count:pad:assign
    %ifndef $mvnconf_proxy_port_valuevar    mvnconf_proxy_port_valuevar = MVNCONF_PROXY_PORT

    #set element contents to nil if not defined:
    %ifndef $mvnconf_proxy_port_valuevar    $mvnconf_proxy_port_valuevar =

    XML_ELEMENT_NAME = port
    XML_ELEMENT_BODY = $mvnconf_proxy_port_valuevar:valueof
    %call xml_line_element
}
EOF

mvnconf_proxy_host := << EOF
{# mvnconf_proxy_host: TERMINAL ELEMENT
    mvnconf_proxy_host_valuevar = MVNCONF_PROXY_HOST_$instance_count:pad:assign
    %ifndef $mvnconf_proxy_host_valuevar    mvnconf_proxy_host_valuevar = MVNCONF_PROXY_HOST

    #set element contents to nil if not defined:
    %ifndef $mvnconf_proxy_host_valuevar    $mvnconf_proxy_host_valuevar =

    XML_ELEMENT_NAME = host
    XML_ELEMENT_BODY = $mvnconf_proxy_host_valuevar:valueof
    %call xml_line_element
}
EOF

mvnconf_proxy_nonProxyHosts := << EOF
{# mvnconf_proxy_nonProxyHosts: TERMINAL ELEMENT
    mvnconf_proxy_nonProxyHosts_valuevar = MVNCONF_PROXY_NONPROXYHOSTS_$instance_count:pad:assign
    %ifndef $mvnconf_proxy_nonProxyHosts_valuevar    mvnconf_proxy_nonProxyHosts_valuevar = MVNCONF_PROXY_NONPROXYHOSTS

    #set element contents to nil if not defined:
    %ifndef $mvnconf_proxy_nonProxyHosts_valuevar    $mvnconf_proxy_nonProxyHosts_valuevar =

    XML_ELEMENT_NAME = nonProxyHosts
    XML_ELEMENT_BODY = $mvnconf_proxy_nonProxyHosts_valuevar:valueof
    %call xml_line_element
}
EOF

mvnconf_proxy_id := << EOF
{# mvnconf_proxy_id: TERMINAL ELEMENT
    mvnconf_proxy_id_valuevar = MVNCONF_PROXY_ID_$instance_count:pad:assign
    %ifndef $mvnconf_proxy_id_valuevar    mvnconf_proxy_id_valuevar = MVNCONF_PROXY_ID

    #set element contents to nil if not defined:
    %ifndef $mvnconf_proxy_id_valuevar    $mvnconf_proxy_id_valuevar =

    XML_ELEMENT_NAME = id
    XML_ELEMENT_BODY = $mvnconf_proxy_id_valuevar:valueof
    %call xml_line_element
}
EOF

{# mvnconf_proxy: NON-TERMINAL ELEMENT
mvnconf_proxy := << EOF
#%eecho ENTER mvnconf_proxy: parent_instance_count=$parent_instance_count
    #parent_instance_count is zero for top element - normalize spec and increment:
    %ifnot $parent_instance_count NORMALIZE RESULT=$MVNCONF_:nameof:xmlcg_normalize_counts
    %ifnot $parent_instance_count %ifnot $NORMALIZE RESULT %eecho mvnconf_proxy: ERROR: MVNCONF_:nameof:xmlcg_normalize_counts FAILED - is xmlcg_ops.pl in your CG_TEMPLATE_PATH?

    %ifnot $parent_instance_count parent_instance_count = 01

    _mvnconf_proxy_save_accumulator = $MACRO_OUTPUT_ACCUMULATOR
    _mvnconf_proxy_save_parent_ic = $parent_instance_count
    parent_instance_count = $instance_count:pad

    #re-assign to temporary accumulator to pick up kids:
    MACRO_OUTPUT_ACCUMULATOR = _mvnconf_proxy_kid_accumulator
    #clear the kid accumulator:
    $MACRO_OUTPUT_ACCUMULATOR =

    #make calls to generate my kid elements:
    ########### GENERATE KIDS: ###########
    { #generate mvnconf_proxy_active terminal element:
#%eecho CALL <T> mvnconf_proxy_active: parent_instance_count=$parent_instance_count

        #did user specify a value for the first instance of this element?
        %ifdef MVNCONF_PROXY_ACTIVE MVNCONF_PROXY_ACTIVE_01 = $MVNCONF_PROXY_ACTIVE
#%eecho B: MVNCONF_PROXY_ACTIVE=$MVNCONF_PROXY_ACTIVE MVNCONF_PROXY_ACTIVE_01=$MVNCONF_PROXY_ACTIVE_01

        #if value is specified, but count is not, then specify count:
        %ifdef MVNCONF_PROXY_ACTIVE_01 %ifndef MVNCONF_PROXY_ACTIVE_COUNT_01 MVNCONF_PROXY_ACTIVE_COUNT_01 = 01..01

#%eecho C: MVNCONF_PROXY_ACTIVE_COUNT=$MVNCONF_PROXY_ACTIVE_COUNT MVNCONF_PROXY_ACTIVE_COUNT_01=$MVNCONF_PROXY_ACTIVE_COUNT_01

        _mvnconf_proxy_active_rangevar = MVNCONF_PROXY_ACTIVE_COUNT_$parent_instance_count

        #if count for this element is unspecified, then only generate if we are generating empties:
        %ifndef $_mvnconf_proxy_active_rangevar %if $MVNCONF_GENERATE_EMPTY_ELEMENTS $_mvnconf_proxy_active_rangevar = 01..01

        #if this is an orphaned value, we attach instance n to parent n:
        %ifndef $_mvnconf_proxy_active_rangevar $_mvnconf_proxy_active_rangevar = $_mvnconf_proxy_active_rangevar:xmlcg_default_value_range

        #if count is now specified, but value is not, then set to nil:
        %ifdef MVNCONF_PROXY_ACTIVE_COUNT_01 %ifndef MVNCONF_PROXY_ACTIVE_01 MVNCONF_PROXY_ACTIVE_01=
#%eecho D: MVNCONF_PROXY_ACTIVE_COUNT_01=$MVNCONF_PROXY_ACTIVE_COUNT_01 MVNCONF_PROXY_ACTIVE_01=$MVNCONF_PROXY_ACTIVE_01

        #if count is specified as a simple count, then adjust to be 01..<count>:
        %if $_mvnconf_proxy_active_rangevar:valueof:isint   $_mvnconf_proxy_active_rangevar = 01..$_mvnconf_proxy_active_rangevar:valueof

        ########
#%eecho CALL <T> mvnconf_proxy_active: _mvnconf_proxy_active_rangevar=$_mvnconf_proxy_active_rangevar -> $_mvnconf_proxy_active_rangevar:valueof
        %foreach instance_count $_mvnconf_proxy_active_rangevar %call mvnconf_proxy_active
        ########
    }
    { #generate mvnconf_proxy_protocol terminal element:
#%eecho CALL <T> mvnconf_proxy_protocol: parent_instance_count=$parent_instance_count

        #did user specify a value for the first instance of this element?
        %ifdef MVNCONF_PROXY_PROTOCOL MVNCONF_PROXY_PROTOCOL_01 = $MVNCONF_PROXY_PROTOCOL
#%eecho B: MVNCONF_PROXY_PROTOCOL=$MVNCONF_PROXY_PROTOCOL MVNCONF_PROXY_PROTOCOL_01=$MVNCONF_PROXY_PROTOCOL_01

        #if value is specified, but count is not, then specify count:
        %ifdef MVNCONF_PROXY_PROTOCOL_01 %ifndef MVNCONF_PROXY_PROTOCOL_COUNT_01 MVNCONF_PROXY_PROTOCOL_COUNT_01 = 01..01

#%eecho C: MVNCONF_PROXY_PROTOCOL_COUNT=$MVNCONF_PROXY_PROTOCOL_COUNT MVNCONF_PROXY_PROTOCOL_COUNT_01=$MVNCONF_PROXY_PROTOCOL_COUNT_01

        _mvnconf_proxy_protocol_rangevar = MVNCONF_PROXY_PROTOCOL_COUNT_$parent_instance_count

        #if count for this element is unspecified, then only generate if we are generating empties:
        %ifndef $_mvnconf_proxy_protocol_rangevar %if $MVNCONF_GENERATE_EMPTY_ELEMENTS $_mvnconf_proxy_protocol_rangevar = 01..01

        #if this is an orphaned value, we attach instance n to parent n:
        %ifndef $_mvnconf_proxy_protocol_rangevar $_mvnconf_proxy_protocol_rangevar = $_mvnconf_proxy_protocol_rangevar:xmlcg_default_value_range

        #if count is now specified, but value is not, then set to nil:
        %ifdef MVNCONF_PROXY_PROTOCOL_COUNT_01 %ifndef MVNCONF_PROXY_PROTOCOL_01 MVNCONF_PROXY_PROTOCOL_01=
#%eecho D: MVNCONF_PROXY_PROTOCOL_COUNT_01=$MVNCONF_PROXY_PROTOCOL_COUNT_01 MVNCONF_PROXY_PROTOCOL_01=$MVNCONF_PROXY_PROTOCOL_01

        #if count is specified as a simple count, then adjust to be 01..<count>:
        %if $_mvnconf_proxy_protocol_rangevar:valueof:isint   $_mvnconf_proxy_protocol_rangevar = 01..$_mvnconf_proxy_protocol_rangevar:valueof

        ########
#%eecho CALL <T> mvnconf_proxy_protocol: _mvnconf_proxy_protocol_rangevar=$_mvnconf_proxy_protocol_rangevar -> $_mvnconf_proxy_protocol_rangevar:valueof
        %foreach instance_count $_mvnconf_proxy_protocol_rangevar %call mvnconf_proxy_protocol
        ########
    }
    { #generate mvnconf_proxy_username terminal element:
#%eecho CALL <T> mvnconf_proxy_username: parent_instance_count=$parent_instance_count

        #did user specify a value for the first instance of this element?
        %ifdef MVNCONF_PROXY_USERNAME MVNCONF_PROXY_USERNAME_01 = $MVNCONF_PROXY_USERNAME
#%eecho B: MVNCONF_PROXY_USERNAME=$MVNCONF_PROXY_USERNAME MVNCONF_PROXY_USERNAME_01=$MVNCONF_PROXY_USERNAME_01

        #if value is specified, but count is not, then specify count:
        %ifdef MVNCONF_PROXY_USERNAME_01 %ifndef MVNCONF_PROXY_USERNAME_COUNT_01 MVNCONF_PROXY_USERNAME_COUNT_01 = 01..01

#%eecho C: MVNCONF_PROXY_USERNAME_COUNT=$MVNCONF_PROXY_USERNAME_COUNT MVNCONF_PROXY_USERNAME_COUNT_01=$MVNCONF_PROXY_USERNAME_COUNT_01

        _mvnconf_proxy_username_rangevar = MVNCONF_PROXY_USERNAME_COUNT_$parent_instance_count

        #if count for this element is unspecified, then only generate if we are generating empties:
        %ifndef $_mvnconf_proxy_username_rangevar %if $MVNCONF_GENERATE_EMPTY_ELEMENTS $_mvnconf_proxy_username_rangevar = 01..01

        #if this is an orphaned value, we attach instance n to parent n:
        %ifndef $_mvnconf_proxy_username_rangevar $_mvnconf_proxy_username_rangevar = $_mvnconf_proxy_username_rangevar:xmlcg_default_value_range

        #if count is now specified, but value is not, then set to nil:
        %ifdef MVNCONF_PROXY_USERNAME_COUNT_01 %ifndef MVNCONF_PROXY_USERNAME_01 MVNCONF_PROXY_USERNAME_01=
#%eecho D: MVNCONF_PROXY_USERNAME_COUNT_01=$MVNCONF_PROXY_USERNAME_COUNT_01 MVNCONF_PROXY_USERNAME_01=$MVNCONF_PROXY_USERNAME_01

        #if count is specified as a simple count, then adjust to be 01..<count>:
        %if $_mvnconf_proxy_username_rangevar:valueof:isint   $_mvnconf_proxy_username_rangevar = 01..$_mvnconf_proxy_username_rangevar:valueof

        ########
#%eecho CALL <T> mvnconf_proxy_username: _mvnconf_proxy_username_rangevar=$_mvnconf_proxy_username_rangevar -> $_mvnconf_proxy_username_rangevar:valueof
        %foreach instance_count $_mvnconf_proxy_username_rangevar %call mvnconf_proxy_username
        ########
    }
    { #generate mvnconf_proxy_password terminal element:
#%eecho CALL <T> mvnconf_proxy_password: parent_instance_count=$parent_instance_count

        #did user specify a value for the first instance of this element?
        %ifdef MVNCONF_PROXY_PASSWORD MVNCONF_PROXY_PASSWORD_01 = $MVNCONF_PROXY_PASSWORD
#%eecho B: MVNCONF_PROXY_PASSWORD=$MVNCONF_PROXY_PASSWORD MVNCONF_PROXY_PASSWORD_01=$MVNCONF_PROXY_PASSWORD_01

        #if value is specified, but count is not, then specify count:
        %ifdef MVNCONF_PROXY_PASSWORD_01 %ifndef MVNCONF_PROXY_PASSWORD_COUNT_01 MVNCONF_PROXY_PASSWORD_COUNT_01 = 01..01

#%eecho C: MVNCONF_PROXY_PASSWORD_COUNT=$MVNCONF_PROXY_PASSWORD_COUNT MVNCONF_PROXY_PASSWORD_COUNT_01=$MVNCONF_PROXY_PASSWORD_COUNT_01

        _mvnconf_proxy_password_rangevar = MVNCONF_PROXY_PASSWORD_COUNT_$parent_instance_count

        #if count for this element is unspecified, then only generate if we are generating empties:
        %ifndef $_mvnconf_proxy_password_rangevar %if $MVNCONF_GENERATE_EMPTY_ELEMENTS $_mvnconf_proxy_password_rangevar = 01..01

        #if this is an orphaned value, we attach instance n to parent n:
        %ifndef $_mvnconf_proxy_password_rangevar $_mvnconf_proxy_password_rangevar = $_mvnconf_proxy_password_rangevar:xmlcg_default_value_range

        #if count is now specified, but value is not, then set to nil:
        %ifdef MVNCONF_PROXY_PASSWORD_COUNT_01 %ifndef MVNCONF_PROXY_PASSWORD_01 MVNCONF_PROXY_PASSWORD_01=
#%eecho D: MVNCONF_PROXY_PASSWORD_COUNT_01=$MVNCONF_PROXY_PASSWORD_COUNT_01 MVNCONF_PROXY_PASSWORD_01=$MVNCONF_PROXY_PASSWORD_01

        #if count is specified as a simple count, then adjust to be 01..<count>:
        %if $_mvnconf_proxy_password_rangevar:valueof:isint   $_mvnconf_proxy_password_rangevar = 01..$_mvnconf_proxy_password_rangevar:valueof

        ########
#%eecho CALL <T> mvnconf_proxy_password: _mvnconf_proxy_password_rangevar=$_mvnconf_proxy_password_rangevar -> $_mvnconf_proxy_password_rangevar:valueof
        %foreach instance_count $_mvnconf_proxy_password_rangevar %call mvnconf_proxy_password
        ########
    }
    { #generate mvnconf_proxy_port terminal element:
#%eecho CALL <T> mvnconf_proxy_port: parent_instance_count=$parent_instance_count

        #did user specify a value for the first instance of this element?
        %ifdef MVNCONF_PROXY_PORT MVNCONF_PROXY_PORT_01 = $MVNCONF_PROXY_PORT
#%eecho B: MVNCONF_PROXY_PORT=$MVNCONF_PROXY_PORT MVNCONF_PROXY_PORT_01=$MVNCONF_PROXY_PORT_01

        #if value is specified, but count is not, then specify count:
        %ifdef MVNCONF_PROXY_PORT_01 %ifndef MVNCONF_PROXY_PORT_COUNT_01 MVNCONF_PROXY_PORT_COUNT_01 = 01..01

#%eecho C: MVNCONF_PROXY_PORT_COUNT=$MVNCONF_PROXY_PORT_COUNT MVNCONF_PROXY_PORT_COUNT_01=$MVNCONF_PROXY_PORT_COUNT_01

        _mvnconf_proxy_port_rangevar = MVNCONF_PROXY_PORT_COUNT_$parent_instance_count

        #if count for this element is unspecified, then only generate if we are generating empties:
        %ifndef $_mvnconf_proxy_port_rangevar %if $MVNCONF_GENERATE_EMPTY_ELEMENTS $_mvnconf_proxy_port_rangevar = 01..01

        #if this is an orphaned value, we attach instance n to parent n:
        %ifndef $_mvnconf_proxy_port_rangevar $_mvnconf_proxy_port_rangevar = $_mvnconf_proxy_port_rangevar:xmlcg_default_value_range

        #if count is now specified, but value is not, then set to nil:
        %ifdef MVNCONF_PROXY_PORT_COUNT_01 %ifndef MVNCONF_PROXY_PORT_01 MVNCONF_PROXY_PORT_01=
#%eecho D: MVNCONF_PROXY_PORT_COUNT_01=$MVNCONF_PROXY_PORT_COUNT_01 MVNCONF_PROXY_PORT_01=$MVNCONF_PROXY_PORT_01

        #if count is specified as a simple count, then adjust to be 01..<count>:
        %if $_mvnconf_proxy_port_rangevar:valueof:isint   $_mvnconf_proxy_port_rangevar = 01..$_mvnconf_proxy_port_rangevar:valueof

        ########
#%eecho CALL <T> mvnconf_proxy_port: _mvnconf_proxy_port_rangevar=$_mvnconf_proxy_port_rangevar -> $_mvnconf_proxy_port_rangevar:valueof
        %foreach instance_count $_mvnconf_proxy_port_rangevar %call mvnconf_proxy_port
        ########
    }
    { #generate mvnconf_proxy_host terminal element:
#%eecho CALL <T> mvnconf_proxy_host: parent_instance_count=$parent_instance_count

        #did user specify a value for the first instance of this element?
        %ifdef MVNCONF_PROXY_HOST MVNCONF_PROXY_HOST_01 = $MVNCONF_PROXY_HOST
#%eecho B: MVNCONF_PROXY_HOST=$MVNCONF_PROXY_HOST MVNCONF_PROXY_HOST_01=$MVNCONF_PROXY_HOST_01

        #if value is specified, but count is not, then specify count:
        %ifdef MVNCONF_PROXY_HOST_01 %ifndef MVNCONF_PROXY_HOST_COUNT_01 MVNCONF_PROXY_HOST_COUNT_01 = 01..01

#%eecho C: MVNCONF_PROXY_HOST_COUNT=$MVNCONF_PROXY_HOST_COUNT MVNCONF_PROXY_HOST_COUNT_01=$MVNCONF_PROXY_HOST_COUNT_01

        _mvnconf_proxy_host_rangevar = MVNCONF_PROXY_HOST_COUNT_$parent_instance_count

        #if count for this element is unspecified, then only generate if we are generating empties:
        %ifndef $_mvnconf_proxy_host_rangevar %if $MVNCONF_GENERATE_EMPTY_ELEMENTS $_mvnconf_proxy_host_rangevar = 01..01

        #if this is an orphaned value, we attach instance n to parent n:
        %ifndef $_mvnconf_proxy_host_rangevar $_mvnconf_proxy_host_rangevar = $_mvnconf_proxy_host_rangevar:xmlcg_default_value_range

        #if count is now specified, but value is not, then set to nil:
        %ifdef MVNCONF_PROXY_HOST_COUNT_01 %ifndef MVNCONF_PROXY_HOST_01 MVNCONF_PROXY_HOST_01=
#%eecho D: MVNCONF_PROXY_HOST_COUNT_01=$MVNCONF_PROXY_HOST_COUNT_01 MVNCONF_PROXY_HOST_01=$MVNCONF_PROXY_HOST_01

        #if count is specified as a simple count, then adjust to be 01..<count>:
        %if $_mvnconf_proxy_host_rangevar:valueof:isint   $_mvnconf_proxy_host_rangevar = 01..$_mvnconf_proxy_host_rangevar:valueof

        ########
#%eecho CALL <T> mvnconf_proxy_host: _mvnconf_proxy_host_rangevar=$_mvnconf_proxy_host_rangevar -> $_mvnconf_proxy_host_rangevar:valueof
        %foreach instance_count $_mvnconf_proxy_host_rangevar %call mvnconf_proxy_host
        ########
    }
    { #generate mvnconf_proxy_nonProxyHosts terminal element:
#%eecho CALL <T> mvnconf_proxy_nonProxyHosts: parent_instance_count=$parent_instance_count

        #did user specify a value for the first instance of this element?
        %ifdef MVNCONF_PROXY_NONPROXYHOSTS MVNCONF_PROXY_NONPROXYHOSTS_01 = $MVNCONF_PROXY_NONPROXYHOSTS
#%eecho B: MVNCONF_PROXY_NONPROXYHOSTS=$MVNCONF_PROXY_NONPROXYHOSTS MVNCONF_PROXY_NONPROXYHOSTS_01=$MVNCONF_PROXY_NONPROXYHOSTS_01

        #if value is specified, but count is not, then specify count:
        %ifdef MVNCONF_PROXY_NONPROXYHOSTS_01 %ifndef MVNCONF_PROXY_NONPROXYHOSTS_COUNT_01 MVNCONF_PROXY_NONPROXYHOSTS_COUNT_01 = 01..01

#%eecho C: MVNCONF_PROXY_NONPROXYHOSTS_COUNT=$MVNCONF_PROXY_NONPROXYHOSTS_COUNT MVNCONF_PROXY_NONPROXYHOSTS_COUNT_01=$MVNCONF_PROXY_NONPROXYHOSTS_COUNT_01

        _mvnconf_proxy_nonProxyHosts_rangevar = MVNCONF_PROXY_NONPROXYHOSTS_COUNT_$parent_instance_count

        #if count for this element is unspecified, then only generate if we are generating empties:
        %ifndef $_mvnconf_proxy_nonProxyHosts_rangevar %if $MVNCONF_GENERATE_EMPTY_ELEMENTS $_mvnconf_proxy_nonProxyHosts_rangevar = 01..01

        #if this is an orphaned value, we attach instance n to parent n:
        %ifndef $_mvnconf_proxy_nonProxyHosts_rangevar $_mvnconf_proxy_nonProxyHosts_rangevar = $_mvnconf_proxy_nonProxyHosts_rangevar:xmlcg_default_value_range

        #if count is now specified, but value is not, then set to nil:
        %ifdef MVNCONF_PROXY_NONPROXYHOSTS_COUNT_01 %ifndef MVNCONF_PROXY_NONPROXYHOSTS_01 MVNCONF_PROXY_NONPROXYHOSTS_01=
#%eecho D: MVNCONF_PROXY_NONPROXYHOSTS_COUNT_01=$MVNCONF_PROXY_NONPROXYHOSTS_COUNT_01 MVNCONF_PROXY_NONPROXYHOSTS_01=$MVNCONF_PROXY_NONPROXYHOSTS_01

        #if count is specified as a simple count, then adjust to be 01..<count>:
        %if $_mvnconf_proxy_nonProxyHosts_rangevar:valueof:isint   $_mvnconf_proxy_nonProxyHosts_rangevar = 01..$_mvnconf_proxy_nonProxyHosts_rangevar:valueof

        ########
#%eecho CALL <T> mvnconf_proxy_nonProxyHosts: _mvnconf_proxy_nonProxyHosts_rangevar=$_mvnconf_proxy_nonProxyHosts_rangevar -> $_mvnconf_proxy_nonProxyHosts_rangevar:valueof
        %foreach instance_count $_mvnconf_proxy_nonProxyHosts_rangevar %call mvnconf_proxy_nonProxyHosts
        ########
    }
    { #generate mvnconf_proxy_id terminal element:
#%eecho CALL <T> mvnconf_proxy_id: parent_instance_count=$parent_instance_count

        #did user specify a value for the first instance of this element?
        %ifdef MVNCONF_PROXY_ID MVNCONF_PROXY_ID_01 = $MVNCONF_PROXY_ID
#%eecho B: MVNCONF_PROXY_ID=$MVNCONF_PROXY_ID MVNCONF_PROXY_ID_01=$MVNCONF_PROXY_ID_01

        #if value is specified, but count is not, then specify count:
        %ifdef MVNCONF_PROXY_ID_01 %ifndef MVNCONF_PROXY_ID_COUNT_01 MVNCONF_PROXY_ID_COUNT_01 = 01..01

#%eecho C: MVNCONF_PROXY_ID_COUNT=$MVNCONF_PROXY_ID_COUNT MVNCONF_PROXY_ID_COUNT_01=$MVNCONF_PROXY_ID_COUNT_01

        _mvnconf_proxy_id_rangevar = MVNCONF_PROXY_ID_COUNT_$parent_instance_count

        #if count for this element is unspecified, then only generate if we are generating empties:
        %ifndef $_mvnconf_proxy_id_rangevar %if $MVNCONF_GENERATE_EMPTY_ELEMENTS $_mvnconf_proxy_id_rangevar = 01..01

        #if this is an orphaned value, we attach instance n to parent n:
        %ifndef $_mvnconf_proxy_id_rangevar $_mvnconf_proxy_id_rangevar = $_mvnconf_proxy_id_rangevar:xmlcg_default_value_range

        #if count is now specified, but value is not, then set to nil:
        %ifdef MVNCONF_PROXY_ID_COUNT_01 %ifndef MVNCONF_PROXY_ID_01 MVNCONF_PROXY_ID_01=
#%eecho D: MVNCONF_PROXY_ID_COUNT_01=$MVNCONF_PROXY_ID_COUNT_01 MVNCONF_PROXY_ID_01=$MVNCONF_PROXY_ID_01

        #if count is specified as a simple count, then adjust to be 01..<count>:
        %if $_mvnconf_proxy_id_rangevar:valueof:isint   $_mvnconf_proxy_id_rangevar = 01..$_mvnconf_proxy_id_rangevar:valueof

        ########
#%eecho CALL <T> mvnconf_proxy_id: _mvnconf_proxy_id_rangevar=$_mvnconf_proxy_id_rangevar -> $_mvnconf_proxy_id_rangevar:valueof
        %foreach instance_count $_mvnconf_proxy_id_rangevar %call mvnconf_proxy_id
        ########
    }
    ###########

    #now generate me:
    XML_ELEMENT_NAME =  proxy
    #the kids are our body:
    XML_ELEMENT_BODY =  $MACRO_OUTPUT_ACCUMULATOR:valueof
    #restore the output accumulator varaible name:
    MACRO_OUTPUT_ACCUMULATOR    = $_mvnconf_proxy_save_accumulator

    %call xml_nested_element

    #restore parent instance count:
    parent_instance_count = $_mvnconf_proxy_save_parent_ic
#%eecho EXIT mvnconf_proxy: parent_instance_count=$parent_instance_count
EOF
}

{# mvnconf_proxies: NON-TERMINAL ELEMENT
mvnconf_proxies := << EOF
#%eecho ENTER mvnconf_proxies: parent_instance_count=$parent_instance_count
    #parent_instance_count is zero for top element - normalize spec and increment:
    %ifnot $parent_instance_count NORMALIZE RESULT=$MVNCONF_:nameof:xmlcg_normalize_counts
    %ifnot $parent_instance_count %ifnot $NORMALIZE RESULT %eecho mvnconf_proxies: ERROR: MVNCONF_:nameof:xmlcg_normalize_counts FAILED - is xmlcg_ops.pl in your CG_TEMPLATE_PATH?

    %ifnot $parent_instance_count parent_instance_count = 01

    _mvnconf_proxies_save_accumulator = $MACRO_OUTPUT_ACCUMULATOR
    _mvnconf_proxies_save_parent_ic = $parent_instance_count
    parent_instance_count = $instance_count:pad

    #re-assign to temporary accumulator to pick up kids:
    MACRO_OUTPUT_ACCUMULATOR = _mvnconf_proxies_kid_accumulator
    #clear the kid accumulator:
    $MACRO_OUTPUT_ACCUMULATOR =

    #make calls to generate my kid elements:
    ########### GENERATE KIDS: ###########
    { #generate mvnconf_proxy non-terminal element:
#%eecho A: CALL <NT> mvnconf_proxy: parent_instance_count=$parent_instance_count

        _mvnconf_proxy_rangevar = MVNCONF_PROXY_COUNT_$parent_instance_count

        #if count for this non-terminal element is unspecified, then only generate if we are generating empties:
#%eecho B: CALL <NT> mvnconf_proxy: _mvnconf_proxy_rangevar=$_mvnconf_proxy_rangevar -> $_mvnconf_proxy_rangevar:valueof
        %ifndef $_mvnconf_proxy_rangevar %if $MVNCONF_GENERATE_EMPTY_ELEMENTS $_mvnconf_proxy_rangevar = 01..01

        #if count is still undefined for this terminal, then we're done:
        %ifndef $_mvnconf_proxy_rangevar $_mvnconf_proxy_rangevar = 01..00

        #if count is specified as a simple count, then adjust to be 01..<count>:
        %if $_mvnconf_proxy_rangevar:valueof:isint   $_mvnconf_proxy_rangevar = 01..$_mvnconf_proxy_rangevar:valueof

        ########
#%eecho C: CALL <NT> mvnconf_proxy: _mvnconf_proxy_rangevar=$_mvnconf_proxy_rangevar -> $_mvnconf_proxy_rangevar:valueof
        %foreach instance_count $_mvnconf_proxy_rangevar %call mvnconf_proxy
        ########
    }
    ###########

    #now generate me:
    XML_ELEMENT_NAME =  proxies
    #the kids are our body:
    XML_ELEMENT_BODY =  $MACRO_OUTPUT_ACCUMULATOR:valueof
    #restore the output accumulator varaible name:
    MACRO_OUTPUT_ACCUMULATOR    = $_mvnconf_proxies_save_accumulator

    %call xml_nested_element

    #restore parent instance count:
    parent_instance_count = $_mvnconf_proxies_save_parent_ic
#%eecho EXIT mvnconf_proxies: parent_instance_count=$parent_instance_count
EOF
}

mvnconf_server_username := << EOF
{# mvnconf_server_username: TERMINAL ELEMENT
    mvnconf_server_username_valuevar = MVNCONF_SERVER_USERNAME_$instance_count:pad:assign
    %ifndef $mvnconf_server_username_valuevar    mvnconf_server_username_valuevar = MVNCONF_SERVER_USERNAME

    #set element contents to nil if not defined:
    %ifndef $mvnconf_server_username_valuevar    $mvnconf_server_username_valuevar =

    XML_ELEMENT_NAME = username
    XML_ELEMENT_BODY = $mvnconf_server_username_valuevar:valueof
    %call xml_line_element
}
EOF

mvnconf_server_password := << EOF
{# mvnconf_server_password: TERMINAL ELEMENT
    mvnconf_server_password_valuevar = MVNCONF_SERVER_PASSWORD_$instance_count:pad:assign
    %ifndef $mvnconf_server_password_valuevar    mvnconf_server_password_valuevar = MVNCONF_SERVER_PASSWORD

    #set element contents to nil if not defined:
    %ifndef $mvnconf_server_password_valuevar    $mvnconf_server_password_valuevar =

    XML_ELEMENT_NAME = password
    XML_ELEMENT_BODY = $mvnconf_server_password_valuevar:valueof
    %call xml_line_element
}
EOF

mvnconf_server_privateKey := << EOF
{# mvnconf_server_privateKey: TERMINAL ELEMENT
    mvnconf_server_privateKey_valuevar = MVNCONF_SERVER_PRIVATEKEY_$instance_count:pad:assign
    %ifndef $mvnconf_server_privateKey_valuevar    mvnconf_server_privateKey_valuevar = MVNCONF_SERVER_PRIVATEKEY

    #set element contents to nil if not defined:
    %ifndef $mvnconf_server_privateKey_valuevar    $mvnconf_server_privateKey_valuevar =

    XML_ELEMENT_NAME = privateKey
    XML_ELEMENT_BODY = $mvnconf_server_privateKey_valuevar:valueof
    %call xml_line_element
}
EOF

mvnconf_server_passphrase := << EOF
{# mvnconf_server_passphrase: TERMINAL ELEMENT
    mvnconf_server_passphrase_valuevar = MVNCONF_SERVER_PASSPHRASE_$instance_count:pad:assign
    %ifndef $mvnconf_server_passphrase_valuevar    mvnconf_server_passphrase_valuevar = MVNCONF_SERVER_PASSPHRASE

    #set element contents to nil if not defined:
    %ifndef $mvnconf_server_passphrase_valuevar    $mvnconf_server_passphrase_valuevar =

    XML_ELEMENT_NAME = passphrase
    XML_ELEMENT_BODY = $mvnconf_server_passphrase_valuevar:valueof
    %call xml_line_element
}
EOF

mvnconf_server_filePermissions := << EOF
{# mvnconf_server_filePermissions: TERMINAL ELEMENT
    mvnconf_server_filePermissions_valuevar = MVNCONF_SERVER_FILEPERMISSIONS_$instance_count:pad:assign
    %ifndef $mvnconf_server_filePermissions_valuevar    mvnconf_server_filePermissions_valuevar = MVNCONF_SERVER_FILEPERMISSIONS

    #set element contents to nil if not defined:
    %ifndef $mvnconf_server_filePermissions_valuevar    $mvnconf_server_filePermissions_valuevar =

    XML_ELEMENT_NAME = filePermissions
    XML_ELEMENT_BODY = $mvnconf_server_filePermissions_valuevar:valueof
    %call xml_line_element
}
EOF

mvnconf_server_directoryPermissions := << EOF
{# mvnconf_server_directoryPermissions: TERMINAL ELEMENT
    mvnconf_server_directoryPermissions_valuevar = MVNCONF_SERVER_DIRECTORYPERMISSIONS_$instance_count:pad:assign
    %ifndef $mvnconf_server_directoryPermissions_valuevar    mvnconf_server_directoryPermissions_valuevar = MVNCONF_SERVER_DIRECTORYPERMISSIONS

    #set element contents to nil if not defined:
    %ifndef $mvnconf_server_directoryPermissions_valuevar    $mvnconf_server_directoryPermissions_valuevar =

    XML_ELEMENT_NAME = directoryPermissions
    XML_ELEMENT_BODY = $mvnconf_server_directoryPermissions_valuevar:valueof
    %call xml_line_element
}
EOF

mvnconf_server_configuration := << EOF
{# mvnconf_server_configuration: TERMINAL ELEMENT
    mvnconf_server_configuration_valuevar = MVNCONF_SERVER_CONFIGURATION_$instance_count:pad:assign
    %ifndef $mvnconf_server_configuration_valuevar    mvnconf_server_configuration_valuevar = MVNCONF_SERVER_CONFIGURATION

    #set element contents to nil if not defined:
    %ifndef $mvnconf_server_configuration_valuevar    $mvnconf_server_configuration_valuevar =

    XML_ELEMENT_NAME = configuration
    XML_ELEMENT_BODY = $mvnconf_server_configuration_valuevar:valueof
    %call xml_line_element
}
EOF

mvnconf_server_id := << EOF
{# mvnconf_server_id: TERMINAL ELEMENT
    mvnconf_server_id_valuevar = MVNCONF_SERVER_ID_$instance_count:pad:assign
    %ifndef $mvnconf_server_id_valuevar    mvnconf_server_id_valuevar = MVNCONF_SERVER_ID

    #set element contents to nil if not defined:
    %ifndef $mvnconf_server_id_valuevar    $mvnconf_server_id_valuevar =

    XML_ELEMENT_NAME = id
    XML_ELEMENT_BODY = $mvnconf_server_id_valuevar:valueof
    %call xml_line_element
}
EOF

{# mvnconf_server: NON-TERMINAL ELEMENT
mvnconf_server := << EOF
#%eecho ENTER mvnconf_server: parent_instance_count=$parent_instance_count
    #parent_instance_count is zero for top element - normalize spec and increment:
    %ifnot $parent_instance_count NORMALIZE RESULT=$MVNCONF_:nameof:xmlcg_normalize_counts
    %ifnot $parent_instance_count %ifnot $NORMALIZE RESULT %eecho mvnconf_server: ERROR: MVNCONF_:nameof:xmlcg_normalize_counts FAILED - is xmlcg_ops.pl in your CG_TEMPLATE_PATH?

    %ifnot $parent_instance_count parent_instance_count = 01

    _mvnconf_server_save_accumulator = $MACRO_OUTPUT_ACCUMULATOR
    _mvnconf_server_save_parent_ic = $parent_instance_count
    parent_instance_count = $instance_count:pad

    #re-assign to temporary accumulator to pick up kids:
    MACRO_OUTPUT_ACCUMULATOR = _mvnconf_server_kid_accumulator
    #clear the kid accumulator:
    $MACRO_OUTPUT_ACCUMULATOR =

    #make calls to generate my kid elements:
    ########### GENERATE KIDS: ###########
    { #generate mvnconf_server_username terminal element:
#%eecho CALL <T> mvnconf_server_username: parent_instance_count=$parent_instance_count

        #did user specify a value for the first instance of this element?
        %ifdef MVNCONF_SERVER_USERNAME MVNCONF_SERVER_USERNAME_01 = $MVNCONF_SERVER_USERNAME
#%eecho B: MVNCONF_SERVER_USERNAME=$MVNCONF_SERVER_USERNAME MVNCONF_SERVER_USERNAME_01=$MVNCONF_SERVER_USERNAME_01

        #if value is specified, but count is not, then specify count:
        %ifdef MVNCONF_SERVER_USERNAME_01 %ifndef MVNCONF_SERVER_USERNAME_COUNT_01 MVNCONF_SERVER_USERNAME_COUNT_01 = 01..01

#%eecho C: MVNCONF_SERVER_USERNAME_COUNT=$MVNCONF_SERVER_USERNAME_COUNT MVNCONF_SERVER_USERNAME_COUNT_01=$MVNCONF_SERVER_USERNAME_COUNT_01

        _mvnconf_server_username_rangevar = MVNCONF_SERVER_USERNAME_COUNT_$parent_instance_count

        #if count for this element is unspecified, then only generate if we are generating empties:
        %ifndef $_mvnconf_server_username_rangevar %if $MVNCONF_GENERATE_EMPTY_ELEMENTS $_mvnconf_server_username_rangevar = 01..01

        #if this is an orphaned value, we attach instance n to parent n:
        %ifndef $_mvnconf_server_username_rangevar $_mvnconf_server_username_rangevar = $_mvnconf_server_username_rangevar:xmlcg_default_value_range

        #if count is now specified, but value is not, then set to nil:
        %ifdef MVNCONF_SERVER_USERNAME_COUNT_01 %ifndef MVNCONF_SERVER_USERNAME_01 MVNCONF_SERVER_USERNAME_01=
#%eecho D: MVNCONF_SERVER_USERNAME_COUNT_01=$MVNCONF_SERVER_USERNAME_COUNT_01 MVNCONF_SERVER_USERNAME_01=$MVNCONF_SERVER_USERNAME_01

        #if count is specified as a simple count, then adjust to be 01..<count>:
        %if $_mvnconf_server_username_rangevar:valueof:isint   $_mvnconf_server_username_rangevar = 01..$_mvnconf_server_username_rangevar:valueof

        ########
#%eecho CALL <T> mvnconf_server_username: _mvnconf_server_username_rangevar=$_mvnconf_server_username_rangevar -> $_mvnconf_server_username_rangevar:valueof
        %foreach instance_count $_mvnconf_server_username_rangevar %call mvnconf_server_username
        ########
    }
    { #generate mvnconf_server_password terminal element:
#%eecho CALL <T> mvnconf_server_password: parent_instance_count=$parent_instance_count

        #did user specify a value for the first instance of this element?
        %ifdef MVNCONF_SERVER_PASSWORD MVNCONF_SERVER_PASSWORD_01 = $MVNCONF_SERVER_PASSWORD
#%eecho B: MVNCONF_SERVER_PASSWORD=$MVNCONF_SERVER_PASSWORD MVNCONF_SERVER_PASSWORD_01=$MVNCONF_SERVER_PASSWORD_01

        #if value is specified, but count is not, then specify count:
        %ifdef MVNCONF_SERVER_PASSWORD_01 %ifndef MVNCONF_SERVER_PASSWORD_COUNT_01 MVNCONF_SERVER_PASSWORD_COUNT_01 = 01..01

#%eecho C: MVNCONF_SERVER_PASSWORD_COUNT=$MVNCONF_SERVER_PASSWORD_COUNT MVNCONF_SERVER_PASSWORD_COUNT_01=$MVNCONF_SERVER_PASSWORD_COUNT_01

        _mvnconf_server_password_rangevar = MVNCONF_SERVER_PASSWORD_COUNT_$parent_instance_count

        #if count for this element is unspecified, then only generate if we are generating empties:
        %ifndef $_mvnconf_server_password_rangevar %if $MVNCONF_GENERATE_EMPTY_ELEMENTS $_mvnconf_server_password_rangevar = 01..01

        #if this is an orphaned value, we attach instance n to parent n:
        %ifndef $_mvnconf_server_password_rangevar $_mvnconf_server_password_rangevar = $_mvnconf_server_password_rangevar:xmlcg_default_value_range

        #if count is now specified, but value is not, then set to nil:
        %ifdef MVNCONF_SERVER_PASSWORD_COUNT_01 %ifndef MVNCONF_SERVER_PASSWORD_01 MVNCONF_SERVER_PASSWORD_01=
#%eecho D: MVNCONF_SERVER_PASSWORD_COUNT_01=$MVNCONF_SERVER_PASSWORD_COUNT_01 MVNCONF_SERVER_PASSWORD_01=$MVNCONF_SERVER_PASSWORD_01

        #if count is specified as a simple count, then adjust to be 01..<count>:
        %if $_mvnconf_server_password_rangevar:valueof:isint   $_mvnconf_server_password_rangevar = 01..$_mvnconf_server_password_rangevar:valueof

        ########
#%eecho CALL <T> mvnconf_server_password: _mvnconf_server_password_rangevar=$_mvnconf_server_password_rangevar -> $_mvnconf_server_password_rangevar:valueof
        %foreach instance_count $_mvnconf_server_password_rangevar %call mvnconf_server_password
        ########
    }
    { #generate mvnconf_server_privateKey terminal element:
#%eecho CALL <T> mvnconf_server_privateKey: parent_instance_count=$parent_instance_count

        #did user specify a value for the first instance of this element?
        %ifdef MVNCONF_SERVER_PRIVATEKEY MVNCONF_SERVER_PRIVATEKEY_01 = $MVNCONF_SERVER_PRIVATEKEY
#%eecho B: MVNCONF_SERVER_PRIVATEKEY=$MVNCONF_SERVER_PRIVATEKEY MVNCONF_SERVER_PRIVATEKEY_01=$MVNCONF_SERVER_PRIVATEKEY_01

        #if value is specified, but count is not, then specify count:
        %ifdef MVNCONF_SERVER_PRIVATEKEY_01 %ifndef MVNCONF_SERVER_PRIVATEKEY_COUNT_01 MVNCONF_SERVER_PRIVATEKEY_COUNT_01 = 01..01

#%eecho C: MVNCONF_SERVER_PRIVATEKEY_COUNT=$MVNCONF_SERVER_PRIVATEKEY_COUNT MVNCONF_SERVER_PRIVATEKEY_COUNT_01=$MVNCONF_SERVER_PRIVATEKEY_COUNT_01

        _mvnconf_server_privateKey_rangevar = MVNCONF_SERVER_PRIVATEKEY_COUNT_$parent_instance_count

        #if count for this element is unspecified, then only generate if we are generating empties:
        %ifndef $_mvnconf_server_privateKey_rangevar %if $MVNCONF_GENERATE_EMPTY_ELEMENTS $_mvnconf_server_privateKey_rangevar = 01..01

        #if this is an orphaned value, we attach instance n to parent n:
        %ifndef $_mvnconf_server_privateKey_rangevar $_mvnconf_server_privateKey_rangevar = $_mvnconf_server_privateKey_rangevar:xmlcg_default_value_range

        #if count is now specified, but value is not, then set to nil:
        %ifdef MVNCONF_SERVER_PRIVATEKEY_COUNT_01 %ifndef MVNCONF_SERVER_PRIVATEKEY_01 MVNCONF_SERVER_PRIVATEKEY_01=
#%eecho D: MVNCONF_SERVER_PRIVATEKEY_COUNT_01=$MVNCONF_SERVER_PRIVATEKEY_COUNT_01 MVNCONF_SERVER_PRIVATEKEY_01=$MVNCONF_SERVER_PRIVATEKEY_01

        #if count is specified as a simple count, then adjust to be 01..<count>:
        %if $_mvnconf_server_privateKey_rangevar:valueof:isint   $_mvnconf_server_privateKey_rangevar = 01..$_mvnconf_server_privateKey_rangevar:valueof

        ########
#%eecho CALL <T> mvnconf_server_privateKey: _mvnconf_server_privateKey_rangevar=$_mvnconf_server_privateKey_rangevar -> $_mvnconf_server_privateKey_rangevar:valueof
        %foreach instance_count $_mvnconf_server_privateKey_rangevar %call mvnconf_server_privateKey
        ########
    }
    { #generate mvnconf_server_passphrase terminal element:
#%eecho CALL <T> mvnconf_server_passphrase: parent_instance_count=$parent_instance_count

        #did user specify a value for the first instance of this element?
        %ifdef MVNCONF_SERVER_PASSPHRASE MVNCONF_SERVER_PASSPHRASE_01 = $MVNCONF_SERVER_PASSPHRASE
#%eecho B: MVNCONF_SERVER_PASSPHRASE=$MVNCONF_SERVER_PASSPHRASE MVNCONF_SERVER_PASSPHRASE_01=$MVNCONF_SERVER_PASSPHRASE_01

        #if value is specified, but count is not, then specify count:
        %ifdef MVNCONF_SERVER_PASSPHRASE_01 %ifndef MVNCONF_SERVER_PASSPHRASE_COUNT_01 MVNCONF_SERVER_PASSPHRASE_COUNT_01 = 01..01

#%eecho C: MVNCONF_SERVER_PASSPHRASE_COUNT=$MVNCONF_SERVER_PASSPHRASE_COUNT MVNCONF_SERVER_PASSPHRASE_COUNT_01=$MVNCONF_SERVER_PASSPHRASE_COUNT_01

        _mvnconf_server_passphrase_rangevar = MVNCONF_SERVER_PASSPHRASE_COUNT_$parent_instance_count

        #if count for this element is unspecified, then only generate if we are generating empties:
        %ifndef $_mvnconf_server_passphrase_rangevar %if $MVNCONF_GENERATE_EMPTY_ELEMENTS $_mvnconf_server_passphrase_rangevar = 01..01

        #if this is an orphaned value, we attach instance n to parent n:
        %ifndef $_mvnconf_server_passphrase_rangevar $_mvnconf_server_passphrase_rangevar = $_mvnconf_server_passphrase_rangevar:xmlcg_default_value_range

        #if count is now specified, but value is not, then set to nil:
        %ifdef MVNCONF_SERVER_PASSPHRASE_COUNT_01 %ifndef MVNCONF_SERVER_PASSPHRASE_01 MVNCONF_SERVER_PASSPHRASE_01=
#%eecho D: MVNCONF_SERVER_PASSPHRASE_COUNT_01=$MVNCONF_SERVER_PASSPHRASE_COUNT_01 MVNCONF_SERVER_PASSPHRASE_01=$MVNCONF_SERVER_PASSPHRASE_01

        #if count is specified as a simple count, then adjust to be 01..<count>:
        %if $_mvnconf_server_passphrase_rangevar:valueof:isint   $_mvnconf_server_passphrase_rangevar = 01..$_mvnconf_server_passphrase_rangevar:valueof

        ########
#%eecho CALL <T> mvnconf_server_passphrase: _mvnconf_server_passphrase_rangevar=$_mvnconf_server_passphrase_rangevar -> $_mvnconf_server_passphrase_rangevar:valueof
        %foreach instance_count $_mvnconf_server_passphrase_rangevar %call mvnconf_server_passphrase
        ########
    }
    { #generate mvnconf_server_filePermissions terminal element:
#%eecho CALL <T> mvnconf_server_filePermissions: parent_instance_count=$parent_instance_count

        #did user specify a value for the first instance of this element?
        %ifdef MVNCONF_SERVER_FILEPERMISSIONS MVNCONF_SERVER_FILEPERMISSIONS_01 = $MVNCONF_SERVER_FILEPERMISSIONS
#%eecho B: MVNCONF_SERVER_FILEPERMISSIONS=$MVNCONF_SERVER_FILEPERMISSIONS MVNCONF_SERVER_FILEPERMISSIONS_01=$MVNCONF_SERVER_FILEPERMISSIONS_01

        #if value is specified, but count is not, then specify count:
        %ifdef MVNCONF_SERVER_FILEPERMISSIONS_01 %ifndef MVNCONF_SERVER_FILEPERMISSIONS_COUNT_01 MVNCONF_SERVER_FILEPERMISSIONS_COUNT_01 = 01..01

#%eecho C: MVNCONF_SERVER_FILEPERMISSIONS_COUNT=$MVNCONF_SERVER_FILEPERMISSIONS_COUNT MVNCONF_SERVER_FILEPERMISSIONS_COUNT_01=$MVNCONF_SERVER_FILEPERMISSIONS_COUNT_01

        _mvnconf_server_filePermissions_rangevar = MVNCONF_SERVER_FILEPERMISSIONS_COUNT_$parent_instance_count

        #if count for this element is unspecified, then only generate if we are generating empties:
        %ifndef $_mvnconf_server_filePermissions_rangevar %if $MVNCONF_GENERATE_EMPTY_ELEMENTS $_mvnconf_server_filePermissions_rangevar = 01..01

        #if this is an orphaned value, we attach instance n to parent n:
        %ifndef $_mvnconf_server_filePermissions_rangevar $_mvnconf_server_filePermissions_rangevar = $_mvnconf_server_filePermissions_rangevar:xmlcg_default_value_range

        #if count is now specified, but value is not, then set to nil:
        %ifdef MVNCONF_SERVER_FILEPERMISSIONS_COUNT_01 %ifndef MVNCONF_SERVER_FILEPERMISSIONS_01 MVNCONF_SERVER_FILEPERMISSIONS_01=
#%eecho D: MVNCONF_SERVER_FILEPERMISSIONS_COUNT_01=$MVNCONF_SERVER_FILEPERMISSIONS_COUNT_01 MVNCONF_SERVER_FILEPERMISSIONS_01=$MVNCONF_SERVER_FILEPERMISSIONS_01

        #if count is specified as a simple count, then adjust to be 01..<count>:
        %if $_mvnconf_server_filePermissions_rangevar:valueof:isint   $_mvnconf_server_filePermissions_rangevar = 01..$_mvnconf_server_filePermissions_rangevar:valueof

        ########
#%eecho CALL <T> mvnconf_server_filePermissions: _mvnconf_server_filePermissions_rangevar=$_mvnconf_server_filePermissions_rangevar -> $_mvnconf_server_filePermissions_rangevar:valueof
        %foreach instance_count $_mvnconf_server_filePermissions_rangevar %call mvnconf_server_filePermissions
        ########
    }
    { #generate mvnconf_server_directoryPermissions terminal element:
#%eecho CALL <T> mvnconf_server_directoryPermissions: parent_instance_count=$parent_instance_count

        #did user specify a value for the first instance of this element?
        %ifdef MVNCONF_SERVER_DIRECTORYPERMISSIONS MVNCONF_SERVER_DIRECTORYPERMISSIONS_01 = $MVNCONF_SERVER_DIRECTORYPERMISSIONS
#%eecho B: MVNCONF_SERVER_DIRECTORYPERMISSIONS=$MVNCONF_SERVER_DIRECTORYPERMISSIONS MVNCONF_SERVER_DIRECTORYPERMISSIONS_01=$MVNCONF_SERVER_DIRECTORYPERMISSIONS_01

        #if value is specified, but count is not, then specify count:
        %ifdef MVNCONF_SERVER_DIRECTORYPERMISSIONS_01 %ifndef MVNCONF_SERVER_DIRECTORYPERMISSIONS_COUNT_01 MVNCONF_SERVER_DIRECTORYPERMISSIONS_COUNT_01 = 01..01

#%eecho C: MVNCONF_SERVER_DIRECTORYPERMISSIONS_COUNT=$MVNCONF_SERVER_DIRECTORYPERMISSIONS_COUNT MVNCONF_SERVER_DIRECTORYPERMISSIONS_COUNT_01=$MVNCONF_SERVER_DIRECTORYPERMISSIONS_COUNT_01

        _mvnconf_server_directoryPermissions_rangevar = MVNCONF_SERVER_DIRECTORYPERMISSIONS_COUNT_$parent_instance_count

        #if count for this element is unspecified, then only generate if we are generating empties:
        %ifndef $_mvnconf_server_directoryPermissions_rangevar %if $MVNCONF_GENERATE_EMPTY_ELEMENTS $_mvnconf_server_directoryPermissions_rangevar = 01..01

        #if this is an orphaned value, we attach instance n to parent n:
        %ifndef $_mvnconf_server_directoryPermissions_rangevar $_mvnconf_server_directoryPermissions_rangevar = $_mvnconf_server_directoryPermissions_rangevar:xmlcg_default_value_range

        #if count is now specified, but value is not, then set to nil:
        %ifdef MVNCONF_SERVER_DIRECTORYPERMISSIONS_COUNT_01 %ifndef MVNCONF_SERVER_DIRECTORYPERMISSIONS_01 MVNCONF_SERVER_DIRECTORYPERMISSIONS_01=
#%eecho D: MVNCONF_SERVER_DIRECTORYPERMISSIONS_COUNT_01=$MVNCONF_SERVER_DIRECTORYPERMISSIONS_COUNT_01 MVNCONF_SERVER_DIRECTORYPERMISSIONS_01=$MVNCONF_SERVER_DIRECTORYPERMISSIONS_01

        #if count is specified as a simple count, then adjust to be 01..<count>:
        %if $_mvnconf_server_directoryPermissions_rangevar:valueof:isint   $_mvnconf_server_directoryPermissions_rangevar = 01..$_mvnconf_server_directoryPermissions_rangevar:valueof

        ########
#%eecho CALL <T> mvnconf_server_directoryPermissions: _mvnconf_server_directoryPermissions_rangevar=$_mvnconf_server_directoryPermissions_rangevar -> $_mvnconf_server_directoryPermissions_rangevar:valueof
        %foreach instance_count $_mvnconf_server_directoryPermissions_rangevar %call mvnconf_server_directoryPermissions
        ########
    }
    { #generate mvnconf_server_configuration terminal element:
#%eecho CALL <T> mvnconf_server_configuration: parent_instance_count=$parent_instance_count

        #did user specify a value for the first instance of this element?
        %ifdef MVNCONF_SERVER_CONFIGURATION MVNCONF_SERVER_CONFIGURATION_01 = $MVNCONF_SERVER_CONFIGURATION
#%eecho B: MVNCONF_SERVER_CONFIGURATION=$MVNCONF_SERVER_CONFIGURATION MVNCONF_SERVER_CONFIGURATION_01=$MVNCONF_SERVER_CONFIGURATION_01

        #if value is specified, but count is not, then specify count:
        %ifdef MVNCONF_SERVER_CONFIGURATION_01 %ifndef MVNCONF_SERVER_CONFIGURATION_COUNT_01 MVNCONF_SERVER_CONFIGURATION_COUNT_01 = 01..01

#%eecho C: MVNCONF_SERVER_CONFIGURATION_COUNT=$MVNCONF_SERVER_CONFIGURATION_COUNT MVNCONF_SERVER_CONFIGURATION_COUNT_01=$MVNCONF_SERVER_CONFIGURATION_COUNT_01

        _mvnconf_server_configuration_rangevar = MVNCONF_SERVER_CONFIGURATION_COUNT_$parent_instance_count

        #if count for this element is unspecified, then only generate if we are generating empties:
        %ifndef $_mvnconf_server_configuration_rangevar %if $MVNCONF_GENERATE_EMPTY_ELEMENTS $_mvnconf_server_configuration_rangevar = 01..01

        #if this is an orphaned value, we attach instance n to parent n:
        %ifndef $_mvnconf_server_configuration_rangevar $_mvnconf_server_configuration_rangevar = $_mvnconf_server_configuration_rangevar:xmlcg_default_value_range

        #if count is now specified, but value is not, then set to nil:
        %ifdef MVNCONF_SERVER_CONFIGURATION_COUNT_01 %ifndef MVNCONF_SERVER_CONFIGURATION_01 MVNCONF_SERVER_CONFIGURATION_01=
#%eecho D: MVNCONF_SERVER_CONFIGURATION_COUNT_01=$MVNCONF_SERVER_CONFIGURATION_COUNT_01 MVNCONF_SERVER_CONFIGURATION_01=$MVNCONF_SERVER_CONFIGURATION_01

        #if count is specified as a simple count, then adjust to be 01..<count>:
        %if $_mvnconf_server_configuration_rangevar:valueof:isint   $_mvnconf_server_configuration_rangevar = 01..$_mvnconf_server_configuration_rangevar:valueof

        ########
#%eecho CALL <T> mvnconf_server_configuration: _mvnconf_server_configuration_rangevar=$_mvnconf_server_configuration_rangevar -> $_mvnconf_server_configuration_rangevar:valueof
        %foreach instance_count $_mvnconf_server_configuration_rangevar %call mvnconf_server_configuration
        ########
    }
    { #generate mvnconf_server_id terminal element:
#%eecho CALL <T> mvnconf_server_id: parent_instance_count=$parent_instance_count

        #did user specify a value for the first instance of this element?
        %ifdef MVNCONF_SERVER_ID MVNCONF_SERVER_ID_01 = $MVNCONF_SERVER_ID
#%eecho B: MVNCONF_SERVER_ID=$MVNCONF_SERVER_ID MVNCONF_SERVER_ID_01=$MVNCONF_SERVER_ID_01

        #if value is specified, but count is not, then specify count:
        %ifdef MVNCONF_SERVER_ID_01 %ifndef MVNCONF_SERVER_ID_COUNT_01 MVNCONF_SERVER_ID_COUNT_01 = 01..01

#%eecho C: MVNCONF_SERVER_ID_COUNT=$MVNCONF_SERVER_ID_COUNT MVNCONF_SERVER_ID_COUNT_01=$MVNCONF_SERVER_ID_COUNT_01

        _mvnconf_server_id_rangevar = MVNCONF_SERVER_ID_COUNT_$parent_instance_count

        #if count for this element is unspecified, then only generate if we are generating empties:
        %ifndef $_mvnconf_server_id_rangevar %if $MVNCONF_GENERATE_EMPTY_ELEMENTS $_mvnconf_server_id_rangevar = 01..01

        #if this is an orphaned value, we attach instance n to parent n:
        %ifndef $_mvnconf_server_id_rangevar $_mvnconf_server_id_rangevar = $_mvnconf_server_id_rangevar:xmlcg_default_value_range

        #if count is now specified, but value is not, then set to nil:
        %ifdef MVNCONF_SERVER_ID_COUNT_01 %ifndef MVNCONF_SERVER_ID_01 MVNCONF_SERVER_ID_01=
#%eecho D: MVNCONF_SERVER_ID_COUNT_01=$MVNCONF_SERVER_ID_COUNT_01 MVNCONF_SERVER_ID_01=$MVNCONF_SERVER_ID_01

        #if count is specified as a simple count, then adjust to be 01..<count>:
        %if $_mvnconf_server_id_rangevar:valueof:isint   $_mvnconf_server_id_rangevar = 01..$_mvnconf_server_id_rangevar:valueof

        ########
#%eecho CALL <T> mvnconf_server_id: _mvnconf_server_id_rangevar=$_mvnconf_server_id_rangevar -> $_mvnconf_server_id_rangevar:valueof
        %foreach instance_count $_mvnconf_server_id_rangevar %call mvnconf_server_id
        ########
    }
    ###########

    #now generate me:
    XML_ELEMENT_NAME =  server
    #the kids are our body:
    XML_ELEMENT_BODY =  $MACRO_OUTPUT_ACCUMULATOR:valueof
    #restore the output accumulator varaible name:
    MACRO_OUTPUT_ACCUMULATOR    = $_mvnconf_server_save_accumulator

    %call xml_nested_element

    #restore parent instance count:
    parent_instance_count = $_mvnconf_server_save_parent_ic
#%eecho EXIT mvnconf_server: parent_instance_count=$parent_instance_count
EOF
}

{# mvnconf_servers: NON-TERMINAL ELEMENT
mvnconf_servers := << EOF
#%eecho ENTER mvnconf_servers: parent_instance_count=$parent_instance_count
    #parent_instance_count is zero for top element - normalize spec and increment:
    %ifnot $parent_instance_count NORMALIZE RESULT=$MVNCONF_:nameof:xmlcg_normalize_counts
    %ifnot $parent_instance_count %ifnot $NORMALIZE RESULT %eecho mvnconf_servers: ERROR: MVNCONF_:nameof:xmlcg_normalize_counts FAILED - is xmlcg_ops.pl in your CG_TEMPLATE_PATH?

    %ifnot $parent_instance_count parent_instance_count = 01

    _mvnconf_servers_save_accumulator = $MACRO_OUTPUT_ACCUMULATOR
    _mvnconf_servers_save_parent_ic = $parent_instance_count
    parent_instance_count = $instance_count:pad

    #re-assign to temporary accumulator to pick up kids:
    MACRO_OUTPUT_ACCUMULATOR = _mvnconf_servers_kid_accumulator
    #clear the kid accumulator:
    $MACRO_OUTPUT_ACCUMULATOR =

    #make calls to generate my kid elements:
    ########### GENERATE KIDS: ###########
    { #generate mvnconf_server non-terminal element:
#%eecho A: CALL <NT> mvnconf_server: parent_instance_count=$parent_instance_count

        _mvnconf_server_rangevar = MVNCONF_SERVER_COUNT_$parent_instance_count

        #if count for this non-terminal element is unspecified, then only generate if we are generating empties:
#%eecho B: CALL <NT> mvnconf_server: _mvnconf_server_rangevar=$_mvnconf_server_rangevar -> $_mvnconf_server_rangevar:valueof
        %ifndef $_mvnconf_server_rangevar %if $MVNCONF_GENERATE_EMPTY_ELEMENTS $_mvnconf_server_rangevar = 01..01

        #if count is still undefined for this terminal, then we're done:
        %ifndef $_mvnconf_server_rangevar $_mvnconf_server_rangevar = 01..00

        #if count is specified as a simple count, then adjust to be 01..<count>:
        %if $_mvnconf_server_rangevar:valueof:isint   $_mvnconf_server_rangevar = 01..$_mvnconf_server_rangevar:valueof

        ########
#%eecho C: CALL <NT> mvnconf_server: _mvnconf_server_rangevar=$_mvnconf_server_rangevar -> $_mvnconf_server_rangevar:valueof
        %foreach instance_count $_mvnconf_server_rangevar %call mvnconf_server
        ########
    }
    ###########

    #now generate me:
    XML_ELEMENT_NAME =  servers
    #the kids are our body:
    XML_ELEMENT_BODY =  $MACRO_OUTPUT_ACCUMULATOR:valueof
    #restore the output accumulator varaible name:
    MACRO_OUTPUT_ACCUMULATOR    = $_mvnconf_servers_save_accumulator

    %call xml_nested_element

    #restore parent instance count:
    parent_instance_count = $_mvnconf_servers_save_parent_ic
#%eecho EXIT mvnconf_servers: parent_instance_count=$parent_instance_count
EOF
}

mvnconf_mirror_mirrorOf := << EOF
{# mvnconf_mirror_mirrorOf: TERMINAL ELEMENT
    mvnconf_mirror_mirrorOf_valuevar = MVNCONF_MIRROR_MIRROROF_$instance_count:pad:assign
    %ifndef $mvnconf_mirror_mirrorOf_valuevar    mvnconf_mirror_mirrorOf_valuevar = MVNCONF_MIRROR_MIRROROF

    #set element contents to nil if not defined:
    %ifndef $mvnconf_mirror_mirrorOf_valuevar    $mvnconf_mirror_mirrorOf_valuevar =

    XML_ELEMENT_NAME = mirrorOf
    XML_ELEMENT_BODY = $mvnconf_mirror_mirrorOf_valuevar:valueof
    %call xml_line_element
}
EOF

mvnconf_mirror_name := << EOF
{# mvnconf_mirror_name: TERMINAL ELEMENT
    mvnconf_mirror_name_valuevar = MVNCONF_MIRROR_NAME_$instance_count:pad:assign
    %ifndef $mvnconf_mirror_name_valuevar    mvnconf_mirror_name_valuevar = MVNCONF_MIRROR_NAME

    #set element contents to nil if not defined:
    %ifndef $mvnconf_mirror_name_valuevar    $mvnconf_mirror_name_valuevar =

    XML_ELEMENT_NAME = name
    XML_ELEMENT_BODY = $mvnconf_mirror_name_valuevar:valueof
    %call xml_line_element
}
EOF

mvnconf_mirror_url := << EOF
{# mvnconf_mirror_url: TERMINAL ELEMENT
    mvnconf_mirror_url_valuevar = MVNCONF_MIRROR_URL_$instance_count:pad:assign
    %ifndef $mvnconf_mirror_url_valuevar    mvnconf_mirror_url_valuevar = MVNCONF_MIRROR_URL

    #set element contents to nil if not defined:
    %ifndef $mvnconf_mirror_url_valuevar    $mvnconf_mirror_url_valuevar =

    XML_ELEMENT_NAME = url
    XML_ELEMENT_BODY = $mvnconf_mirror_url_valuevar:valueof
    %call xml_line_element
}
EOF

mvnconf_mirror_id := << EOF
{# mvnconf_mirror_id: TERMINAL ELEMENT
    mvnconf_mirror_id_valuevar = MVNCONF_MIRROR_ID_$instance_count:pad:assign
    %ifndef $mvnconf_mirror_id_valuevar    mvnconf_mirror_id_valuevar = MVNCONF_MIRROR_ID

    #set element contents to nil if not defined:
    %ifndef $mvnconf_mirror_id_valuevar    $mvnconf_mirror_id_valuevar =

    XML_ELEMENT_NAME = id
    XML_ELEMENT_BODY = $mvnconf_mirror_id_valuevar:valueof
    %call xml_line_element
}
EOF

{# mvnconf_mirror: NON-TERMINAL ELEMENT
mvnconf_mirror := << EOF
#%eecho ENTER mvnconf_mirror: parent_instance_count=$parent_instance_count
    #parent_instance_count is zero for top element - normalize spec and increment:
    %ifnot $parent_instance_count NORMALIZE RESULT=$MVNCONF_:nameof:xmlcg_normalize_counts
    %ifnot $parent_instance_count %ifnot $NORMALIZE RESULT %eecho mvnconf_mirror: ERROR: MVNCONF_:nameof:xmlcg_normalize_counts FAILED - is xmlcg_ops.pl in your CG_TEMPLATE_PATH?

    %ifnot $parent_instance_count parent_instance_count = 01

    _mvnconf_mirror_save_accumulator = $MACRO_OUTPUT_ACCUMULATOR
    _mvnconf_mirror_save_parent_ic = $parent_instance_count
    parent_instance_count = $instance_count:pad

    #re-assign to temporary accumulator to pick up kids:
    MACRO_OUTPUT_ACCUMULATOR = _mvnconf_mirror_kid_accumulator
    #clear the kid accumulator:
    $MACRO_OUTPUT_ACCUMULATOR =

    #make calls to generate my kid elements:
    ########### GENERATE KIDS: ###########
    { #generate mvnconf_mirror_mirrorOf terminal element:
#%eecho CALL <T> mvnconf_mirror_mirrorOf: parent_instance_count=$parent_instance_count

        #did user specify a value for the first instance of this element?
        %ifdef MVNCONF_MIRROR_MIRROROF MVNCONF_MIRROR_MIRROROF_01 = $MVNCONF_MIRROR_MIRROROF
#%eecho B: MVNCONF_MIRROR_MIRROROF=$MVNCONF_MIRROR_MIRROROF MVNCONF_MIRROR_MIRROROF_01=$MVNCONF_MIRROR_MIRROROF_01

        #if value is specified, but count is not, then specify count:
        %ifdef MVNCONF_MIRROR_MIRROROF_01 %ifndef MVNCONF_MIRROR_MIRROROF_COUNT_01 MVNCONF_MIRROR_MIRROROF_COUNT_01 = 01..01

#%eecho C: MVNCONF_MIRROR_MIRROROF_COUNT=$MVNCONF_MIRROR_MIRROROF_COUNT MVNCONF_MIRROR_MIRROROF_COUNT_01=$MVNCONF_MIRROR_MIRROROF_COUNT_01

        _mvnconf_mirror_mirrorOf_rangevar = MVNCONF_MIRROR_MIRROROF_COUNT_$parent_instance_count

        #if count for this element is unspecified, then only generate if we are generating empties:
        %ifndef $_mvnconf_mirror_mirrorOf_rangevar %if $MVNCONF_GENERATE_EMPTY_ELEMENTS $_mvnconf_mirror_mirrorOf_rangevar = 01..01

        #if this is an orphaned value, we attach instance n to parent n:
        %ifndef $_mvnconf_mirror_mirrorOf_rangevar $_mvnconf_mirror_mirrorOf_rangevar = $_mvnconf_mirror_mirrorOf_rangevar:xmlcg_default_value_range

        #if count is now specified, but value is not, then set to nil:
        %ifdef MVNCONF_MIRROR_MIRROROF_COUNT_01 %ifndef MVNCONF_MIRROR_MIRROROF_01 MVNCONF_MIRROR_MIRROROF_01=
#%eecho D: MVNCONF_MIRROR_MIRROROF_COUNT_01=$MVNCONF_MIRROR_MIRROROF_COUNT_01 MVNCONF_MIRROR_MIRROROF_01=$MVNCONF_MIRROR_MIRROROF_01

        #if count is specified as a simple count, then adjust to be 01..<count>:
        %if $_mvnconf_mirror_mirrorOf_rangevar:valueof:isint   $_mvnconf_mirror_mirrorOf_rangevar = 01..$_mvnconf_mirror_mirrorOf_rangevar:valueof

        ########
#%eecho CALL <T> mvnconf_mirror_mirrorOf: _mvnconf_mirror_mirrorOf_rangevar=$_mvnconf_mirror_mirrorOf_rangevar -> $_mvnconf_mirror_mirrorOf_rangevar:valueof
        %foreach instance_count $_mvnconf_mirror_mirrorOf_rangevar %call mvnconf_mirror_mirrorOf
        ########
    }
    { #generate mvnconf_mirror_name terminal element:
#%eecho CALL <T> mvnconf_mirror_name: parent_instance_count=$parent_instance_count

        #did user specify a value for the first instance of this element?
        %ifdef MVNCONF_MIRROR_NAME MVNCONF_MIRROR_NAME_01 = $MVNCONF_MIRROR_NAME
#%eecho B: MVNCONF_MIRROR_NAME=$MVNCONF_MIRROR_NAME MVNCONF_MIRROR_NAME_01=$MVNCONF_MIRROR_NAME_01

        #if value is specified, but count is not, then specify count:
        %ifdef MVNCONF_MIRROR_NAME_01 %ifndef MVNCONF_MIRROR_NAME_COUNT_01 MVNCONF_MIRROR_NAME_COUNT_01 = 01..01

#%eecho C: MVNCONF_MIRROR_NAME_COUNT=$MVNCONF_MIRROR_NAME_COUNT MVNCONF_MIRROR_NAME_COUNT_01=$MVNCONF_MIRROR_NAME_COUNT_01

        _mvnconf_mirror_name_rangevar = MVNCONF_MIRROR_NAME_COUNT_$parent_instance_count

        #if count for this element is unspecified, then only generate if we are generating empties:
        %ifndef $_mvnconf_mirror_name_rangevar %if $MVNCONF_GENERATE_EMPTY_ELEMENTS $_mvnconf_mirror_name_rangevar = 01..01

        #if this is an orphaned value, we attach instance n to parent n:
        %ifndef $_mvnconf_mirror_name_rangevar $_mvnconf_mirror_name_rangevar = $_mvnconf_mirror_name_rangevar:xmlcg_default_value_range

        #if count is now specified, but value is not, then set to nil:
        %ifdef MVNCONF_MIRROR_NAME_COUNT_01 %ifndef MVNCONF_MIRROR_NAME_01 MVNCONF_MIRROR_NAME_01=
#%eecho D: MVNCONF_MIRROR_NAME_COUNT_01=$MVNCONF_MIRROR_NAME_COUNT_01 MVNCONF_MIRROR_NAME_01=$MVNCONF_MIRROR_NAME_01

        #if count is specified as a simple count, then adjust to be 01..<count>:
        %if $_mvnconf_mirror_name_rangevar:valueof:isint   $_mvnconf_mirror_name_rangevar = 01..$_mvnconf_mirror_name_rangevar:valueof

        ########
#%eecho CALL <T> mvnconf_mirror_name: _mvnconf_mirror_name_rangevar=$_mvnconf_mirror_name_rangevar -> $_mvnconf_mirror_name_rangevar:valueof
        %foreach instance_count $_mvnconf_mirror_name_rangevar %call mvnconf_mirror_name
        ########
    }
    { #generate mvnconf_mirror_url terminal element:
#%eecho CALL <T> mvnconf_mirror_url: parent_instance_count=$parent_instance_count

        #did user specify a value for the first instance of this element?
        %ifdef MVNCONF_MIRROR_URL MVNCONF_MIRROR_URL_01 = $MVNCONF_MIRROR_URL
#%eecho B: MVNCONF_MIRROR_URL=$MVNCONF_MIRROR_URL MVNCONF_MIRROR_URL_01=$MVNCONF_MIRROR_URL_01

        #if value is specified, but count is not, then specify count:
        %ifdef MVNCONF_MIRROR_URL_01 %ifndef MVNCONF_MIRROR_URL_COUNT_01 MVNCONF_MIRROR_URL_COUNT_01 = 01..01

#%eecho C: MVNCONF_MIRROR_URL_COUNT=$MVNCONF_MIRROR_URL_COUNT MVNCONF_MIRROR_URL_COUNT_01=$MVNCONF_MIRROR_URL_COUNT_01

        _mvnconf_mirror_url_rangevar = MVNCONF_MIRROR_URL_COUNT_$parent_instance_count

        #if count for this element is unspecified, then only generate if we are generating empties:
        %ifndef $_mvnconf_mirror_url_rangevar %if $MVNCONF_GENERATE_EMPTY_ELEMENTS $_mvnconf_mirror_url_rangevar = 01..01

        #if this is an orphaned value, we attach instance n to parent n:
        %ifndef $_mvnconf_mirror_url_rangevar $_mvnconf_mirror_url_rangevar = $_mvnconf_mirror_url_rangevar:xmlcg_default_value_range

        #if count is now specified, but value is not, then set to nil:
        %ifdef MVNCONF_MIRROR_URL_COUNT_01 %ifndef MVNCONF_MIRROR_URL_01 MVNCONF_MIRROR_URL_01=
#%eecho D: MVNCONF_MIRROR_URL_COUNT_01=$MVNCONF_MIRROR_URL_COUNT_01 MVNCONF_MIRROR_URL_01=$MVNCONF_MIRROR_URL_01

        #if count is specified as a simple count, then adjust to be 01..<count>:
        %if $_mvnconf_mirror_url_rangevar:valueof:isint   $_mvnconf_mirror_url_rangevar = 01..$_mvnconf_mirror_url_rangevar:valueof

        ########
#%eecho CALL <T> mvnconf_mirror_url: _mvnconf_mirror_url_rangevar=$_mvnconf_mirror_url_rangevar -> $_mvnconf_mirror_url_rangevar:valueof
        %foreach instance_count $_mvnconf_mirror_url_rangevar %call mvnconf_mirror_url
        ########
    }
    { #generate mvnconf_mirror_id terminal element:
#%eecho CALL <T> mvnconf_mirror_id: parent_instance_count=$parent_instance_count

        #did user specify a value for the first instance of this element?
        %ifdef MVNCONF_MIRROR_ID MVNCONF_MIRROR_ID_01 = $MVNCONF_MIRROR_ID
#%eecho B: MVNCONF_MIRROR_ID=$MVNCONF_MIRROR_ID MVNCONF_MIRROR_ID_01=$MVNCONF_MIRROR_ID_01

        #if value is specified, but count is not, then specify count:
        %ifdef MVNCONF_MIRROR_ID_01 %ifndef MVNCONF_MIRROR_ID_COUNT_01 MVNCONF_MIRROR_ID_COUNT_01 = 01..01

#%eecho C: MVNCONF_MIRROR_ID_COUNT=$MVNCONF_MIRROR_ID_COUNT MVNCONF_MIRROR_ID_COUNT_01=$MVNCONF_MIRROR_ID_COUNT_01

        _mvnconf_mirror_id_rangevar = MVNCONF_MIRROR_ID_COUNT_$parent_instance_count

        #if count for this element is unspecified, then only generate if we are generating empties:
        %ifndef $_mvnconf_mirror_id_rangevar %if $MVNCONF_GENERATE_EMPTY_ELEMENTS $_mvnconf_mirror_id_rangevar = 01..01

        #if this is an orphaned value, we attach instance n to parent n:
        %ifndef $_mvnconf_mirror_id_rangevar $_mvnconf_mirror_id_rangevar = $_mvnconf_mirror_id_rangevar:xmlcg_default_value_range

        #if count is now specified, but value is not, then set to nil:
        %ifdef MVNCONF_MIRROR_ID_COUNT_01 %ifndef MVNCONF_MIRROR_ID_01 MVNCONF_MIRROR_ID_01=
#%eecho D: MVNCONF_MIRROR_ID_COUNT_01=$MVNCONF_MIRROR_ID_COUNT_01 MVNCONF_MIRROR_ID_01=$MVNCONF_MIRROR_ID_01

        #if count is specified as a simple count, then adjust to be 01..<count>:
        %if $_mvnconf_mirror_id_rangevar:valueof:isint   $_mvnconf_mirror_id_rangevar = 01..$_mvnconf_mirror_id_rangevar:valueof

        ########
#%eecho CALL <T> mvnconf_mirror_id: _mvnconf_mirror_id_rangevar=$_mvnconf_mirror_id_rangevar -> $_mvnconf_mirror_id_rangevar:valueof
        %foreach instance_count $_mvnconf_mirror_id_rangevar %call mvnconf_mirror_id
        ########
    }
    ###########

    #now generate me:
    XML_ELEMENT_NAME =  mirror
    #the kids are our body:
    XML_ELEMENT_BODY =  $MACRO_OUTPUT_ACCUMULATOR:valueof
    #restore the output accumulator varaible name:
    MACRO_OUTPUT_ACCUMULATOR    = $_mvnconf_mirror_save_accumulator

    %call xml_nested_element

    #restore parent instance count:
    parent_instance_count = $_mvnconf_mirror_save_parent_ic
#%eecho EXIT mvnconf_mirror: parent_instance_count=$parent_instance_count
EOF
}

{# mvnconf_mirrors: NON-TERMINAL ELEMENT
mvnconf_mirrors := << EOF
#%eecho ENTER mvnconf_mirrors: parent_instance_count=$parent_instance_count
    #parent_instance_count is zero for top element - normalize spec and increment:
    %ifnot $parent_instance_count NORMALIZE RESULT=$MVNCONF_:nameof:xmlcg_normalize_counts
    %ifnot $parent_instance_count %ifnot $NORMALIZE RESULT %eecho mvnconf_mirrors: ERROR: MVNCONF_:nameof:xmlcg_normalize_counts FAILED - is xmlcg_ops.pl in your CG_TEMPLATE_PATH?

    %ifnot $parent_instance_count parent_instance_count = 01

    _mvnconf_mirrors_save_accumulator = $MACRO_OUTPUT_ACCUMULATOR
    _mvnconf_mirrors_save_parent_ic = $parent_instance_count
    parent_instance_count = $instance_count:pad

    #re-assign to temporary accumulator to pick up kids:
    MACRO_OUTPUT_ACCUMULATOR = _mvnconf_mirrors_kid_accumulator
    #clear the kid accumulator:
    $MACRO_OUTPUT_ACCUMULATOR =

    #make calls to generate my kid elements:
    ########### GENERATE KIDS: ###########
    { #generate mvnconf_mirror non-terminal element:
#%eecho A: CALL <NT> mvnconf_mirror: parent_instance_count=$parent_instance_count

        _mvnconf_mirror_rangevar = MVNCONF_MIRROR_COUNT_$parent_instance_count

        #if count for this non-terminal element is unspecified, then only generate if we are generating empties:
#%eecho B: CALL <NT> mvnconf_mirror: _mvnconf_mirror_rangevar=$_mvnconf_mirror_rangevar -> $_mvnconf_mirror_rangevar:valueof
        %ifndef $_mvnconf_mirror_rangevar %if $MVNCONF_GENERATE_EMPTY_ELEMENTS $_mvnconf_mirror_rangevar = 01..01

        #if count is still undefined for this terminal, then we're done:
        %ifndef $_mvnconf_mirror_rangevar $_mvnconf_mirror_rangevar = 01..00

        #if count is specified as a simple count, then adjust to be 01..<count>:
        %if $_mvnconf_mirror_rangevar:valueof:isint   $_mvnconf_mirror_rangevar = 01..$_mvnconf_mirror_rangevar:valueof

        ########
#%eecho C: CALL <NT> mvnconf_mirror: _mvnconf_mirror_rangevar=$_mvnconf_mirror_rangevar -> $_mvnconf_mirror_rangevar:valueof
        %foreach instance_count $_mvnconf_mirror_rangevar %call mvnconf_mirror
        ########
    }
    ###########

    #now generate me:
    XML_ELEMENT_NAME =  mirrors
    #the kids are our body:
    XML_ELEMENT_BODY =  $MACRO_OUTPUT_ACCUMULATOR:valueof
    #restore the output accumulator varaible name:
    MACRO_OUTPUT_ACCUMULATOR    = $_mvnconf_mirrors_save_accumulator

    %call xml_nested_element

    #restore parent instance count:
    parent_instance_count = $_mvnconf_mirrors_save_parent_ic
#%eecho EXIT mvnconf_mirrors: parent_instance_count=$parent_instance_count
EOF
}

mvnconf_profile_activation_o_name := << EOF
{# mvnconf_profile_activation_o_name: TERMINAL ELEMENT
    mvnconf_profile_activation_o_name_valuevar = MVNCONF_PROFILE_ACTIVATION_O_NAME_$instance_count:pad:assign
    %ifndef $mvnconf_profile_activation_o_name_valuevar    mvnconf_profile_activation_o_name_valuevar = MVNCONF_PROFILE_ACTIVATION_O_NAME

    #set element contents to nil if not defined:
    %ifndef $mvnconf_profile_activation_o_name_valuevar    $mvnconf_profile_activation_o_name_valuevar =

    XML_ELEMENT_NAME = name
    XML_ELEMENT_BODY = $mvnconf_profile_activation_o_name_valuevar:valueof
    %call xml_line_element
}
EOF

mvnconf_profile_activation_o_family := << EOF
{# mvnconf_profile_activation_o_family: TERMINAL ELEMENT
    mvnconf_profile_activation_o_family_valuevar = MVNCONF_PROFILE_ACTIVATION_O_FAMILY_$instance_count:pad:assign
    %ifndef $mvnconf_profile_activation_o_family_valuevar    mvnconf_profile_activation_o_family_valuevar = MVNCONF_PROFILE_ACTIVATION_O_FAMILY

    #set element contents to nil if not defined:
    %ifndef $mvnconf_profile_activation_o_family_valuevar    $mvnconf_profile_activation_o_family_valuevar =

    XML_ELEMENT_NAME = family
    XML_ELEMENT_BODY = $mvnconf_profile_activation_o_family_valuevar:valueof
    %call xml_line_element
}
EOF

mvnconf_profile_activation_o_arch := << EOF
{# mvnconf_profile_activation_o_arch: TERMINAL ELEMENT
    mvnconf_profile_activation_o_arch_valuevar = MVNCONF_PROFILE_ACTIVATION_O_ARCH_$instance_count:pad:assign
    %ifndef $mvnconf_profile_activation_o_arch_valuevar    mvnconf_profile_activation_o_arch_valuevar = MVNCONF_PROFILE_ACTIVATION_O_ARCH

    #set element contents to nil if not defined:
    %ifndef $mvnconf_profile_activation_o_arch_valuevar    $mvnconf_profile_activation_o_arch_valuevar =

    XML_ELEMENT_NAME = arch
    XML_ELEMENT_BODY = $mvnconf_profile_activation_o_arch_valuevar:valueof
    %call xml_line_element
}
EOF

mvnconf_profile_activation_o_version := << EOF
{# mvnconf_profile_activation_o_version: TERMINAL ELEMENT
    mvnconf_profile_activation_o_version_valuevar = MVNCONF_PROFILE_ACTIVATION_O_VERSION_$instance_count:pad:assign
    %ifndef $mvnconf_profile_activation_o_version_valuevar    mvnconf_profile_activation_o_version_valuevar = MVNCONF_PROFILE_ACTIVATION_O_VERSION

    #set element contents to nil if not defined:
    %ifndef $mvnconf_profile_activation_o_version_valuevar    $mvnconf_profile_activation_o_version_valuevar =

    XML_ELEMENT_NAME = version
    XML_ELEMENT_BODY = $mvnconf_profile_activation_o_version_valuevar:valueof
    %call xml_line_element
}
EOF

{# mvnconf_profile_activation_o: NON-TERMINAL ELEMENT
mvnconf_profile_activation_o := << EOF
#%eecho ENTER mvnconf_profile_activation_o: parent_instance_count=$parent_instance_count
    #parent_instance_count is zero for top element - normalize spec and increment:
    %ifnot $parent_instance_count NORMALIZE RESULT=$MVNCONF_:nameof:xmlcg_normalize_counts
    %ifnot $parent_instance_count %ifnot $NORMALIZE RESULT %eecho mvnconf_profile_activation_o: ERROR: MVNCONF_:nameof:xmlcg_normalize_counts FAILED - is xmlcg_ops.pl in your CG_TEMPLATE_PATH?

    %ifnot $parent_instance_count parent_instance_count = 01

    _mvnconf_profile_activation_o_save_accumulator = $MACRO_OUTPUT_ACCUMULATOR
    _mvnconf_profile_activation_o_save_parent_ic = $parent_instance_count
    parent_instance_count = $instance_count:pad

    #re-assign to temporary accumulator to pick up kids:
    MACRO_OUTPUT_ACCUMULATOR = _mvnconf_profile_activation_o_kid_accumulator
    #clear the kid accumulator:
    $MACRO_OUTPUT_ACCUMULATOR =

    #make calls to generate my kid elements:
    ########### GENERATE KIDS: ###########
    { #generate mvnconf_profile_activation_o_name terminal element:
#%eecho CALL <T> mvnconf_profile_activation_o_name: parent_instance_count=$parent_instance_count

        #did user specify a value for the first instance of this element?
        %ifdef MVNCONF_PROFILE_ACTIVATION_O_NAME MVNCONF_PROFILE_ACTIVATION_O_NAME_01 = $MVNCONF_PROFILE_ACTIVATION_O_NAME
#%eecho B: MVNCONF_PROFILE_ACTIVATION_O_NAME=$MVNCONF_PROFILE_ACTIVATION_O_NAME MVNCONF_PROFILE_ACTIVATION_O_NAME_01=$MVNCONF_PROFILE_ACTIVATION_O_NAME_01

        #if value is specified, but count is not, then specify count:
        %ifdef MVNCONF_PROFILE_ACTIVATION_O_NAME_01 %ifndef MVNCONF_PROFILE_ACTIVATION_O_NAME_COUNT_01 MVNCONF_PROFILE_ACTIVATION_O_NAME_COUNT_01 = 01..01

#%eecho C: MVNCONF_PROFILE_ACTIVATION_O_NAME_COUNT=$MVNCONF_PROFILE_ACTIVATION_O_NAME_COUNT MVNCONF_PROFILE_ACTIVATION_O_NAME_COUNT_01=$MVNCONF_PROFILE_ACTIVATION_O_NAME_COUNT_01

        _mvnconf_profile_activation_o_name_rangevar = MVNCONF_PROFILE_ACTIVATION_O_NAME_COUNT_$parent_instance_count

        #if count for this element is unspecified, then only generate if we are generating empties:
        %ifndef $_mvnconf_profile_activation_o_name_rangevar %if $MVNCONF_GENERATE_EMPTY_ELEMENTS $_mvnconf_profile_activation_o_name_rangevar = 01..01

        #if this is an orphaned value, we attach instance n to parent n:
        %ifndef $_mvnconf_profile_activation_o_name_rangevar $_mvnconf_profile_activation_o_name_rangevar = $_mvnconf_profile_activation_o_name_rangevar:xmlcg_default_value_range

        #if count is now specified, but value is not, then set to nil:
        %ifdef MVNCONF_PROFILE_ACTIVATION_O_NAME_COUNT_01 %ifndef MVNCONF_PROFILE_ACTIVATION_O_NAME_01 MVNCONF_PROFILE_ACTIVATION_O_NAME_01=
#%eecho D: MVNCONF_PROFILE_ACTIVATION_O_NAME_COUNT_01=$MVNCONF_PROFILE_ACTIVATION_O_NAME_COUNT_01 MVNCONF_PROFILE_ACTIVATION_O_NAME_01=$MVNCONF_PROFILE_ACTIVATION_O_NAME_01

        #if count is specified as a simple count, then adjust to be 01..<count>:
        %if $_mvnconf_profile_activation_o_name_rangevar:valueof:isint   $_mvnconf_profile_activation_o_name_rangevar = 01..$_mvnconf_profile_activation_o_name_rangevar:valueof

        ########
#%eecho CALL <T> mvnconf_profile_activation_o_name: _mvnconf_profile_activation_o_name_rangevar=$_mvnconf_profile_activation_o_name_rangevar -> $_mvnconf_profile_activation_o_name_rangevar:valueof
        %foreach instance_count $_mvnconf_profile_activation_o_name_rangevar %call mvnconf_profile_activation_o_name
        ########
    }
    { #generate mvnconf_profile_activation_o_family terminal element:
#%eecho CALL <T> mvnconf_profile_activation_o_family: parent_instance_count=$parent_instance_count

        #did user specify a value for the first instance of this element?
        %ifdef MVNCONF_PROFILE_ACTIVATION_O_FAMILY MVNCONF_PROFILE_ACTIVATION_O_FAMILY_01 = $MVNCONF_PROFILE_ACTIVATION_O_FAMILY
#%eecho B: MVNCONF_PROFILE_ACTIVATION_O_FAMILY=$MVNCONF_PROFILE_ACTIVATION_O_FAMILY MVNCONF_PROFILE_ACTIVATION_O_FAMILY_01=$MVNCONF_PROFILE_ACTIVATION_O_FAMILY_01

        #if value is specified, but count is not, then specify count:
        %ifdef MVNCONF_PROFILE_ACTIVATION_O_FAMILY_01 %ifndef MVNCONF_PROFILE_ACTIVATION_O_FAMILY_COUNT_01 MVNCONF_PROFILE_ACTIVATION_O_FAMILY_COUNT_01 = 01..01

#%eecho C: MVNCONF_PROFILE_ACTIVATION_O_FAMILY_COUNT=$MVNCONF_PROFILE_ACTIVATION_O_FAMILY_COUNT MVNCONF_PROFILE_ACTIVATION_O_FAMILY_COUNT_01=$MVNCONF_PROFILE_ACTIVATION_O_FAMILY_COUNT_01

        _mvnconf_profile_activation_o_family_rangevar = MVNCONF_PROFILE_ACTIVATION_O_FAMILY_COUNT_$parent_instance_count

        #if count for this element is unspecified, then only generate if we are generating empties:
        %ifndef $_mvnconf_profile_activation_o_family_rangevar %if $MVNCONF_GENERATE_EMPTY_ELEMENTS $_mvnconf_profile_activation_o_family_rangevar = 01..01

        #if this is an orphaned value, we attach instance n to parent n:
        %ifndef $_mvnconf_profile_activation_o_family_rangevar $_mvnconf_profile_activation_o_family_rangevar = $_mvnconf_profile_activation_o_family_rangevar:xmlcg_default_value_range

        #if count is now specified, but value is not, then set to nil:
        %ifdef MVNCONF_PROFILE_ACTIVATION_O_FAMILY_COUNT_01 %ifndef MVNCONF_PROFILE_ACTIVATION_O_FAMILY_01 MVNCONF_PROFILE_ACTIVATION_O_FAMILY_01=
#%eecho D: MVNCONF_PROFILE_ACTIVATION_O_FAMILY_COUNT_01=$MVNCONF_PROFILE_ACTIVATION_O_FAMILY_COUNT_01 MVNCONF_PROFILE_ACTIVATION_O_FAMILY_01=$MVNCONF_PROFILE_ACTIVATION_O_FAMILY_01

        #if count is specified as a simple count, then adjust to be 01..<count>:
        %if $_mvnconf_profile_activation_o_family_rangevar:valueof:isint   $_mvnconf_profile_activation_o_family_rangevar = 01..$_mvnconf_profile_activation_o_family_rangevar:valueof

        ########
#%eecho CALL <T> mvnconf_profile_activation_o_family: _mvnconf_profile_activation_o_family_rangevar=$_mvnconf_profile_activation_o_family_rangevar -> $_mvnconf_profile_activation_o_family_rangevar:valueof
        %foreach instance_count $_mvnconf_profile_activation_o_family_rangevar %call mvnconf_profile_activation_o_family
        ########
    }
    { #generate mvnconf_profile_activation_o_arch terminal element:
#%eecho CALL <T> mvnconf_profile_activation_o_arch: parent_instance_count=$parent_instance_count

        #did user specify a value for the first instance of this element?
        %ifdef MVNCONF_PROFILE_ACTIVATION_O_ARCH MVNCONF_PROFILE_ACTIVATION_O_ARCH_01 = $MVNCONF_PROFILE_ACTIVATION_O_ARCH
#%eecho B: MVNCONF_PROFILE_ACTIVATION_O_ARCH=$MVNCONF_PROFILE_ACTIVATION_O_ARCH MVNCONF_PROFILE_ACTIVATION_O_ARCH_01=$MVNCONF_PROFILE_ACTIVATION_O_ARCH_01

        #if value is specified, but count is not, then specify count:
        %ifdef MVNCONF_PROFILE_ACTIVATION_O_ARCH_01 %ifndef MVNCONF_PROFILE_ACTIVATION_O_ARCH_COUNT_01 MVNCONF_PROFILE_ACTIVATION_O_ARCH_COUNT_01 = 01..01

#%eecho C: MVNCONF_PROFILE_ACTIVATION_O_ARCH_COUNT=$MVNCONF_PROFILE_ACTIVATION_O_ARCH_COUNT MVNCONF_PROFILE_ACTIVATION_O_ARCH_COUNT_01=$MVNCONF_PROFILE_ACTIVATION_O_ARCH_COUNT_01

        _mvnconf_profile_activation_o_arch_rangevar = MVNCONF_PROFILE_ACTIVATION_O_ARCH_COUNT_$parent_instance_count

        #if count for this element is unspecified, then only generate if we are generating empties:
        %ifndef $_mvnconf_profile_activation_o_arch_rangevar %if $MVNCONF_GENERATE_EMPTY_ELEMENTS $_mvnconf_profile_activation_o_arch_rangevar = 01..01

        #if this is an orphaned value, we attach instance n to parent n:
        %ifndef $_mvnconf_profile_activation_o_arch_rangevar $_mvnconf_profile_activation_o_arch_rangevar = $_mvnconf_profile_activation_o_arch_rangevar:xmlcg_default_value_range

        #if count is now specified, but value is not, then set to nil:
        %ifdef MVNCONF_PROFILE_ACTIVATION_O_ARCH_COUNT_01 %ifndef MVNCONF_PROFILE_ACTIVATION_O_ARCH_01 MVNCONF_PROFILE_ACTIVATION_O_ARCH_01=
#%eecho D: MVNCONF_PROFILE_ACTIVATION_O_ARCH_COUNT_01=$MVNCONF_PROFILE_ACTIVATION_O_ARCH_COUNT_01 MVNCONF_PROFILE_ACTIVATION_O_ARCH_01=$MVNCONF_PROFILE_ACTIVATION_O_ARCH_01

        #if count is specified as a simple count, then adjust to be 01..<count>:
        %if $_mvnconf_profile_activation_o_arch_rangevar:valueof:isint   $_mvnconf_profile_activation_o_arch_rangevar = 01..$_mvnconf_profile_activation_o_arch_rangevar:valueof

        ########
#%eecho CALL <T> mvnconf_profile_activation_o_arch: _mvnconf_profile_activation_o_arch_rangevar=$_mvnconf_profile_activation_o_arch_rangevar -> $_mvnconf_profile_activation_o_arch_rangevar:valueof
        %foreach instance_count $_mvnconf_profile_activation_o_arch_rangevar %call mvnconf_profile_activation_o_arch
        ########
    }
    { #generate mvnconf_profile_activation_o_version terminal element:
#%eecho CALL <T> mvnconf_profile_activation_o_version: parent_instance_count=$parent_instance_count

        #did user specify a value for the first instance of this element?
        %ifdef MVNCONF_PROFILE_ACTIVATION_O_VERSION MVNCONF_PROFILE_ACTIVATION_O_VERSION_01 = $MVNCONF_PROFILE_ACTIVATION_O_VERSION
#%eecho B: MVNCONF_PROFILE_ACTIVATION_O_VERSION=$MVNCONF_PROFILE_ACTIVATION_O_VERSION MVNCONF_PROFILE_ACTIVATION_O_VERSION_01=$MVNCONF_PROFILE_ACTIVATION_O_VERSION_01

        #if value is specified, but count is not, then specify count:
        %ifdef MVNCONF_PROFILE_ACTIVATION_O_VERSION_01 %ifndef MVNCONF_PROFILE_ACTIVATION_O_VERSION_COUNT_01 MVNCONF_PROFILE_ACTIVATION_O_VERSION_COUNT_01 = 01..01

#%eecho C: MVNCONF_PROFILE_ACTIVATION_O_VERSION_COUNT=$MVNCONF_PROFILE_ACTIVATION_O_VERSION_COUNT MVNCONF_PROFILE_ACTIVATION_O_VERSION_COUNT_01=$MVNCONF_PROFILE_ACTIVATION_O_VERSION_COUNT_01

        _mvnconf_profile_activation_o_version_rangevar = MVNCONF_PROFILE_ACTIVATION_O_VERSION_COUNT_$parent_instance_count

        #if count for this element is unspecified, then only generate if we are generating empties:
        %ifndef $_mvnconf_profile_activation_o_version_rangevar %if $MVNCONF_GENERATE_EMPTY_ELEMENTS $_mvnconf_profile_activation_o_version_rangevar = 01..01

        #if this is an orphaned value, we attach instance n to parent n:
        %ifndef $_mvnconf_profile_activation_o_version_rangevar $_mvnconf_profile_activation_o_version_rangevar = $_mvnconf_profile_activation_o_version_rangevar:xmlcg_default_value_range

        #if count is now specified, but value is not, then set to nil:
        %ifdef MVNCONF_PROFILE_ACTIVATION_O_VERSION_COUNT_01 %ifndef MVNCONF_PROFILE_ACTIVATION_O_VERSION_01 MVNCONF_PROFILE_ACTIVATION_O_VERSION_01=
#%eecho D: MVNCONF_PROFILE_ACTIVATION_O_VERSION_COUNT_01=$MVNCONF_PROFILE_ACTIVATION_O_VERSION_COUNT_01 MVNCONF_PROFILE_ACTIVATION_O_VERSION_01=$MVNCONF_PROFILE_ACTIVATION_O_VERSION_01

        #if count is specified as a simple count, then adjust to be 01..<count>:
        %if $_mvnconf_profile_activation_o_version_rangevar:valueof:isint   $_mvnconf_profile_activation_o_version_rangevar = 01..$_mvnconf_profile_activation_o_version_rangevar:valueof

        ########
#%eecho CALL <T> mvnconf_profile_activation_o_version: _mvnconf_profile_activation_o_version_rangevar=$_mvnconf_profile_activation_o_version_rangevar -> $_mvnconf_profile_activation_o_version_rangevar:valueof
        %foreach instance_count $_mvnconf_profile_activation_o_version_rangevar %call mvnconf_profile_activation_o_version
        ########
    }
    ###########

    #now generate me:
    XML_ELEMENT_NAME =  o
    #the kids are our body:
    XML_ELEMENT_BODY =  $MACRO_OUTPUT_ACCUMULATOR:valueof
    #restore the output accumulator varaible name:
    MACRO_OUTPUT_ACCUMULATOR    = $_mvnconf_profile_activation_o_save_accumulator

    %call xml_nested_element

    #restore parent instance count:
    parent_instance_count = $_mvnconf_profile_activation_o_save_parent_ic
#%eecho EXIT mvnconf_profile_activation_o: parent_instance_count=$parent_instance_count
EOF
}

mvnconf_profile_activation_property_name := << EOF
{# mvnconf_profile_activation_property_name: TERMINAL ELEMENT
    mvnconf_profile_activation_property_name_valuevar = MVNCONF_PROFILE_ACTIVATION_PROPERTY_NAME_$instance_count:pad:assign
    %ifndef $mvnconf_profile_activation_property_name_valuevar    mvnconf_profile_activation_property_name_valuevar = MVNCONF_PROFILE_ACTIVATION_PROPERTY_NAME

    #set element contents to nil if not defined:
    %ifndef $mvnconf_profile_activation_property_name_valuevar    $mvnconf_profile_activation_property_name_valuevar =

    XML_ELEMENT_NAME = name
    XML_ELEMENT_BODY = $mvnconf_profile_activation_property_name_valuevar:valueof
    %call xml_line_element
}
EOF

mvnconf_profile_activation_property_value := << EOF
{# mvnconf_profile_activation_property_value: TERMINAL ELEMENT
    mvnconf_profile_activation_property_value_valuevar = MVNCONF_PROFILE_ACTIVATION_PROPERTY_VALUE_$instance_count:pad:assign
    %ifndef $mvnconf_profile_activation_property_value_valuevar    mvnconf_profile_activation_property_value_valuevar = MVNCONF_PROFILE_ACTIVATION_PROPERTY_VALUE

    #set element contents to nil if not defined:
    %ifndef $mvnconf_profile_activation_property_value_valuevar    $mvnconf_profile_activation_property_value_valuevar =

    XML_ELEMENT_NAME = value
    XML_ELEMENT_BODY = $mvnconf_profile_activation_property_value_valuevar:valueof
    %call xml_line_element
}
EOF

{# mvnconf_profile_activation_property: NON-TERMINAL ELEMENT
mvnconf_profile_activation_property := << EOF
#%eecho ENTER mvnconf_profile_activation_property: parent_instance_count=$parent_instance_count
    #parent_instance_count is zero for top element - normalize spec and increment:
    %ifnot $parent_instance_count NORMALIZE RESULT=$MVNCONF_:nameof:xmlcg_normalize_counts
    %ifnot $parent_instance_count %ifnot $NORMALIZE RESULT %eecho mvnconf_profile_activation_property: ERROR: MVNCONF_:nameof:xmlcg_normalize_counts FAILED - is xmlcg_ops.pl in your CG_TEMPLATE_PATH?

    %ifnot $parent_instance_count parent_instance_count = 01

    _mvnconf_profile_activation_property_save_accumulator = $MACRO_OUTPUT_ACCUMULATOR
    _mvnconf_profile_activation_property_save_parent_ic = $parent_instance_count
    parent_instance_count = $instance_count:pad

    #re-assign to temporary accumulator to pick up kids:
    MACRO_OUTPUT_ACCUMULATOR = _mvnconf_profile_activation_property_kid_accumulator
    #clear the kid accumulator:
    $MACRO_OUTPUT_ACCUMULATOR =

    #make calls to generate my kid elements:
    ########### GENERATE KIDS: ###########
    { #generate mvnconf_profile_activation_property_name terminal element:
#%eecho CALL <T> mvnconf_profile_activation_property_name: parent_instance_count=$parent_instance_count

        #did user specify a value for the first instance of this element?
        %ifdef MVNCONF_PROFILE_ACTIVATION_PROPERTY_NAME MVNCONF_PROFILE_ACTIVATION_PROPERTY_NAME_01 = $MVNCONF_PROFILE_ACTIVATION_PROPERTY_NAME
#%eecho B: MVNCONF_PROFILE_ACTIVATION_PROPERTY_NAME=$MVNCONF_PROFILE_ACTIVATION_PROPERTY_NAME MVNCONF_PROFILE_ACTIVATION_PROPERTY_NAME_01=$MVNCONF_PROFILE_ACTIVATION_PROPERTY_NAME_01

        #if value is specified, but count is not, then specify count:
        %ifdef MVNCONF_PROFILE_ACTIVATION_PROPERTY_NAME_01 %ifndef MVNCONF_PROFILE_ACTIVATION_PROPERTY_NAME_COUNT_01 MVNCONF_PROFILE_ACTIVATION_PROPERTY_NAME_COUNT_01 = 01..01

#%eecho C: MVNCONF_PROFILE_ACTIVATION_PROPERTY_NAME_COUNT=$MVNCONF_PROFILE_ACTIVATION_PROPERTY_NAME_COUNT MVNCONF_PROFILE_ACTIVATION_PROPERTY_NAME_COUNT_01=$MVNCONF_PROFILE_ACTIVATION_PROPERTY_NAME_COUNT_01

        _mvnconf_profile_activation_property_name_rangevar = MVNCONF_PROFILE_ACTIVATION_PROPERTY_NAME_COUNT_$parent_instance_count

        #if count for this element is unspecified, then only generate if we are generating empties:
        %ifndef $_mvnconf_profile_activation_property_name_rangevar %if $MVNCONF_GENERATE_EMPTY_ELEMENTS $_mvnconf_profile_activation_property_name_rangevar = 01..01

        #if this is an orphaned value, we attach instance n to parent n:
        %ifndef $_mvnconf_profile_activation_property_name_rangevar $_mvnconf_profile_activation_property_name_rangevar = $_mvnconf_profile_activation_property_name_rangevar:xmlcg_default_value_range

        #if count is now specified, but value is not, then set to nil:
        %ifdef MVNCONF_PROFILE_ACTIVATION_PROPERTY_NAME_COUNT_01 %ifndef MVNCONF_PROFILE_ACTIVATION_PROPERTY_NAME_01 MVNCONF_PROFILE_ACTIVATION_PROPERTY_NAME_01=
#%eecho D: MVNCONF_PROFILE_ACTIVATION_PROPERTY_NAME_COUNT_01=$MVNCONF_PROFILE_ACTIVATION_PROPERTY_NAME_COUNT_01 MVNCONF_PROFILE_ACTIVATION_PROPERTY_NAME_01=$MVNCONF_PROFILE_ACTIVATION_PROPERTY_NAME_01

        #if count is specified as a simple count, then adjust to be 01..<count>:
        %if $_mvnconf_profile_activation_property_name_rangevar:valueof:isint   $_mvnconf_profile_activation_property_name_rangevar = 01..$_mvnconf_profile_activation_property_name_rangevar:valueof

        ########
#%eecho CALL <T> mvnconf_profile_activation_property_name: _mvnconf_profile_activation_property_name_rangevar=$_mvnconf_profile_activation_property_name_rangevar -> $_mvnconf_profile_activation_property_name_rangevar:valueof
        %foreach instance_count $_mvnconf_profile_activation_property_name_rangevar %call mvnconf_profile_activation_property_name
        ########
    }
    { #generate mvnconf_profile_activation_property_value terminal element:
#%eecho CALL <T> mvnconf_profile_activation_property_value: parent_instance_count=$parent_instance_count

        #did user specify a value for the first instance of this element?
        %ifdef MVNCONF_PROFILE_ACTIVATION_PROPERTY_VALUE MVNCONF_PROFILE_ACTIVATION_PROPERTY_VALUE_01 = $MVNCONF_PROFILE_ACTIVATION_PROPERTY_VALUE
#%eecho B: MVNCONF_PROFILE_ACTIVATION_PROPERTY_VALUE=$MVNCONF_PROFILE_ACTIVATION_PROPERTY_VALUE MVNCONF_PROFILE_ACTIVATION_PROPERTY_VALUE_01=$MVNCONF_PROFILE_ACTIVATION_PROPERTY_VALUE_01

        #if value is specified, but count is not, then specify count:
        %ifdef MVNCONF_PROFILE_ACTIVATION_PROPERTY_VALUE_01 %ifndef MVNCONF_PROFILE_ACTIVATION_PROPERTY_VALUE_COUNT_01 MVNCONF_PROFILE_ACTIVATION_PROPERTY_VALUE_COUNT_01 = 01..01

#%eecho C: MVNCONF_PROFILE_ACTIVATION_PROPERTY_VALUE_COUNT=$MVNCONF_PROFILE_ACTIVATION_PROPERTY_VALUE_COUNT MVNCONF_PROFILE_ACTIVATION_PROPERTY_VALUE_COUNT_01=$MVNCONF_PROFILE_ACTIVATION_PROPERTY_VALUE_COUNT_01

        _mvnconf_profile_activation_property_value_rangevar = MVNCONF_PROFILE_ACTIVATION_PROPERTY_VALUE_COUNT_$parent_instance_count

        #if count for this element is unspecified, then only generate if we are generating empties:
        %ifndef $_mvnconf_profile_activation_property_value_rangevar %if $MVNCONF_GENERATE_EMPTY_ELEMENTS $_mvnconf_profile_activation_property_value_rangevar = 01..01

        #if this is an orphaned value, we attach instance n to parent n:
        %ifndef $_mvnconf_profile_activation_property_value_rangevar $_mvnconf_profile_activation_property_value_rangevar = $_mvnconf_profile_activation_property_value_rangevar:xmlcg_default_value_range

        #if count is now specified, but value is not, then set to nil:
        %ifdef MVNCONF_PROFILE_ACTIVATION_PROPERTY_VALUE_COUNT_01 %ifndef MVNCONF_PROFILE_ACTIVATION_PROPERTY_VALUE_01 MVNCONF_PROFILE_ACTIVATION_PROPERTY_VALUE_01=
#%eecho D: MVNCONF_PROFILE_ACTIVATION_PROPERTY_VALUE_COUNT_01=$MVNCONF_PROFILE_ACTIVATION_PROPERTY_VALUE_COUNT_01 MVNCONF_PROFILE_ACTIVATION_PROPERTY_VALUE_01=$MVNCONF_PROFILE_ACTIVATION_PROPERTY_VALUE_01

        #if count is specified as a simple count, then adjust to be 01..<count>:
        %if $_mvnconf_profile_activation_property_value_rangevar:valueof:isint   $_mvnconf_profile_activation_property_value_rangevar = 01..$_mvnconf_profile_activation_property_value_rangevar:valueof

        ########
#%eecho CALL <T> mvnconf_profile_activation_property_value: _mvnconf_profile_activation_property_value_rangevar=$_mvnconf_profile_activation_property_value_rangevar -> $_mvnconf_profile_activation_property_value_rangevar:valueof
        %foreach instance_count $_mvnconf_profile_activation_property_value_rangevar %call mvnconf_profile_activation_property_value
        ########
    }
    ###########

    #now generate me:
    XML_ELEMENT_NAME =  property
    #the kids are our body:
    XML_ELEMENT_BODY =  $MACRO_OUTPUT_ACCUMULATOR:valueof
    #restore the output accumulator varaible name:
    MACRO_OUTPUT_ACCUMULATOR    = $_mvnconf_profile_activation_property_save_accumulator

    %call xml_nested_element

    #restore parent instance count:
    parent_instance_count = $_mvnconf_profile_activation_property_save_parent_ic
#%eecho EXIT mvnconf_profile_activation_property: parent_instance_count=$parent_instance_count
EOF
}

mvnconf_profile_activation_missing := << EOF
{# mvnconf_profile_activation_missing: TERMINAL ELEMENT
    mvnconf_profile_activation_missing_valuevar = MVNCONF_PROFILE_ACTIVATION_MISSING_$instance_count:pad:assign
    %ifndef $mvnconf_profile_activation_missing_valuevar    mvnconf_profile_activation_missing_valuevar = MVNCONF_PROFILE_ACTIVATION_MISSING

    #set element contents to nil if not defined:
    %ifndef $mvnconf_profile_activation_missing_valuevar    $mvnconf_profile_activation_missing_valuevar =

    XML_ELEMENT_NAME = missing
    XML_ELEMENT_BODY = $mvnconf_profile_activation_missing_valuevar:valueof
    %call xml_line_element
}
EOF

mvnconf_profile_activation_exists := << EOF
{# mvnconf_profile_activation_exists: TERMINAL ELEMENT
    mvnconf_profile_activation_exists_valuevar = MVNCONF_PROFILE_ACTIVATION_EXISTS_$instance_count:pad:assign
    %ifndef $mvnconf_profile_activation_exists_valuevar    mvnconf_profile_activation_exists_valuevar = MVNCONF_PROFILE_ACTIVATION_EXISTS

    #set element contents to nil if not defined:
    %ifndef $mvnconf_profile_activation_exists_valuevar    $mvnconf_profile_activation_exists_valuevar =

    XML_ELEMENT_NAME = exists
    XML_ELEMENT_BODY = $mvnconf_profile_activation_exists_valuevar:valueof
    %call xml_line_element
}
EOF

{# mvnconf_profile_activation_file: NON-TERMINAL ELEMENT
mvnconf_profile_activation_file := << EOF
#%eecho ENTER mvnconf_profile_activation_file: parent_instance_count=$parent_instance_count
    #parent_instance_count is zero for top element - normalize spec and increment:
    %ifnot $parent_instance_count NORMALIZE RESULT=$MVNCONF_:nameof:xmlcg_normalize_counts
    %ifnot $parent_instance_count %ifnot $NORMALIZE RESULT %eecho mvnconf_profile_activation_file: ERROR: MVNCONF_:nameof:xmlcg_normalize_counts FAILED - is xmlcg_ops.pl in your CG_TEMPLATE_PATH?

    %ifnot $parent_instance_count parent_instance_count = 01

    _mvnconf_profile_activation_file_save_accumulator = $MACRO_OUTPUT_ACCUMULATOR
    _mvnconf_profile_activation_file_save_parent_ic = $parent_instance_count
    parent_instance_count = $instance_count:pad

    #re-assign to temporary accumulator to pick up kids:
    MACRO_OUTPUT_ACCUMULATOR = _mvnconf_profile_activation_file_kid_accumulator
    #clear the kid accumulator:
    $MACRO_OUTPUT_ACCUMULATOR =

    #make calls to generate my kid elements:
    ########### GENERATE KIDS: ###########
    { #generate mvnconf_profile_activation_missing terminal element:
#%eecho CALL <T> mvnconf_profile_activation_missing: parent_instance_count=$parent_instance_count

        #did user specify a value for the first instance of this element?
        %ifdef MVNCONF_PROFILE_ACTIVATION_MISSING MVNCONF_PROFILE_ACTIVATION_MISSING_01 = $MVNCONF_PROFILE_ACTIVATION_MISSING
#%eecho B: MVNCONF_PROFILE_ACTIVATION_MISSING=$MVNCONF_PROFILE_ACTIVATION_MISSING MVNCONF_PROFILE_ACTIVATION_MISSING_01=$MVNCONF_PROFILE_ACTIVATION_MISSING_01

        #if value is specified, but count is not, then specify count:
        %ifdef MVNCONF_PROFILE_ACTIVATION_MISSING_01 %ifndef MVNCONF_PROFILE_ACTIVATION_MISSING_COUNT_01 MVNCONF_PROFILE_ACTIVATION_MISSING_COUNT_01 = 01..01

#%eecho C: MVNCONF_PROFILE_ACTIVATION_MISSING_COUNT=$MVNCONF_PROFILE_ACTIVATION_MISSING_COUNT MVNCONF_PROFILE_ACTIVATION_MISSING_COUNT_01=$MVNCONF_PROFILE_ACTIVATION_MISSING_COUNT_01

        _mvnconf_profile_activation_missing_rangevar = MVNCONF_PROFILE_ACTIVATION_MISSING_COUNT_$parent_instance_count

        #if count for this element is unspecified, then only generate if we are generating empties:
        %ifndef $_mvnconf_profile_activation_missing_rangevar %if $MVNCONF_GENERATE_EMPTY_ELEMENTS $_mvnconf_profile_activation_missing_rangevar = 01..01

        #if this is an orphaned value, we attach instance n to parent n:
        %ifndef $_mvnconf_profile_activation_missing_rangevar $_mvnconf_profile_activation_missing_rangevar = $_mvnconf_profile_activation_missing_rangevar:xmlcg_default_value_range

        #if count is now specified, but value is not, then set to nil:
        %ifdef MVNCONF_PROFILE_ACTIVATION_MISSING_COUNT_01 %ifndef MVNCONF_PROFILE_ACTIVATION_MISSING_01 MVNCONF_PROFILE_ACTIVATION_MISSING_01=
#%eecho D: MVNCONF_PROFILE_ACTIVATION_MISSING_COUNT_01=$MVNCONF_PROFILE_ACTIVATION_MISSING_COUNT_01 MVNCONF_PROFILE_ACTIVATION_MISSING_01=$MVNCONF_PROFILE_ACTIVATION_MISSING_01

        #if count is specified as a simple count, then adjust to be 01..<count>:
        %if $_mvnconf_profile_activation_missing_rangevar:valueof:isint   $_mvnconf_profile_activation_missing_rangevar = 01..$_mvnconf_profile_activation_missing_rangevar:valueof

        ########
#%eecho CALL <T> mvnconf_profile_activation_missing: _mvnconf_profile_activation_missing_rangevar=$_mvnconf_profile_activation_missing_rangevar -> $_mvnconf_profile_activation_missing_rangevar:valueof
        %foreach instance_count $_mvnconf_profile_activation_missing_rangevar %call mvnconf_profile_activation_missing
        ########
    }
    { #generate mvnconf_profile_activation_exists terminal element:
#%eecho CALL <T> mvnconf_profile_activation_exists: parent_instance_count=$parent_instance_count

        #did user specify a value for the first instance of this element?
        %ifdef MVNCONF_PROFILE_ACTIVATION_EXISTS MVNCONF_PROFILE_ACTIVATION_EXISTS_01 = $MVNCONF_PROFILE_ACTIVATION_EXISTS
#%eecho B: MVNCONF_PROFILE_ACTIVATION_EXISTS=$MVNCONF_PROFILE_ACTIVATION_EXISTS MVNCONF_PROFILE_ACTIVATION_EXISTS_01=$MVNCONF_PROFILE_ACTIVATION_EXISTS_01

        #if value is specified, but count is not, then specify count:
        %ifdef MVNCONF_PROFILE_ACTIVATION_EXISTS_01 %ifndef MVNCONF_PROFILE_ACTIVATION_EXISTS_COUNT_01 MVNCONF_PROFILE_ACTIVATION_EXISTS_COUNT_01 = 01..01

#%eecho C: MVNCONF_PROFILE_ACTIVATION_EXISTS_COUNT=$MVNCONF_PROFILE_ACTIVATION_EXISTS_COUNT MVNCONF_PROFILE_ACTIVATION_EXISTS_COUNT_01=$MVNCONF_PROFILE_ACTIVATION_EXISTS_COUNT_01

        _mvnconf_profile_activation_exists_rangevar = MVNCONF_PROFILE_ACTIVATION_EXISTS_COUNT_$parent_instance_count

        #if count for this element is unspecified, then only generate if we are generating empties:
        %ifndef $_mvnconf_profile_activation_exists_rangevar %if $MVNCONF_GENERATE_EMPTY_ELEMENTS $_mvnconf_profile_activation_exists_rangevar = 01..01

        #if this is an orphaned value, we attach instance n to parent n:
        %ifndef $_mvnconf_profile_activation_exists_rangevar $_mvnconf_profile_activation_exists_rangevar = $_mvnconf_profile_activation_exists_rangevar:xmlcg_default_value_range

        #if count is now specified, but value is not, then set to nil:
        %ifdef MVNCONF_PROFILE_ACTIVATION_EXISTS_COUNT_01 %ifndef MVNCONF_PROFILE_ACTIVATION_EXISTS_01 MVNCONF_PROFILE_ACTIVATION_EXISTS_01=
#%eecho D: MVNCONF_PROFILE_ACTIVATION_EXISTS_COUNT_01=$MVNCONF_PROFILE_ACTIVATION_EXISTS_COUNT_01 MVNCONF_PROFILE_ACTIVATION_EXISTS_01=$MVNCONF_PROFILE_ACTIVATION_EXISTS_01

        #if count is specified as a simple count, then adjust to be 01..<count>:
        %if $_mvnconf_profile_activation_exists_rangevar:valueof:isint   $_mvnconf_profile_activation_exists_rangevar = 01..$_mvnconf_profile_activation_exists_rangevar:valueof

        ########
#%eecho CALL <T> mvnconf_profile_activation_exists: _mvnconf_profile_activation_exists_rangevar=$_mvnconf_profile_activation_exists_rangevar -> $_mvnconf_profile_activation_exists_rangevar:valueof
        %foreach instance_count $_mvnconf_profile_activation_exists_rangevar %call mvnconf_profile_activation_exists
        ########
    }
    ###########

    #now generate me:
    XML_ELEMENT_NAME =  file
    #the kids are our body:
    XML_ELEMENT_BODY =  $MACRO_OUTPUT_ACCUMULATOR:valueof
    #restore the output accumulator varaible name:
    MACRO_OUTPUT_ACCUMULATOR    = $_mvnconf_profile_activation_file_save_accumulator

    %call xml_nested_element

    #restore parent instance count:
    parent_instance_count = $_mvnconf_profile_activation_file_save_parent_ic
#%eecho EXIT mvnconf_profile_activation_file: parent_instance_count=$parent_instance_count
EOF
}

mvnconf_profile_activation_activeByDefault := << EOF
{# mvnconf_profile_activation_activeByDefault: TERMINAL ELEMENT
    mvnconf_profile_activation_activeByDefault_valuevar = MVNCONF_PROFILE_ACTIVATION_ACTIVEBYDEFAULT_$instance_count:pad:assign
    %ifndef $mvnconf_profile_activation_activeByDefault_valuevar    mvnconf_profile_activation_activeByDefault_valuevar = MVNCONF_PROFILE_ACTIVATION_ACTIVEBYDEFAULT

    #set element contents to nil if not defined:
    %ifndef $mvnconf_profile_activation_activeByDefault_valuevar    $mvnconf_profile_activation_activeByDefault_valuevar =

    XML_ELEMENT_NAME = activeByDefault
    XML_ELEMENT_BODY = $mvnconf_profile_activation_activeByDefault_valuevar:valueof
    %call xml_line_element
}
EOF

mvnconf_profile_activation_jdk := << EOF
{# mvnconf_profile_activation_jdk: TERMINAL ELEMENT
    mvnconf_profile_activation_jdk_valuevar = MVNCONF_PROFILE_ACTIVATION_JDK_$instance_count:pad:assign
    %ifndef $mvnconf_profile_activation_jdk_valuevar    mvnconf_profile_activation_jdk_valuevar = MVNCONF_PROFILE_ACTIVATION_JDK

    #set element contents to nil if not defined:
    %ifndef $mvnconf_profile_activation_jdk_valuevar    $mvnconf_profile_activation_jdk_valuevar =

    XML_ELEMENT_NAME = jdk
    XML_ELEMENT_BODY = $mvnconf_profile_activation_jdk_valuevar:valueof
    %call xml_line_element
}
EOF

{# mvnconf_profile_activation: NON-TERMINAL ELEMENT
mvnconf_profile_activation := << EOF
#%eecho ENTER mvnconf_profile_activation: parent_instance_count=$parent_instance_count
    #parent_instance_count is zero for top element - normalize spec and increment:
    %ifnot $parent_instance_count NORMALIZE RESULT=$MVNCONF_:nameof:xmlcg_normalize_counts
    %ifnot $parent_instance_count %ifnot $NORMALIZE RESULT %eecho mvnconf_profile_activation: ERROR: MVNCONF_:nameof:xmlcg_normalize_counts FAILED - is xmlcg_ops.pl in your CG_TEMPLATE_PATH?

    %ifnot $parent_instance_count parent_instance_count = 01

    _mvnconf_profile_activation_save_accumulator = $MACRO_OUTPUT_ACCUMULATOR
    _mvnconf_profile_activation_save_parent_ic = $parent_instance_count
    parent_instance_count = $instance_count:pad

    #re-assign to temporary accumulator to pick up kids:
    MACRO_OUTPUT_ACCUMULATOR = _mvnconf_profile_activation_kid_accumulator
    #clear the kid accumulator:
    $MACRO_OUTPUT_ACCUMULATOR =

    #make calls to generate my kid elements:
    ########### GENERATE KIDS: ###########
    { #generate mvnconf_profile_activation_activeByDefault terminal element:
#%eecho CALL <T> mvnconf_profile_activation_activeByDefault: parent_instance_count=$parent_instance_count

        #did user specify a value for the first instance of this element?
        %ifdef MVNCONF_PROFILE_ACTIVATION_ACTIVEBYDEFAULT MVNCONF_PROFILE_ACTIVATION_ACTIVEBYDEFAULT_01 = $MVNCONF_PROFILE_ACTIVATION_ACTIVEBYDEFAULT
#%eecho B: MVNCONF_PROFILE_ACTIVATION_ACTIVEBYDEFAULT=$MVNCONF_PROFILE_ACTIVATION_ACTIVEBYDEFAULT MVNCONF_PROFILE_ACTIVATION_ACTIVEBYDEFAULT_01=$MVNCONF_PROFILE_ACTIVATION_ACTIVEBYDEFAULT_01

        #if value is specified, but count is not, then specify count:
        %ifdef MVNCONF_PROFILE_ACTIVATION_ACTIVEBYDEFAULT_01 %ifndef MVNCONF_PROFILE_ACTIVATION_ACTIVEBYDEFAULT_COUNT_01 MVNCONF_PROFILE_ACTIVATION_ACTIVEBYDEFAULT_COUNT_01 = 01..01

#%eecho C: MVNCONF_PROFILE_ACTIVATION_ACTIVEBYDEFAULT_COUNT=$MVNCONF_PROFILE_ACTIVATION_ACTIVEBYDEFAULT_COUNT MVNCONF_PROFILE_ACTIVATION_ACTIVEBYDEFAULT_COUNT_01=$MVNCONF_PROFILE_ACTIVATION_ACTIVEBYDEFAULT_COUNT_01

        _mvnconf_profile_activation_activeByDefault_rangevar = MVNCONF_PROFILE_ACTIVATION_ACTIVEBYDEFAULT_COUNT_$parent_instance_count

        #if count for this element is unspecified, then only generate if we are generating empties:
        %ifndef $_mvnconf_profile_activation_activeByDefault_rangevar %if $MVNCONF_GENERATE_EMPTY_ELEMENTS $_mvnconf_profile_activation_activeByDefault_rangevar = 01..01

        #if this is an orphaned value, we attach instance n to parent n:
        %ifndef $_mvnconf_profile_activation_activeByDefault_rangevar $_mvnconf_profile_activation_activeByDefault_rangevar = $_mvnconf_profile_activation_activeByDefault_rangevar:xmlcg_default_value_range

        #if count is now specified, but value is not, then set to nil:
        %ifdef MVNCONF_PROFILE_ACTIVATION_ACTIVEBYDEFAULT_COUNT_01 %ifndef MVNCONF_PROFILE_ACTIVATION_ACTIVEBYDEFAULT_01 MVNCONF_PROFILE_ACTIVATION_ACTIVEBYDEFAULT_01=
#%eecho D: MVNCONF_PROFILE_ACTIVATION_ACTIVEBYDEFAULT_COUNT_01=$MVNCONF_PROFILE_ACTIVATION_ACTIVEBYDEFAULT_COUNT_01 MVNCONF_PROFILE_ACTIVATION_ACTIVEBYDEFAULT_01=$MVNCONF_PROFILE_ACTIVATION_ACTIVEBYDEFAULT_01

        #if count is specified as a simple count, then adjust to be 01..<count>:
        %if $_mvnconf_profile_activation_activeByDefault_rangevar:valueof:isint   $_mvnconf_profile_activation_activeByDefault_rangevar = 01..$_mvnconf_profile_activation_activeByDefault_rangevar:valueof

        ########
#%eecho CALL <T> mvnconf_profile_activation_activeByDefault: _mvnconf_profile_activation_activeByDefault_rangevar=$_mvnconf_profile_activation_activeByDefault_rangevar -> $_mvnconf_profile_activation_activeByDefault_rangevar:valueof
        %foreach instance_count $_mvnconf_profile_activation_activeByDefault_rangevar %call mvnconf_profile_activation_activeByDefault
        ########
    }
    { #generate mvnconf_profile_activation_jdk terminal element:
#%eecho CALL <T> mvnconf_profile_activation_jdk: parent_instance_count=$parent_instance_count

        #did user specify a value for the first instance of this element?
        %ifdef MVNCONF_PROFILE_ACTIVATION_JDK MVNCONF_PROFILE_ACTIVATION_JDK_01 = $MVNCONF_PROFILE_ACTIVATION_JDK
#%eecho B: MVNCONF_PROFILE_ACTIVATION_JDK=$MVNCONF_PROFILE_ACTIVATION_JDK MVNCONF_PROFILE_ACTIVATION_JDK_01=$MVNCONF_PROFILE_ACTIVATION_JDK_01

        #if value is specified, but count is not, then specify count:
        %ifdef MVNCONF_PROFILE_ACTIVATION_JDK_01 %ifndef MVNCONF_PROFILE_ACTIVATION_JDK_COUNT_01 MVNCONF_PROFILE_ACTIVATION_JDK_COUNT_01 = 01..01

#%eecho C: MVNCONF_PROFILE_ACTIVATION_JDK_COUNT=$MVNCONF_PROFILE_ACTIVATION_JDK_COUNT MVNCONF_PROFILE_ACTIVATION_JDK_COUNT_01=$MVNCONF_PROFILE_ACTIVATION_JDK_COUNT_01

        _mvnconf_profile_activation_jdk_rangevar = MVNCONF_PROFILE_ACTIVATION_JDK_COUNT_$parent_instance_count

        #if count for this element is unspecified, then only generate if we are generating empties:
        %ifndef $_mvnconf_profile_activation_jdk_rangevar %if $MVNCONF_GENERATE_EMPTY_ELEMENTS $_mvnconf_profile_activation_jdk_rangevar = 01..01

        #if this is an orphaned value, we attach instance n to parent n:
        %ifndef $_mvnconf_profile_activation_jdk_rangevar $_mvnconf_profile_activation_jdk_rangevar = $_mvnconf_profile_activation_jdk_rangevar:xmlcg_default_value_range

        #if count is now specified, but value is not, then set to nil:
        %ifdef MVNCONF_PROFILE_ACTIVATION_JDK_COUNT_01 %ifndef MVNCONF_PROFILE_ACTIVATION_JDK_01 MVNCONF_PROFILE_ACTIVATION_JDK_01=
#%eecho D: MVNCONF_PROFILE_ACTIVATION_JDK_COUNT_01=$MVNCONF_PROFILE_ACTIVATION_JDK_COUNT_01 MVNCONF_PROFILE_ACTIVATION_JDK_01=$MVNCONF_PROFILE_ACTIVATION_JDK_01

        #if count is specified as a simple count, then adjust to be 01..<count>:
        %if $_mvnconf_profile_activation_jdk_rangevar:valueof:isint   $_mvnconf_profile_activation_jdk_rangevar = 01..$_mvnconf_profile_activation_jdk_rangevar:valueof

        ########
#%eecho CALL <T> mvnconf_profile_activation_jdk: _mvnconf_profile_activation_jdk_rangevar=$_mvnconf_profile_activation_jdk_rangevar -> $_mvnconf_profile_activation_jdk_rangevar:valueof
        %foreach instance_count $_mvnconf_profile_activation_jdk_rangevar %call mvnconf_profile_activation_jdk
        ########
    }
    { #generate mvnconf_profile_activation_o non-terminal element:
#%eecho A: CALL <NT> mvnconf_profile_activation_o: parent_instance_count=$parent_instance_count

        _mvnconf_profile_activation_o_rangevar = MVNCONF_PROFILE_ACTIVATION_O_COUNT_$parent_instance_count

        #if count for this non-terminal element is unspecified, then only generate if we are generating empties:
#%eecho B: CALL <NT> mvnconf_profile_activation_o: _mvnconf_profile_activation_o_rangevar=$_mvnconf_profile_activation_o_rangevar -> $_mvnconf_profile_activation_o_rangevar:valueof
        %ifndef $_mvnconf_profile_activation_o_rangevar %if $MVNCONF_GENERATE_EMPTY_ELEMENTS $_mvnconf_profile_activation_o_rangevar = 01..01

        #if count is still undefined for this terminal, then we're done:
        %ifndef $_mvnconf_profile_activation_o_rangevar $_mvnconf_profile_activation_o_rangevar = 01..00

        #if count is specified as a simple count, then adjust to be 01..<count>:
        %if $_mvnconf_profile_activation_o_rangevar:valueof:isint   $_mvnconf_profile_activation_o_rangevar = 01..$_mvnconf_profile_activation_o_rangevar:valueof

        ########
#%eecho C: CALL <NT> mvnconf_profile_activation_o: _mvnconf_profile_activation_o_rangevar=$_mvnconf_profile_activation_o_rangevar -> $_mvnconf_profile_activation_o_rangevar:valueof
        %foreach instance_count $_mvnconf_profile_activation_o_rangevar %call mvnconf_profile_activation_o
        ########
    }
    { #generate mvnconf_profile_activation_property non-terminal element:
#%eecho A: CALL <NT> mvnconf_profile_activation_property: parent_instance_count=$parent_instance_count

        _mvnconf_profile_activation_property_rangevar = MVNCONF_PROFILE_ACTIVATION_PROPERTY_COUNT_$parent_instance_count

        #if count for this non-terminal element is unspecified, then only generate if we are generating empties:
#%eecho B: CALL <NT> mvnconf_profile_activation_property: _mvnconf_profile_activation_property_rangevar=$_mvnconf_profile_activation_property_rangevar -> $_mvnconf_profile_activation_property_rangevar:valueof
        %ifndef $_mvnconf_profile_activation_property_rangevar %if $MVNCONF_GENERATE_EMPTY_ELEMENTS $_mvnconf_profile_activation_property_rangevar = 01..01

        #if count is still undefined for this terminal, then we're done:
        %ifndef $_mvnconf_profile_activation_property_rangevar $_mvnconf_profile_activation_property_rangevar = 01..00

        #if count is specified as a simple count, then adjust to be 01..<count>:
        %if $_mvnconf_profile_activation_property_rangevar:valueof:isint   $_mvnconf_profile_activation_property_rangevar = 01..$_mvnconf_profile_activation_property_rangevar:valueof

        ########
#%eecho C: CALL <NT> mvnconf_profile_activation_property: _mvnconf_profile_activation_property_rangevar=$_mvnconf_profile_activation_property_rangevar -> $_mvnconf_profile_activation_property_rangevar:valueof
        %foreach instance_count $_mvnconf_profile_activation_property_rangevar %call mvnconf_profile_activation_property
        ########
    }
    { #generate mvnconf_profile_activation_file non-terminal element:
#%eecho A: CALL <NT> mvnconf_profile_activation_file: parent_instance_count=$parent_instance_count

        _mvnconf_profile_activation_file_rangevar = MVNCONF_PROFILE_ACTIVATION_FILE_COUNT_$parent_instance_count

        #if count for this non-terminal element is unspecified, then only generate if we are generating empties:
#%eecho B: CALL <NT> mvnconf_profile_activation_file: _mvnconf_profile_activation_file_rangevar=$_mvnconf_profile_activation_file_rangevar -> $_mvnconf_profile_activation_file_rangevar:valueof
        %ifndef $_mvnconf_profile_activation_file_rangevar %if $MVNCONF_GENERATE_EMPTY_ELEMENTS $_mvnconf_profile_activation_file_rangevar = 01..01

        #if count is still undefined for this terminal, then we're done:
        %ifndef $_mvnconf_profile_activation_file_rangevar $_mvnconf_profile_activation_file_rangevar = 01..00

        #if count is specified as a simple count, then adjust to be 01..<count>:
        %if $_mvnconf_profile_activation_file_rangevar:valueof:isint   $_mvnconf_profile_activation_file_rangevar = 01..$_mvnconf_profile_activation_file_rangevar:valueof

        ########
#%eecho C: CALL <NT> mvnconf_profile_activation_file: _mvnconf_profile_activation_file_rangevar=$_mvnconf_profile_activation_file_rangevar -> $_mvnconf_profile_activation_file_rangevar:valueof
        %foreach instance_count $_mvnconf_profile_activation_file_rangevar %call mvnconf_profile_activation_file
        ########
    }
    ###########

    #now generate me:
    XML_ELEMENT_NAME =  activation
    #the kids are our body:
    XML_ELEMENT_BODY =  $MACRO_OUTPUT_ACCUMULATOR:valueof
    #restore the output accumulator varaible name:
    MACRO_OUTPUT_ACCUMULATOR    = $_mvnconf_profile_activation_save_accumulator

    %call xml_nested_element

    #restore parent instance count:
    parent_instance_count = $_mvnconf_profile_activation_save_parent_ic
#%eecho EXIT mvnconf_profile_activation: parent_instance_count=$parent_instance_count
EOF
}

mvnconf_profile_repository_release_enabled := << EOF
{# mvnconf_profile_repository_release_enabled: TERMINAL ELEMENT
    mvnconf_profile_repository_release_enabled_valuevar = MVNCONF_PROFILE_REPOSITORY_RELEASE_ENABLED_$instance_count:pad:assign
    %ifndef $mvnconf_profile_repository_release_enabled_valuevar    mvnconf_profile_repository_release_enabled_valuevar = MVNCONF_PROFILE_REPOSITORY_RELEASE_ENABLED

    #set element contents to nil if not defined:
    %ifndef $mvnconf_profile_repository_release_enabled_valuevar    $mvnconf_profile_repository_release_enabled_valuevar =

    XML_ELEMENT_NAME = enabled
    XML_ELEMENT_BODY = $mvnconf_profile_repository_release_enabled_valuevar:valueof
    %call xml_line_element
}
EOF

mvnconf_profile_repository_release_updatePolicy := << EOF
{# mvnconf_profile_repository_release_updatePolicy: TERMINAL ELEMENT
    mvnconf_profile_repository_release_updatePolicy_valuevar = MVNCONF_PROFILE_REPOSITORY_RELEASE_UPDATEPOLICY_$instance_count:pad:assign
    %ifndef $mvnconf_profile_repository_release_updatePolicy_valuevar    mvnconf_profile_repository_release_updatePolicy_valuevar = MVNCONF_PROFILE_REPOSITORY_RELEASE_UPDATEPOLICY

    #set element contents to nil if not defined:
    %ifndef $mvnconf_profile_repository_release_updatePolicy_valuevar    $mvnconf_profile_repository_release_updatePolicy_valuevar =

    XML_ELEMENT_NAME = updatePolicy
    XML_ELEMENT_BODY = $mvnconf_profile_repository_release_updatePolicy_valuevar:valueof
    %call xml_line_element
}
EOF

mvnconf_profile_repository_release_checksumPolicy := << EOF
{# mvnconf_profile_repository_release_checksumPolicy: TERMINAL ELEMENT
    mvnconf_profile_repository_release_checksumPolicy_valuevar = MVNCONF_PROFILE_REPOSITORY_RELEASE_CHECKSUMPOLICY_$instance_count:pad:assign
    %ifndef $mvnconf_profile_repository_release_checksumPolicy_valuevar    mvnconf_profile_repository_release_checksumPolicy_valuevar = MVNCONF_PROFILE_REPOSITORY_RELEASE_CHECKSUMPOLICY

    #set element contents to nil if not defined:
    %ifndef $mvnconf_profile_repository_release_checksumPolicy_valuevar    $mvnconf_profile_repository_release_checksumPolicy_valuevar =

    XML_ELEMENT_NAME = checksumPolicy
    XML_ELEMENT_BODY = $mvnconf_profile_repository_release_checksumPolicy_valuevar:valueof
    %call xml_line_element
}
EOF

{# mvnconf_profile_repository_release: NON-TERMINAL ELEMENT
mvnconf_profile_repository_release := << EOF
#%eecho ENTER mvnconf_profile_repository_release: parent_instance_count=$parent_instance_count
    #parent_instance_count is zero for top element - normalize spec and increment:
    %ifnot $parent_instance_count NORMALIZE RESULT=$MVNCONF_:nameof:xmlcg_normalize_counts
    %ifnot $parent_instance_count %ifnot $NORMALIZE RESULT %eecho mvnconf_profile_repository_release: ERROR: MVNCONF_:nameof:xmlcg_normalize_counts FAILED - is xmlcg_ops.pl in your CG_TEMPLATE_PATH?

    %ifnot $parent_instance_count parent_instance_count = 01

    _mvnconf_profile_repository_release_save_accumulator = $MACRO_OUTPUT_ACCUMULATOR
    _mvnconf_profile_repository_release_save_parent_ic = $parent_instance_count
    parent_instance_count = $instance_count:pad

    #re-assign to temporary accumulator to pick up kids:
    MACRO_OUTPUT_ACCUMULATOR = _mvnconf_profile_repository_release_kid_accumulator
    #clear the kid accumulator:
    $MACRO_OUTPUT_ACCUMULATOR =

    #make calls to generate my kid elements:
    ########### GENERATE KIDS: ###########
    { #generate mvnconf_profile_repository_release_enabled terminal element:
#%eecho CALL <T> mvnconf_profile_repository_release_enabled: parent_instance_count=$parent_instance_count

        #did user specify a value for the first instance of this element?
        %ifdef MVNCONF_PROFILE_REPOSITORY_RELEASE_ENABLED MVNCONF_PROFILE_REPOSITORY_RELEASE_ENABLED_01 = $MVNCONF_PROFILE_REPOSITORY_RELEASE_ENABLED
#%eecho B: MVNCONF_PROFILE_REPOSITORY_RELEASE_ENABLED=$MVNCONF_PROFILE_REPOSITORY_RELEASE_ENABLED MVNCONF_PROFILE_REPOSITORY_RELEASE_ENABLED_01=$MVNCONF_PROFILE_REPOSITORY_RELEASE_ENABLED_01

        #if value is specified, but count is not, then specify count:
        %ifdef MVNCONF_PROFILE_REPOSITORY_RELEASE_ENABLED_01 %ifndef MVNCONF_PROFILE_REPOSITORY_RELEASE_ENABLED_COUNT_01 MVNCONF_PROFILE_REPOSITORY_RELEASE_ENABLED_COUNT_01 = 01..01

#%eecho C: MVNCONF_PROFILE_REPOSITORY_RELEASE_ENABLED_COUNT=$MVNCONF_PROFILE_REPOSITORY_RELEASE_ENABLED_COUNT MVNCONF_PROFILE_REPOSITORY_RELEASE_ENABLED_COUNT_01=$MVNCONF_PROFILE_REPOSITORY_RELEASE_ENABLED_COUNT_01

        _mvnconf_profile_repository_release_enabled_rangevar = MVNCONF_PROFILE_REPOSITORY_RELEASE_ENABLED_COUNT_$parent_instance_count

        #if count for this element is unspecified, then only generate if we are generating empties:
        %ifndef $_mvnconf_profile_repository_release_enabled_rangevar %if $MVNCONF_GENERATE_EMPTY_ELEMENTS $_mvnconf_profile_repository_release_enabled_rangevar = 01..01

        #if this is an orphaned value, we attach instance n to parent n:
        %ifndef $_mvnconf_profile_repository_release_enabled_rangevar $_mvnconf_profile_repository_release_enabled_rangevar = $_mvnconf_profile_repository_release_enabled_rangevar:xmlcg_default_value_range

        #if count is now specified, but value is not, then set to nil:
        %ifdef MVNCONF_PROFILE_REPOSITORY_RELEASE_ENABLED_COUNT_01 %ifndef MVNCONF_PROFILE_REPOSITORY_RELEASE_ENABLED_01 MVNCONF_PROFILE_REPOSITORY_RELEASE_ENABLED_01=
#%eecho D: MVNCONF_PROFILE_REPOSITORY_RELEASE_ENABLED_COUNT_01=$MVNCONF_PROFILE_REPOSITORY_RELEASE_ENABLED_COUNT_01 MVNCONF_PROFILE_REPOSITORY_RELEASE_ENABLED_01=$MVNCONF_PROFILE_REPOSITORY_RELEASE_ENABLED_01

        #if count is specified as a simple count, then adjust to be 01..<count>:
        %if $_mvnconf_profile_repository_release_enabled_rangevar:valueof:isint   $_mvnconf_profile_repository_release_enabled_rangevar = 01..$_mvnconf_profile_repository_release_enabled_rangevar:valueof

        ########
#%eecho CALL <T> mvnconf_profile_repository_release_enabled: _mvnconf_profile_repository_release_enabled_rangevar=$_mvnconf_profile_repository_release_enabled_rangevar -> $_mvnconf_profile_repository_release_enabled_rangevar:valueof
        %foreach instance_count $_mvnconf_profile_repository_release_enabled_rangevar %call mvnconf_profile_repository_release_enabled
        ########
    }
    { #generate mvnconf_profile_repository_release_updatePolicy terminal element:
#%eecho CALL <T> mvnconf_profile_repository_release_updatePolicy: parent_instance_count=$parent_instance_count

        #did user specify a value for the first instance of this element?
        %ifdef MVNCONF_PROFILE_REPOSITORY_RELEASE_UPDATEPOLICY MVNCONF_PROFILE_REPOSITORY_RELEASE_UPDATEPOLICY_01 = $MVNCONF_PROFILE_REPOSITORY_RELEASE_UPDATEPOLICY
#%eecho B: MVNCONF_PROFILE_REPOSITORY_RELEASE_UPDATEPOLICY=$MVNCONF_PROFILE_REPOSITORY_RELEASE_UPDATEPOLICY MVNCONF_PROFILE_REPOSITORY_RELEASE_UPDATEPOLICY_01=$MVNCONF_PROFILE_REPOSITORY_RELEASE_UPDATEPOLICY_01

        #if value is specified, but count is not, then specify count:
        %ifdef MVNCONF_PROFILE_REPOSITORY_RELEASE_UPDATEPOLICY_01 %ifndef MVNCONF_PROFILE_REPOSITORY_RELEASE_UPDATEPOLICY_COUNT_01 MVNCONF_PROFILE_REPOSITORY_RELEASE_UPDATEPOLICY_COUNT_01 = 01..01

#%eecho C: MVNCONF_PROFILE_REPOSITORY_RELEASE_UPDATEPOLICY_COUNT=$MVNCONF_PROFILE_REPOSITORY_RELEASE_UPDATEPOLICY_COUNT MVNCONF_PROFILE_REPOSITORY_RELEASE_UPDATEPOLICY_COUNT_01=$MVNCONF_PROFILE_REPOSITORY_RELEASE_UPDATEPOLICY_COUNT_01

        _mvnconf_profile_repository_release_updatePolicy_rangevar = MVNCONF_PROFILE_REPOSITORY_RELEASE_UPDATEPOLICY_COUNT_$parent_instance_count

        #if count for this element is unspecified, then only generate if we are generating empties:
        %ifndef $_mvnconf_profile_repository_release_updatePolicy_rangevar %if $MVNCONF_GENERATE_EMPTY_ELEMENTS $_mvnconf_profile_repository_release_updatePolicy_rangevar = 01..01

        #if this is an orphaned value, we attach instance n to parent n:
        %ifndef $_mvnconf_profile_repository_release_updatePolicy_rangevar $_mvnconf_profile_repository_release_updatePolicy_rangevar = $_mvnconf_profile_repository_release_updatePolicy_rangevar:xmlcg_default_value_range

        #if count is now specified, but value is not, then set to nil:
        %ifdef MVNCONF_PROFILE_REPOSITORY_RELEASE_UPDATEPOLICY_COUNT_01 %ifndef MVNCONF_PROFILE_REPOSITORY_RELEASE_UPDATEPOLICY_01 MVNCONF_PROFILE_REPOSITORY_RELEASE_UPDATEPOLICY_01=
#%eecho D: MVNCONF_PROFILE_REPOSITORY_RELEASE_UPDATEPOLICY_COUNT_01=$MVNCONF_PROFILE_REPOSITORY_RELEASE_UPDATEPOLICY_COUNT_01 MVNCONF_PROFILE_REPOSITORY_RELEASE_UPDATEPOLICY_01=$MVNCONF_PROFILE_REPOSITORY_RELEASE_UPDATEPOLICY_01

        #if count is specified as a simple count, then adjust to be 01..<count>:
        %if $_mvnconf_profile_repository_release_updatePolicy_rangevar:valueof:isint   $_mvnconf_profile_repository_release_updatePolicy_rangevar = 01..$_mvnconf_profile_repository_release_updatePolicy_rangevar:valueof

        ########
#%eecho CALL <T> mvnconf_profile_repository_release_updatePolicy: _mvnconf_profile_repository_release_updatePolicy_rangevar=$_mvnconf_profile_repository_release_updatePolicy_rangevar -> $_mvnconf_profile_repository_release_updatePolicy_rangevar:valueof
        %foreach instance_count $_mvnconf_profile_repository_release_updatePolicy_rangevar %call mvnconf_profile_repository_release_updatePolicy
        ########
    }
    { #generate mvnconf_profile_repository_release_checksumPolicy terminal element:
#%eecho CALL <T> mvnconf_profile_repository_release_checksumPolicy: parent_instance_count=$parent_instance_count

        #did user specify a value for the first instance of this element?
        %ifdef MVNCONF_PROFILE_REPOSITORY_RELEASE_CHECKSUMPOLICY MVNCONF_PROFILE_REPOSITORY_RELEASE_CHECKSUMPOLICY_01 = $MVNCONF_PROFILE_REPOSITORY_RELEASE_CHECKSUMPOLICY
#%eecho B: MVNCONF_PROFILE_REPOSITORY_RELEASE_CHECKSUMPOLICY=$MVNCONF_PROFILE_REPOSITORY_RELEASE_CHECKSUMPOLICY MVNCONF_PROFILE_REPOSITORY_RELEASE_CHECKSUMPOLICY_01=$MVNCONF_PROFILE_REPOSITORY_RELEASE_CHECKSUMPOLICY_01

        #if value is specified, but count is not, then specify count:
        %ifdef MVNCONF_PROFILE_REPOSITORY_RELEASE_CHECKSUMPOLICY_01 %ifndef MVNCONF_PROFILE_REPOSITORY_RELEASE_CHECKSUMPOLICY_COUNT_01 MVNCONF_PROFILE_REPOSITORY_RELEASE_CHECKSUMPOLICY_COUNT_01 = 01..01

#%eecho C: MVNCONF_PROFILE_REPOSITORY_RELEASE_CHECKSUMPOLICY_COUNT=$MVNCONF_PROFILE_REPOSITORY_RELEASE_CHECKSUMPOLICY_COUNT MVNCONF_PROFILE_REPOSITORY_RELEASE_CHECKSUMPOLICY_COUNT_01=$MVNCONF_PROFILE_REPOSITORY_RELEASE_CHECKSUMPOLICY_COUNT_01

        _mvnconf_profile_repository_release_checksumPolicy_rangevar = MVNCONF_PROFILE_REPOSITORY_RELEASE_CHECKSUMPOLICY_COUNT_$parent_instance_count

        #if count for this element is unspecified, then only generate if we are generating empties:
        %ifndef $_mvnconf_profile_repository_release_checksumPolicy_rangevar %if $MVNCONF_GENERATE_EMPTY_ELEMENTS $_mvnconf_profile_repository_release_checksumPolicy_rangevar = 01..01

        #if this is an orphaned value, we attach instance n to parent n:
        %ifndef $_mvnconf_profile_repository_release_checksumPolicy_rangevar $_mvnconf_profile_repository_release_checksumPolicy_rangevar = $_mvnconf_profile_repository_release_checksumPolicy_rangevar:xmlcg_default_value_range

        #if count is now specified, but value is not, then set to nil:
        %ifdef MVNCONF_PROFILE_REPOSITORY_RELEASE_CHECKSUMPOLICY_COUNT_01 %ifndef MVNCONF_PROFILE_REPOSITORY_RELEASE_CHECKSUMPOLICY_01 MVNCONF_PROFILE_REPOSITORY_RELEASE_CHECKSUMPOLICY_01=
#%eecho D: MVNCONF_PROFILE_REPOSITORY_RELEASE_CHECKSUMPOLICY_COUNT_01=$MVNCONF_PROFILE_REPOSITORY_RELEASE_CHECKSUMPOLICY_COUNT_01 MVNCONF_PROFILE_REPOSITORY_RELEASE_CHECKSUMPOLICY_01=$MVNCONF_PROFILE_REPOSITORY_RELEASE_CHECKSUMPOLICY_01

        #if count is specified as a simple count, then adjust to be 01..<count>:
        %if $_mvnconf_profile_repository_release_checksumPolicy_rangevar:valueof:isint   $_mvnconf_profile_repository_release_checksumPolicy_rangevar = 01..$_mvnconf_profile_repository_release_checksumPolicy_rangevar:valueof

        ########
#%eecho CALL <T> mvnconf_profile_repository_release_checksumPolicy: _mvnconf_profile_repository_release_checksumPolicy_rangevar=$_mvnconf_profile_repository_release_checksumPolicy_rangevar -> $_mvnconf_profile_repository_release_checksumPolicy_rangevar:valueof
        %foreach instance_count $_mvnconf_profile_repository_release_checksumPolicy_rangevar %call mvnconf_profile_repository_release_checksumPolicy
        ########
    }
    ###########

    #now generate me:
    XML_ELEMENT_NAME =  release
    #the kids are our body:
    XML_ELEMENT_BODY =  $MACRO_OUTPUT_ACCUMULATOR:valueof
    #restore the output accumulator varaible name:
    MACRO_OUTPUT_ACCUMULATOR    = $_mvnconf_profile_repository_release_save_accumulator

    %call xml_nested_element

    #restore parent instance count:
    parent_instance_count = $_mvnconf_profile_repository_release_save_parent_ic
#%eecho EXIT mvnconf_profile_repository_release: parent_instance_count=$parent_instance_count
EOF
}

mvnconf_profile_repository_snapshot_enabled := << EOF
{# mvnconf_profile_repository_snapshot_enabled: TERMINAL ELEMENT
    mvnconf_profile_repository_snapshot_enabled_valuevar = MVNCONF_PROFILE_REPOSITORY_SNAPSHOT_ENABLED_$instance_count:pad:assign
    %ifndef $mvnconf_profile_repository_snapshot_enabled_valuevar    mvnconf_profile_repository_snapshot_enabled_valuevar = MVNCONF_PROFILE_REPOSITORY_SNAPSHOT_ENABLED

    #set element contents to nil if not defined:
    %ifndef $mvnconf_profile_repository_snapshot_enabled_valuevar    $mvnconf_profile_repository_snapshot_enabled_valuevar =

    XML_ELEMENT_NAME = enabled
    XML_ELEMENT_BODY = $mvnconf_profile_repository_snapshot_enabled_valuevar:valueof
    %call xml_line_element
}
EOF

mvnconf_profile_repository_snapshot_updatePolicy := << EOF
{# mvnconf_profile_repository_snapshot_updatePolicy: TERMINAL ELEMENT
    mvnconf_profile_repository_snapshot_updatePolicy_valuevar = MVNCONF_PROFILE_REPOSITORY_SNAPSHOT_UPDATEPOLICY_$instance_count:pad:assign
    %ifndef $mvnconf_profile_repository_snapshot_updatePolicy_valuevar    mvnconf_profile_repository_snapshot_updatePolicy_valuevar = MVNCONF_PROFILE_REPOSITORY_SNAPSHOT_UPDATEPOLICY

    #set element contents to nil if not defined:
    %ifndef $mvnconf_profile_repository_snapshot_updatePolicy_valuevar    $mvnconf_profile_repository_snapshot_updatePolicy_valuevar =

    XML_ELEMENT_NAME = updatePolicy
    XML_ELEMENT_BODY = $mvnconf_profile_repository_snapshot_updatePolicy_valuevar:valueof
    %call xml_line_element
}
EOF

mvnconf_profile_repository_snapshot_checksumPolicy := << EOF
{# mvnconf_profile_repository_snapshot_checksumPolicy: TERMINAL ELEMENT
    mvnconf_profile_repository_snapshot_checksumPolicy_valuevar = MVNCONF_PROFILE_REPOSITORY_SNAPSHOT_CHECKSUMPOLICY_$instance_count:pad:assign
    %ifndef $mvnconf_profile_repository_snapshot_checksumPolicy_valuevar    mvnconf_profile_repository_snapshot_checksumPolicy_valuevar = MVNCONF_PROFILE_REPOSITORY_SNAPSHOT_CHECKSUMPOLICY

    #set element contents to nil if not defined:
    %ifndef $mvnconf_profile_repository_snapshot_checksumPolicy_valuevar    $mvnconf_profile_repository_snapshot_checksumPolicy_valuevar =

    XML_ELEMENT_NAME = checksumPolicy
    XML_ELEMENT_BODY = $mvnconf_profile_repository_snapshot_checksumPolicy_valuevar:valueof
    %call xml_line_element
}
EOF

{# mvnconf_profile_repository_snapshot: NON-TERMINAL ELEMENT
mvnconf_profile_repository_snapshot := << EOF
#%eecho ENTER mvnconf_profile_repository_snapshot: parent_instance_count=$parent_instance_count
    #parent_instance_count is zero for top element - normalize spec and increment:
    %ifnot $parent_instance_count NORMALIZE RESULT=$MVNCONF_:nameof:xmlcg_normalize_counts
    %ifnot $parent_instance_count %ifnot $NORMALIZE RESULT %eecho mvnconf_profile_repository_snapshot: ERROR: MVNCONF_:nameof:xmlcg_normalize_counts FAILED - is xmlcg_ops.pl in your CG_TEMPLATE_PATH?

    %ifnot $parent_instance_count parent_instance_count = 01

    _mvnconf_profile_repository_snapshot_save_accumulator = $MACRO_OUTPUT_ACCUMULATOR
    _mvnconf_profile_repository_snapshot_save_parent_ic = $parent_instance_count
    parent_instance_count = $instance_count:pad

    #re-assign to temporary accumulator to pick up kids:
    MACRO_OUTPUT_ACCUMULATOR = _mvnconf_profile_repository_snapshot_kid_accumulator
    #clear the kid accumulator:
    $MACRO_OUTPUT_ACCUMULATOR =

    #make calls to generate my kid elements:
    ########### GENERATE KIDS: ###########
    { #generate mvnconf_profile_repository_snapshot_enabled terminal element:
#%eecho CALL <T> mvnconf_profile_repository_snapshot_enabled: parent_instance_count=$parent_instance_count

        #did user specify a value for the first instance of this element?
        %ifdef MVNCONF_PROFILE_REPOSITORY_SNAPSHOT_ENABLED MVNCONF_PROFILE_REPOSITORY_SNAPSHOT_ENABLED_01 = $MVNCONF_PROFILE_REPOSITORY_SNAPSHOT_ENABLED
#%eecho B: MVNCONF_PROFILE_REPOSITORY_SNAPSHOT_ENABLED=$MVNCONF_PROFILE_REPOSITORY_SNAPSHOT_ENABLED MVNCONF_PROFILE_REPOSITORY_SNAPSHOT_ENABLED_01=$MVNCONF_PROFILE_REPOSITORY_SNAPSHOT_ENABLED_01

        #if value is specified, but count is not, then specify count:
        %ifdef MVNCONF_PROFILE_REPOSITORY_SNAPSHOT_ENABLED_01 %ifndef MVNCONF_PROFILE_REPOSITORY_SNAPSHOT_ENABLED_COUNT_01 MVNCONF_PROFILE_REPOSITORY_SNAPSHOT_ENABLED_COUNT_01 = 01..01

#%eecho C: MVNCONF_PROFILE_REPOSITORY_SNAPSHOT_ENABLED_COUNT=$MVNCONF_PROFILE_REPOSITORY_SNAPSHOT_ENABLED_COUNT MVNCONF_PROFILE_REPOSITORY_SNAPSHOT_ENABLED_COUNT_01=$MVNCONF_PROFILE_REPOSITORY_SNAPSHOT_ENABLED_COUNT_01

        _mvnconf_profile_repository_snapshot_enabled_rangevar = MVNCONF_PROFILE_REPOSITORY_SNAPSHOT_ENABLED_COUNT_$parent_instance_count

        #if count for this element is unspecified, then only generate if we are generating empties:
        %ifndef $_mvnconf_profile_repository_snapshot_enabled_rangevar %if $MVNCONF_GENERATE_EMPTY_ELEMENTS $_mvnconf_profile_repository_snapshot_enabled_rangevar = 01..01

        #if this is an orphaned value, we attach instance n to parent n:
        %ifndef $_mvnconf_profile_repository_snapshot_enabled_rangevar $_mvnconf_profile_repository_snapshot_enabled_rangevar = $_mvnconf_profile_repository_snapshot_enabled_rangevar:xmlcg_default_value_range

        #if count is now specified, but value is not, then set to nil:
        %ifdef MVNCONF_PROFILE_REPOSITORY_SNAPSHOT_ENABLED_COUNT_01 %ifndef MVNCONF_PROFILE_REPOSITORY_SNAPSHOT_ENABLED_01 MVNCONF_PROFILE_REPOSITORY_SNAPSHOT_ENABLED_01=
#%eecho D: MVNCONF_PROFILE_REPOSITORY_SNAPSHOT_ENABLED_COUNT_01=$MVNCONF_PROFILE_REPOSITORY_SNAPSHOT_ENABLED_COUNT_01 MVNCONF_PROFILE_REPOSITORY_SNAPSHOT_ENABLED_01=$MVNCONF_PROFILE_REPOSITORY_SNAPSHOT_ENABLED_01

        #if count is specified as a simple count, then adjust to be 01..<count>:
        %if $_mvnconf_profile_repository_snapshot_enabled_rangevar:valueof:isint   $_mvnconf_profile_repository_snapshot_enabled_rangevar = 01..$_mvnconf_profile_repository_snapshot_enabled_rangevar:valueof

        ########
#%eecho CALL <T> mvnconf_profile_repository_snapshot_enabled: _mvnconf_profile_repository_snapshot_enabled_rangevar=$_mvnconf_profile_repository_snapshot_enabled_rangevar -> $_mvnconf_profile_repository_snapshot_enabled_rangevar:valueof
        %foreach instance_count $_mvnconf_profile_repository_snapshot_enabled_rangevar %call mvnconf_profile_repository_snapshot_enabled
        ########
    }
    { #generate mvnconf_profile_repository_snapshot_updatePolicy terminal element:
#%eecho CALL <T> mvnconf_profile_repository_snapshot_updatePolicy: parent_instance_count=$parent_instance_count

        #did user specify a value for the first instance of this element?
        %ifdef MVNCONF_PROFILE_REPOSITORY_SNAPSHOT_UPDATEPOLICY MVNCONF_PROFILE_REPOSITORY_SNAPSHOT_UPDATEPOLICY_01 = $MVNCONF_PROFILE_REPOSITORY_SNAPSHOT_UPDATEPOLICY
#%eecho B: MVNCONF_PROFILE_REPOSITORY_SNAPSHOT_UPDATEPOLICY=$MVNCONF_PROFILE_REPOSITORY_SNAPSHOT_UPDATEPOLICY MVNCONF_PROFILE_REPOSITORY_SNAPSHOT_UPDATEPOLICY_01=$MVNCONF_PROFILE_REPOSITORY_SNAPSHOT_UPDATEPOLICY_01

        #if value is specified, but count is not, then specify count:
        %ifdef MVNCONF_PROFILE_REPOSITORY_SNAPSHOT_UPDATEPOLICY_01 %ifndef MVNCONF_PROFILE_REPOSITORY_SNAPSHOT_UPDATEPOLICY_COUNT_01 MVNCONF_PROFILE_REPOSITORY_SNAPSHOT_UPDATEPOLICY_COUNT_01 = 01..01

#%eecho C: MVNCONF_PROFILE_REPOSITORY_SNAPSHOT_UPDATEPOLICY_COUNT=$MVNCONF_PROFILE_REPOSITORY_SNAPSHOT_UPDATEPOLICY_COUNT MVNCONF_PROFILE_REPOSITORY_SNAPSHOT_UPDATEPOLICY_COUNT_01=$MVNCONF_PROFILE_REPOSITORY_SNAPSHOT_UPDATEPOLICY_COUNT_01

        _mvnconf_profile_repository_snapshot_updatePolicy_rangevar = MVNCONF_PROFILE_REPOSITORY_SNAPSHOT_UPDATEPOLICY_COUNT_$parent_instance_count

        #if count for this element is unspecified, then only generate if we are generating empties:
        %ifndef $_mvnconf_profile_repository_snapshot_updatePolicy_rangevar %if $MVNCONF_GENERATE_EMPTY_ELEMENTS $_mvnconf_profile_repository_snapshot_updatePolicy_rangevar = 01..01

        #if this is an orphaned value, we attach instance n to parent n:
        %ifndef $_mvnconf_profile_repository_snapshot_updatePolicy_rangevar $_mvnconf_profile_repository_snapshot_updatePolicy_rangevar = $_mvnconf_profile_repository_snapshot_updatePolicy_rangevar:xmlcg_default_value_range

        #if count is now specified, but value is not, then set to nil:
        %ifdef MVNCONF_PROFILE_REPOSITORY_SNAPSHOT_UPDATEPOLICY_COUNT_01 %ifndef MVNCONF_PROFILE_REPOSITORY_SNAPSHOT_UPDATEPOLICY_01 MVNCONF_PROFILE_REPOSITORY_SNAPSHOT_UPDATEPOLICY_01=
#%eecho D: MVNCONF_PROFILE_REPOSITORY_SNAPSHOT_UPDATEPOLICY_COUNT_01=$MVNCONF_PROFILE_REPOSITORY_SNAPSHOT_UPDATEPOLICY_COUNT_01 MVNCONF_PROFILE_REPOSITORY_SNAPSHOT_UPDATEPOLICY_01=$MVNCONF_PROFILE_REPOSITORY_SNAPSHOT_UPDATEPOLICY_01

        #if count is specified as a simple count, then adjust to be 01..<count>:
        %if $_mvnconf_profile_repository_snapshot_updatePolicy_rangevar:valueof:isint   $_mvnconf_profile_repository_snapshot_updatePolicy_rangevar = 01..$_mvnconf_profile_repository_snapshot_updatePolicy_rangevar:valueof

        ########
#%eecho CALL <T> mvnconf_profile_repository_snapshot_updatePolicy: _mvnconf_profile_repository_snapshot_updatePolicy_rangevar=$_mvnconf_profile_repository_snapshot_updatePolicy_rangevar -> $_mvnconf_profile_repository_snapshot_updatePolicy_rangevar:valueof
        %foreach instance_count $_mvnconf_profile_repository_snapshot_updatePolicy_rangevar %call mvnconf_profile_repository_snapshot_updatePolicy
        ########
    }
    { #generate mvnconf_profile_repository_snapshot_checksumPolicy terminal element:
#%eecho CALL <T> mvnconf_profile_repository_snapshot_checksumPolicy: parent_instance_count=$parent_instance_count

        #did user specify a value for the first instance of this element?
        %ifdef MVNCONF_PROFILE_REPOSITORY_SNAPSHOT_CHECKSUMPOLICY MVNCONF_PROFILE_REPOSITORY_SNAPSHOT_CHECKSUMPOLICY_01 = $MVNCONF_PROFILE_REPOSITORY_SNAPSHOT_CHECKSUMPOLICY
#%eecho B: MVNCONF_PROFILE_REPOSITORY_SNAPSHOT_CHECKSUMPOLICY=$MVNCONF_PROFILE_REPOSITORY_SNAPSHOT_CHECKSUMPOLICY MVNCONF_PROFILE_REPOSITORY_SNAPSHOT_CHECKSUMPOLICY_01=$MVNCONF_PROFILE_REPOSITORY_SNAPSHOT_CHECKSUMPOLICY_01

        #if value is specified, but count is not, then specify count:
        %ifdef MVNCONF_PROFILE_REPOSITORY_SNAPSHOT_CHECKSUMPOLICY_01 %ifndef MVNCONF_PROFILE_REPOSITORY_SNAPSHOT_CHECKSUMPOLICY_COUNT_01 MVNCONF_PROFILE_REPOSITORY_SNAPSHOT_CHECKSUMPOLICY_COUNT_01 = 01..01

#%eecho C: MVNCONF_PROFILE_REPOSITORY_SNAPSHOT_CHECKSUMPOLICY_COUNT=$MVNCONF_PROFILE_REPOSITORY_SNAPSHOT_CHECKSUMPOLICY_COUNT MVNCONF_PROFILE_REPOSITORY_SNAPSHOT_CHECKSUMPOLICY_COUNT_01=$MVNCONF_PROFILE_REPOSITORY_SNAPSHOT_CHECKSUMPOLICY_COUNT_01

        _mvnconf_profile_repository_snapshot_checksumPolicy_rangevar = MVNCONF_PROFILE_REPOSITORY_SNAPSHOT_CHECKSUMPOLICY_COUNT_$parent_instance_count

        #if count for this element is unspecified, then only generate if we are generating empties:
        %ifndef $_mvnconf_profile_repository_snapshot_checksumPolicy_rangevar %if $MVNCONF_GENERATE_EMPTY_ELEMENTS $_mvnconf_profile_repository_snapshot_checksumPolicy_rangevar = 01..01

        #if this is an orphaned value, we attach instance n to parent n:
        %ifndef $_mvnconf_profile_repository_snapshot_checksumPolicy_rangevar $_mvnconf_profile_repository_snapshot_checksumPolicy_rangevar = $_mvnconf_profile_repository_snapshot_checksumPolicy_rangevar:xmlcg_default_value_range

        #if count is now specified, but value is not, then set to nil:
        %ifdef MVNCONF_PROFILE_REPOSITORY_SNAPSHOT_CHECKSUMPOLICY_COUNT_01 %ifndef MVNCONF_PROFILE_REPOSITORY_SNAPSHOT_CHECKSUMPOLICY_01 MVNCONF_PROFILE_REPOSITORY_SNAPSHOT_CHECKSUMPOLICY_01=
#%eecho D: MVNCONF_PROFILE_REPOSITORY_SNAPSHOT_CHECKSUMPOLICY_COUNT_01=$MVNCONF_PROFILE_REPOSITORY_SNAPSHOT_CHECKSUMPOLICY_COUNT_01 MVNCONF_PROFILE_REPOSITORY_SNAPSHOT_CHECKSUMPOLICY_01=$MVNCONF_PROFILE_REPOSITORY_SNAPSHOT_CHECKSUMPOLICY_01

        #if count is specified as a simple count, then adjust to be 01..<count>:
        %if $_mvnconf_profile_repository_snapshot_checksumPolicy_rangevar:valueof:isint   $_mvnconf_profile_repository_snapshot_checksumPolicy_rangevar = 01..$_mvnconf_profile_repository_snapshot_checksumPolicy_rangevar:valueof

        ########
#%eecho CALL <T> mvnconf_profile_repository_snapshot_checksumPolicy: _mvnconf_profile_repository_snapshot_checksumPolicy_rangevar=$_mvnconf_profile_repository_snapshot_checksumPolicy_rangevar -> $_mvnconf_profile_repository_snapshot_checksumPolicy_rangevar:valueof
        %foreach instance_count $_mvnconf_profile_repository_snapshot_checksumPolicy_rangevar %call mvnconf_profile_repository_snapshot_checksumPolicy
        ########
    }
    ###########

    #now generate me:
    XML_ELEMENT_NAME =  snapshot
    #the kids are our body:
    XML_ELEMENT_BODY =  $MACRO_OUTPUT_ACCUMULATOR:valueof
    #restore the output accumulator varaible name:
    MACRO_OUTPUT_ACCUMULATOR    = $_mvnconf_profile_repository_snapshot_save_accumulator

    %call xml_nested_element

    #restore parent instance count:
    parent_instance_count = $_mvnconf_profile_repository_snapshot_save_parent_ic
#%eecho EXIT mvnconf_profile_repository_snapshot: parent_instance_count=$parent_instance_count
EOF
}

mvnconf_profile_repository_id := << EOF
{# mvnconf_profile_repository_id: TERMINAL ELEMENT
    mvnconf_profile_repository_id_valuevar = MVNCONF_PROFILE_REPOSITORY_ID_$instance_count:pad:assign
    %ifndef $mvnconf_profile_repository_id_valuevar    mvnconf_profile_repository_id_valuevar = MVNCONF_PROFILE_REPOSITORY_ID

    #set element contents to nil if not defined:
    %ifndef $mvnconf_profile_repository_id_valuevar    $mvnconf_profile_repository_id_valuevar =

    XML_ELEMENT_NAME = id
    XML_ELEMENT_BODY = $mvnconf_profile_repository_id_valuevar:valueof
    %call xml_line_element
}
EOF

mvnconf_profile_repository_name := << EOF
{# mvnconf_profile_repository_name: TERMINAL ELEMENT
    mvnconf_profile_repository_name_valuevar = MVNCONF_PROFILE_REPOSITORY_NAME_$instance_count:pad:assign
    %ifndef $mvnconf_profile_repository_name_valuevar    mvnconf_profile_repository_name_valuevar = MVNCONF_PROFILE_REPOSITORY_NAME

    #set element contents to nil if not defined:
    %ifndef $mvnconf_profile_repository_name_valuevar    $mvnconf_profile_repository_name_valuevar =

    XML_ELEMENT_NAME = name
    XML_ELEMENT_BODY = $mvnconf_profile_repository_name_valuevar:valueof
    %call xml_line_element
}
EOF

mvnconf_profile_repository_url := << EOF
{# mvnconf_profile_repository_url: TERMINAL ELEMENT
    mvnconf_profile_repository_url_valuevar = MVNCONF_PROFILE_REPOSITORY_URL_$instance_count:pad:assign
    %ifndef $mvnconf_profile_repository_url_valuevar    mvnconf_profile_repository_url_valuevar = MVNCONF_PROFILE_REPOSITORY_URL

    #set element contents to nil if not defined:
    %ifndef $mvnconf_profile_repository_url_valuevar    $mvnconf_profile_repository_url_valuevar =

    XML_ELEMENT_NAME = url
    XML_ELEMENT_BODY = $mvnconf_profile_repository_url_valuevar:valueof
    %call xml_line_element
}
EOF

mvnconf_profile_repository_layout := << EOF
{# mvnconf_profile_repository_layout: TERMINAL ELEMENT
    mvnconf_profile_repository_layout_valuevar = MVNCONF_PROFILE_REPOSITORY_LAYOUT_$instance_count:pad:assign
    %ifndef $mvnconf_profile_repository_layout_valuevar    mvnconf_profile_repository_layout_valuevar = MVNCONF_PROFILE_REPOSITORY_LAYOUT

    #set element contents to nil if not defined:
    %ifndef $mvnconf_profile_repository_layout_valuevar    $mvnconf_profile_repository_layout_valuevar =

    XML_ELEMENT_NAME = layout
    XML_ELEMENT_BODY = $mvnconf_profile_repository_layout_valuevar:valueof
    %call xml_line_element
}
EOF

{# mvnconf_profile_repository: NON-TERMINAL ELEMENT
mvnconf_profile_repository := << EOF
#%eecho ENTER mvnconf_profile_repository: parent_instance_count=$parent_instance_count
    #parent_instance_count is zero for top element - normalize spec and increment:
    %ifnot $parent_instance_count NORMALIZE RESULT=$MVNCONF_:nameof:xmlcg_normalize_counts
    %ifnot $parent_instance_count %ifnot $NORMALIZE RESULT %eecho mvnconf_profile_repository: ERROR: MVNCONF_:nameof:xmlcg_normalize_counts FAILED - is xmlcg_ops.pl in your CG_TEMPLATE_PATH?

    %ifnot $parent_instance_count parent_instance_count = 01

    _mvnconf_profile_repository_save_accumulator = $MACRO_OUTPUT_ACCUMULATOR
    _mvnconf_profile_repository_save_parent_ic = $parent_instance_count
    parent_instance_count = $instance_count:pad

    #re-assign to temporary accumulator to pick up kids:
    MACRO_OUTPUT_ACCUMULATOR = _mvnconf_profile_repository_kid_accumulator
    #clear the kid accumulator:
    $MACRO_OUTPUT_ACCUMULATOR =

    #make calls to generate my kid elements:
    ########### GENERATE KIDS: ###########
    { #generate mvnconf_profile_repository_release non-terminal element:
#%eecho A: CALL <NT> mvnconf_profile_repository_release: parent_instance_count=$parent_instance_count

        _mvnconf_profile_repository_release_rangevar = MVNCONF_PROFILE_REPOSITORY_RELEASE_COUNT_$parent_instance_count

        #if count for this non-terminal element is unspecified, then only generate if we are generating empties:
#%eecho B: CALL <NT> mvnconf_profile_repository_release: _mvnconf_profile_repository_release_rangevar=$_mvnconf_profile_repository_release_rangevar -> $_mvnconf_profile_repository_release_rangevar:valueof
        %ifndef $_mvnconf_profile_repository_release_rangevar %if $MVNCONF_GENERATE_EMPTY_ELEMENTS $_mvnconf_profile_repository_release_rangevar = 01..01

        #if count is still undefined for this terminal, then we're done:
        %ifndef $_mvnconf_profile_repository_release_rangevar $_mvnconf_profile_repository_release_rangevar = 01..00

        #if count is specified as a simple count, then adjust to be 01..<count>:
        %if $_mvnconf_profile_repository_release_rangevar:valueof:isint   $_mvnconf_profile_repository_release_rangevar = 01..$_mvnconf_profile_repository_release_rangevar:valueof

        ########
#%eecho C: CALL <NT> mvnconf_profile_repository_release: _mvnconf_profile_repository_release_rangevar=$_mvnconf_profile_repository_release_rangevar -> $_mvnconf_profile_repository_release_rangevar:valueof
        %foreach instance_count $_mvnconf_profile_repository_release_rangevar %call mvnconf_profile_repository_release
        ########
    }
    { #generate mvnconf_profile_repository_snapshot non-terminal element:
#%eecho A: CALL <NT> mvnconf_profile_repository_snapshot: parent_instance_count=$parent_instance_count

        _mvnconf_profile_repository_snapshot_rangevar = MVNCONF_PROFILE_REPOSITORY_SNAPSHOT_COUNT_$parent_instance_count

        #if count for this non-terminal element is unspecified, then only generate if we are generating empties:
#%eecho B: CALL <NT> mvnconf_profile_repository_snapshot: _mvnconf_profile_repository_snapshot_rangevar=$_mvnconf_profile_repository_snapshot_rangevar -> $_mvnconf_profile_repository_snapshot_rangevar:valueof
        %ifndef $_mvnconf_profile_repository_snapshot_rangevar %if $MVNCONF_GENERATE_EMPTY_ELEMENTS $_mvnconf_profile_repository_snapshot_rangevar = 01..01

        #if count is still undefined for this terminal, then we're done:
        %ifndef $_mvnconf_profile_repository_snapshot_rangevar $_mvnconf_profile_repository_snapshot_rangevar = 01..00

        #if count is specified as a simple count, then adjust to be 01..<count>:
        %if $_mvnconf_profile_repository_snapshot_rangevar:valueof:isint   $_mvnconf_profile_repository_snapshot_rangevar = 01..$_mvnconf_profile_repository_snapshot_rangevar:valueof

        ########
#%eecho C: CALL <NT> mvnconf_profile_repository_snapshot: _mvnconf_profile_repository_snapshot_rangevar=$_mvnconf_profile_repository_snapshot_rangevar -> $_mvnconf_profile_repository_snapshot_rangevar:valueof
        %foreach instance_count $_mvnconf_profile_repository_snapshot_rangevar %call mvnconf_profile_repository_snapshot
        ########
    }
    { #generate mvnconf_profile_repository_id terminal element:
#%eecho CALL <T> mvnconf_profile_repository_id: parent_instance_count=$parent_instance_count

        #did user specify a value for the first instance of this element?
        %ifdef MVNCONF_PROFILE_REPOSITORY_ID MVNCONF_PROFILE_REPOSITORY_ID_01 = $MVNCONF_PROFILE_REPOSITORY_ID
#%eecho B: MVNCONF_PROFILE_REPOSITORY_ID=$MVNCONF_PROFILE_REPOSITORY_ID MVNCONF_PROFILE_REPOSITORY_ID_01=$MVNCONF_PROFILE_REPOSITORY_ID_01

        #if value is specified, but count is not, then specify count:
        %ifdef MVNCONF_PROFILE_REPOSITORY_ID_01 %ifndef MVNCONF_PROFILE_REPOSITORY_ID_COUNT_01 MVNCONF_PROFILE_REPOSITORY_ID_COUNT_01 = 01..01

#%eecho C: MVNCONF_PROFILE_REPOSITORY_ID_COUNT=$MVNCONF_PROFILE_REPOSITORY_ID_COUNT MVNCONF_PROFILE_REPOSITORY_ID_COUNT_01=$MVNCONF_PROFILE_REPOSITORY_ID_COUNT_01

        _mvnconf_profile_repository_id_rangevar = MVNCONF_PROFILE_REPOSITORY_ID_COUNT_$parent_instance_count

        #if count for this element is unspecified, then only generate if we are generating empties:
        %ifndef $_mvnconf_profile_repository_id_rangevar %if $MVNCONF_GENERATE_EMPTY_ELEMENTS $_mvnconf_profile_repository_id_rangevar = 01..01

        #if this is an orphaned value, we attach instance n to parent n:
        %ifndef $_mvnconf_profile_repository_id_rangevar $_mvnconf_profile_repository_id_rangevar = $_mvnconf_profile_repository_id_rangevar:xmlcg_default_value_range

        #if count is now specified, but value is not, then set to nil:
        %ifdef MVNCONF_PROFILE_REPOSITORY_ID_COUNT_01 %ifndef MVNCONF_PROFILE_REPOSITORY_ID_01 MVNCONF_PROFILE_REPOSITORY_ID_01=
#%eecho D: MVNCONF_PROFILE_REPOSITORY_ID_COUNT_01=$MVNCONF_PROFILE_REPOSITORY_ID_COUNT_01 MVNCONF_PROFILE_REPOSITORY_ID_01=$MVNCONF_PROFILE_REPOSITORY_ID_01

        #if count is specified as a simple count, then adjust to be 01..<count>:
        %if $_mvnconf_profile_repository_id_rangevar:valueof:isint   $_mvnconf_profile_repository_id_rangevar = 01..$_mvnconf_profile_repository_id_rangevar:valueof

        ########
#%eecho CALL <T> mvnconf_profile_repository_id: _mvnconf_profile_repository_id_rangevar=$_mvnconf_profile_repository_id_rangevar -> $_mvnconf_profile_repository_id_rangevar:valueof
        %foreach instance_count $_mvnconf_profile_repository_id_rangevar %call mvnconf_profile_repository_id
        ########
    }
    { #generate mvnconf_profile_repository_name terminal element:
#%eecho CALL <T> mvnconf_profile_repository_name: parent_instance_count=$parent_instance_count

        #did user specify a value for the first instance of this element?
        %ifdef MVNCONF_PROFILE_REPOSITORY_NAME MVNCONF_PROFILE_REPOSITORY_NAME_01 = $MVNCONF_PROFILE_REPOSITORY_NAME
#%eecho B: MVNCONF_PROFILE_REPOSITORY_NAME=$MVNCONF_PROFILE_REPOSITORY_NAME MVNCONF_PROFILE_REPOSITORY_NAME_01=$MVNCONF_PROFILE_REPOSITORY_NAME_01

        #if value is specified, but count is not, then specify count:
        %ifdef MVNCONF_PROFILE_REPOSITORY_NAME_01 %ifndef MVNCONF_PROFILE_REPOSITORY_NAME_COUNT_01 MVNCONF_PROFILE_REPOSITORY_NAME_COUNT_01 = 01..01

#%eecho C: MVNCONF_PROFILE_REPOSITORY_NAME_COUNT=$MVNCONF_PROFILE_REPOSITORY_NAME_COUNT MVNCONF_PROFILE_REPOSITORY_NAME_COUNT_01=$MVNCONF_PROFILE_REPOSITORY_NAME_COUNT_01

        _mvnconf_profile_repository_name_rangevar = MVNCONF_PROFILE_REPOSITORY_NAME_COUNT_$parent_instance_count

        #if count for this element is unspecified, then only generate if we are generating empties:
        %ifndef $_mvnconf_profile_repository_name_rangevar %if $MVNCONF_GENERATE_EMPTY_ELEMENTS $_mvnconf_profile_repository_name_rangevar = 01..01

        #if this is an orphaned value, we attach instance n to parent n:
        %ifndef $_mvnconf_profile_repository_name_rangevar $_mvnconf_profile_repository_name_rangevar = $_mvnconf_profile_repository_name_rangevar:xmlcg_default_value_range

        #if count is now specified, but value is not, then set to nil:
        %ifdef MVNCONF_PROFILE_REPOSITORY_NAME_COUNT_01 %ifndef MVNCONF_PROFILE_REPOSITORY_NAME_01 MVNCONF_PROFILE_REPOSITORY_NAME_01=
#%eecho D: MVNCONF_PROFILE_REPOSITORY_NAME_COUNT_01=$MVNCONF_PROFILE_REPOSITORY_NAME_COUNT_01 MVNCONF_PROFILE_REPOSITORY_NAME_01=$MVNCONF_PROFILE_REPOSITORY_NAME_01

        #if count is specified as a simple count, then adjust to be 01..<count>:
        %if $_mvnconf_profile_repository_name_rangevar:valueof:isint   $_mvnconf_profile_repository_name_rangevar = 01..$_mvnconf_profile_repository_name_rangevar:valueof

        ########
#%eecho CALL <T> mvnconf_profile_repository_name: _mvnconf_profile_repository_name_rangevar=$_mvnconf_profile_repository_name_rangevar -> $_mvnconf_profile_repository_name_rangevar:valueof
        %foreach instance_count $_mvnconf_profile_repository_name_rangevar %call mvnconf_profile_repository_name
        ########
    }
    { #generate mvnconf_profile_repository_url terminal element:
#%eecho CALL <T> mvnconf_profile_repository_url: parent_instance_count=$parent_instance_count

        #did user specify a value for the first instance of this element?
        %ifdef MVNCONF_PROFILE_REPOSITORY_URL MVNCONF_PROFILE_REPOSITORY_URL_01 = $MVNCONF_PROFILE_REPOSITORY_URL
#%eecho B: MVNCONF_PROFILE_REPOSITORY_URL=$MVNCONF_PROFILE_REPOSITORY_URL MVNCONF_PROFILE_REPOSITORY_URL_01=$MVNCONF_PROFILE_REPOSITORY_URL_01

        #if value is specified, but count is not, then specify count:
        %ifdef MVNCONF_PROFILE_REPOSITORY_URL_01 %ifndef MVNCONF_PROFILE_REPOSITORY_URL_COUNT_01 MVNCONF_PROFILE_REPOSITORY_URL_COUNT_01 = 01..01

#%eecho C: MVNCONF_PROFILE_REPOSITORY_URL_COUNT=$MVNCONF_PROFILE_REPOSITORY_URL_COUNT MVNCONF_PROFILE_REPOSITORY_URL_COUNT_01=$MVNCONF_PROFILE_REPOSITORY_URL_COUNT_01

        _mvnconf_profile_repository_url_rangevar = MVNCONF_PROFILE_REPOSITORY_URL_COUNT_$parent_instance_count

        #if count for this element is unspecified, then only generate if we are generating empties:
        %ifndef $_mvnconf_profile_repository_url_rangevar %if $MVNCONF_GENERATE_EMPTY_ELEMENTS $_mvnconf_profile_repository_url_rangevar = 01..01

        #if this is an orphaned value, we attach instance n to parent n:
        %ifndef $_mvnconf_profile_repository_url_rangevar $_mvnconf_profile_repository_url_rangevar = $_mvnconf_profile_repository_url_rangevar:xmlcg_default_value_range

        #if count is now specified, but value is not, then set to nil:
        %ifdef MVNCONF_PROFILE_REPOSITORY_URL_COUNT_01 %ifndef MVNCONF_PROFILE_REPOSITORY_URL_01 MVNCONF_PROFILE_REPOSITORY_URL_01=
#%eecho D: MVNCONF_PROFILE_REPOSITORY_URL_COUNT_01=$MVNCONF_PROFILE_REPOSITORY_URL_COUNT_01 MVNCONF_PROFILE_REPOSITORY_URL_01=$MVNCONF_PROFILE_REPOSITORY_URL_01

        #if count is specified as a simple count, then adjust to be 01..<count>:
        %if $_mvnconf_profile_repository_url_rangevar:valueof:isint   $_mvnconf_profile_repository_url_rangevar = 01..$_mvnconf_profile_repository_url_rangevar:valueof

        ########
#%eecho CALL <T> mvnconf_profile_repository_url: _mvnconf_profile_repository_url_rangevar=$_mvnconf_profile_repository_url_rangevar -> $_mvnconf_profile_repository_url_rangevar:valueof
        %foreach instance_count $_mvnconf_profile_repository_url_rangevar %call mvnconf_profile_repository_url
        ########
    }
    { #generate mvnconf_profile_repository_layout terminal element:
#%eecho CALL <T> mvnconf_profile_repository_layout: parent_instance_count=$parent_instance_count

        #did user specify a value for the first instance of this element?
        %ifdef MVNCONF_PROFILE_REPOSITORY_LAYOUT MVNCONF_PROFILE_REPOSITORY_LAYOUT_01 = $MVNCONF_PROFILE_REPOSITORY_LAYOUT
#%eecho B: MVNCONF_PROFILE_REPOSITORY_LAYOUT=$MVNCONF_PROFILE_REPOSITORY_LAYOUT MVNCONF_PROFILE_REPOSITORY_LAYOUT_01=$MVNCONF_PROFILE_REPOSITORY_LAYOUT_01

        #if value is specified, but count is not, then specify count:
        %ifdef MVNCONF_PROFILE_REPOSITORY_LAYOUT_01 %ifndef MVNCONF_PROFILE_REPOSITORY_LAYOUT_COUNT_01 MVNCONF_PROFILE_REPOSITORY_LAYOUT_COUNT_01 = 01..01

#%eecho C: MVNCONF_PROFILE_REPOSITORY_LAYOUT_COUNT=$MVNCONF_PROFILE_REPOSITORY_LAYOUT_COUNT MVNCONF_PROFILE_REPOSITORY_LAYOUT_COUNT_01=$MVNCONF_PROFILE_REPOSITORY_LAYOUT_COUNT_01

        _mvnconf_profile_repository_layout_rangevar = MVNCONF_PROFILE_REPOSITORY_LAYOUT_COUNT_$parent_instance_count

        #if count for this element is unspecified, then only generate if we are generating empties:
        %ifndef $_mvnconf_profile_repository_layout_rangevar %if $MVNCONF_GENERATE_EMPTY_ELEMENTS $_mvnconf_profile_repository_layout_rangevar = 01..01

        #if this is an orphaned value, we attach instance n to parent n:
        %ifndef $_mvnconf_profile_repository_layout_rangevar $_mvnconf_profile_repository_layout_rangevar = $_mvnconf_profile_repository_layout_rangevar:xmlcg_default_value_range

        #if count is now specified, but value is not, then set to nil:
        %ifdef MVNCONF_PROFILE_REPOSITORY_LAYOUT_COUNT_01 %ifndef MVNCONF_PROFILE_REPOSITORY_LAYOUT_01 MVNCONF_PROFILE_REPOSITORY_LAYOUT_01=
#%eecho D: MVNCONF_PROFILE_REPOSITORY_LAYOUT_COUNT_01=$MVNCONF_PROFILE_REPOSITORY_LAYOUT_COUNT_01 MVNCONF_PROFILE_REPOSITORY_LAYOUT_01=$MVNCONF_PROFILE_REPOSITORY_LAYOUT_01

        #if count is specified as a simple count, then adjust to be 01..<count>:
        %if $_mvnconf_profile_repository_layout_rangevar:valueof:isint   $_mvnconf_profile_repository_layout_rangevar = 01..$_mvnconf_profile_repository_layout_rangevar:valueof

        ########
#%eecho CALL <T> mvnconf_profile_repository_layout: _mvnconf_profile_repository_layout_rangevar=$_mvnconf_profile_repository_layout_rangevar -> $_mvnconf_profile_repository_layout_rangevar:valueof
        %foreach instance_count $_mvnconf_profile_repository_layout_rangevar %call mvnconf_profile_repository_layout
        ########
    }
    ###########

    #now generate me:
    XML_ELEMENT_NAME =  repository
    #the kids are our body:
    XML_ELEMENT_BODY =  $MACRO_OUTPUT_ACCUMULATOR:valueof
    #restore the output accumulator varaible name:
    MACRO_OUTPUT_ACCUMULATOR    = $_mvnconf_profile_repository_save_accumulator

    %call xml_nested_element

    #restore parent instance count:
    parent_instance_count = $_mvnconf_profile_repository_save_parent_ic
#%eecho EXIT mvnconf_profile_repository: parent_instance_count=$parent_instance_count
EOF
}

{# mvnconf_profile_repositories: NON-TERMINAL ELEMENT
mvnconf_profile_repositories := << EOF
#%eecho ENTER mvnconf_profile_repositories: parent_instance_count=$parent_instance_count
    #parent_instance_count is zero for top element - normalize spec and increment:
    %ifnot $parent_instance_count NORMALIZE RESULT=$MVNCONF_:nameof:xmlcg_normalize_counts
    %ifnot $parent_instance_count %ifnot $NORMALIZE RESULT %eecho mvnconf_profile_repositories: ERROR: MVNCONF_:nameof:xmlcg_normalize_counts FAILED - is xmlcg_ops.pl in your CG_TEMPLATE_PATH?

    %ifnot $parent_instance_count parent_instance_count = 01

    _mvnconf_profile_repositories_save_accumulator = $MACRO_OUTPUT_ACCUMULATOR
    _mvnconf_profile_repositories_save_parent_ic = $parent_instance_count
    parent_instance_count = $instance_count:pad

    #re-assign to temporary accumulator to pick up kids:
    MACRO_OUTPUT_ACCUMULATOR = _mvnconf_profile_repositories_kid_accumulator
    #clear the kid accumulator:
    $MACRO_OUTPUT_ACCUMULATOR =

    #make calls to generate my kid elements:
    ########### GENERATE KIDS: ###########
    { #generate mvnconf_profile_repository non-terminal element:
#%eecho A: CALL <NT> mvnconf_profile_repository: parent_instance_count=$parent_instance_count

        _mvnconf_profile_repository_rangevar = MVNCONF_PROFILE_REPOSITORY_COUNT_$parent_instance_count

        #if count for this non-terminal element is unspecified, then only generate if we are generating empties:
#%eecho B: CALL <NT> mvnconf_profile_repository: _mvnconf_profile_repository_rangevar=$_mvnconf_profile_repository_rangevar -> $_mvnconf_profile_repository_rangevar:valueof
        %ifndef $_mvnconf_profile_repository_rangevar %if $MVNCONF_GENERATE_EMPTY_ELEMENTS $_mvnconf_profile_repository_rangevar = 01..01

        #if count is still undefined for this terminal, then we're done:
        %ifndef $_mvnconf_profile_repository_rangevar $_mvnconf_profile_repository_rangevar = 01..00

        #if count is specified as a simple count, then adjust to be 01..<count>:
        %if $_mvnconf_profile_repository_rangevar:valueof:isint   $_mvnconf_profile_repository_rangevar = 01..$_mvnconf_profile_repository_rangevar:valueof

        ########
#%eecho C: CALL <NT> mvnconf_profile_repository: _mvnconf_profile_repository_rangevar=$_mvnconf_profile_repository_rangevar -> $_mvnconf_profile_repository_rangevar:valueof
        %foreach instance_count $_mvnconf_profile_repository_rangevar %call mvnconf_profile_repository
        ########
    }
    ###########

    #now generate me:
    XML_ELEMENT_NAME =  repositories
    #the kids are our body:
    XML_ELEMENT_BODY =  $MACRO_OUTPUT_ACCUMULATOR:valueof
    #restore the output accumulator varaible name:
    MACRO_OUTPUT_ACCUMULATOR    = $_mvnconf_profile_repositories_save_accumulator

    %call xml_nested_element

    #restore parent instance count:
    parent_instance_count = $_mvnconf_profile_repositories_save_parent_ic
#%eecho EXIT mvnconf_profile_repositories: parent_instance_count=$parent_instance_count
EOF
}

mvnconf_profile_pluginRepository_release_enabled := << EOF
{# mvnconf_profile_pluginRepository_release_enabled: TERMINAL ELEMENT
    mvnconf_profile_pluginRepository_release_enabled_valuevar = MVNCONF_PROFILE_PLUGINREPOSITORY_RELEASE_ENABLED_$instance_count:pad:assign
    %ifndef $mvnconf_profile_pluginRepository_release_enabled_valuevar    mvnconf_profile_pluginRepository_release_enabled_valuevar = MVNCONF_PROFILE_PLUGINREPOSITORY_RELEASE_ENABLED

    #set element contents to nil if not defined:
    %ifndef $mvnconf_profile_pluginRepository_release_enabled_valuevar    $mvnconf_profile_pluginRepository_release_enabled_valuevar =

    XML_ELEMENT_NAME = enabled
    XML_ELEMENT_BODY = $mvnconf_profile_pluginRepository_release_enabled_valuevar:valueof
    %call xml_line_element
}
EOF

mvnconf_profile_pluginRepository_release_updatePolicy := << EOF
{# mvnconf_profile_pluginRepository_release_updatePolicy: TERMINAL ELEMENT
    mvnconf_profile_pluginRepository_release_updatePolicy_valuevar = MVNCONF_PROFILE_PLUGINREPOSITORY_RELEASE_UPDATEPOLICY_$instance_count:pad:assign
    %ifndef $mvnconf_profile_pluginRepository_release_updatePolicy_valuevar    mvnconf_profile_pluginRepository_release_updatePolicy_valuevar = MVNCONF_PROFILE_PLUGINREPOSITORY_RELEASE_UPDATEPOLICY

    #set element contents to nil if not defined:
    %ifndef $mvnconf_profile_pluginRepository_release_updatePolicy_valuevar    $mvnconf_profile_pluginRepository_release_updatePolicy_valuevar =

    XML_ELEMENT_NAME = updatePolicy
    XML_ELEMENT_BODY = $mvnconf_profile_pluginRepository_release_updatePolicy_valuevar:valueof
    %call xml_line_element
}
EOF

mvnconf_profile_pluginRepository_release_checksumPolicy := << EOF
{# mvnconf_profile_pluginRepository_release_checksumPolicy: TERMINAL ELEMENT
    mvnconf_profile_pluginRepository_release_checksumPolicy_valuevar = MVNCONF_PROFILE_PLUGINREPOSITORY_RELEASE_CHECKSUMPOLICY_$instance_count:pad:assign
    %ifndef $mvnconf_profile_pluginRepository_release_checksumPolicy_valuevar    mvnconf_profile_pluginRepository_release_checksumPolicy_valuevar = MVNCONF_PROFILE_PLUGINREPOSITORY_RELEASE_CHECKSUMPOLICY

    #set element contents to nil if not defined:
    %ifndef $mvnconf_profile_pluginRepository_release_checksumPolicy_valuevar    $mvnconf_profile_pluginRepository_release_checksumPolicy_valuevar =

    XML_ELEMENT_NAME = checksumPolicy
    XML_ELEMENT_BODY = $mvnconf_profile_pluginRepository_release_checksumPolicy_valuevar:valueof
    %call xml_line_element
}
EOF

{# mvnconf_profile_pluginRepository_release: NON-TERMINAL ELEMENT
mvnconf_profile_pluginRepository_release := << EOF
#%eecho ENTER mvnconf_profile_pluginRepository_release: parent_instance_count=$parent_instance_count
    #parent_instance_count is zero for top element - normalize spec and increment:
    %ifnot $parent_instance_count NORMALIZE RESULT=$MVNCONF_:nameof:xmlcg_normalize_counts
    %ifnot $parent_instance_count %ifnot $NORMALIZE RESULT %eecho mvnconf_profile_pluginRepository_release: ERROR: MVNCONF_:nameof:xmlcg_normalize_counts FAILED - is xmlcg_ops.pl in your CG_TEMPLATE_PATH?

    %ifnot $parent_instance_count parent_instance_count = 01

    _mvnconf_profile_pluginRepository_release_save_accumulator = $MACRO_OUTPUT_ACCUMULATOR
    _mvnconf_profile_pluginRepository_release_save_parent_ic = $parent_instance_count
    parent_instance_count = $instance_count:pad

    #re-assign to temporary accumulator to pick up kids:
    MACRO_OUTPUT_ACCUMULATOR = _mvnconf_profile_pluginRepository_release_kid_accumulator
    #clear the kid accumulator:
    $MACRO_OUTPUT_ACCUMULATOR =

    #make calls to generate my kid elements:
    ########### GENERATE KIDS: ###########
    { #generate mvnconf_profile_pluginRepository_release_enabled terminal element:
#%eecho CALL <T> mvnconf_profile_pluginRepository_release_enabled: parent_instance_count=$parent_instance_count

        #did user specify a value for the first instance of this element?
        %ifdef MVNCONF_PROFILE_PLUGINREPOSITORY_RELEASE_ENABLED MVNCONF_PROFILE_PLUGINREPOSITORY_RELEASE_ENABLED_01 = $MVNCONF_PROFILE_PLUGINREPOSITORY_RELEASE_ENABLED
#%eecho B: MVNCONF_PROFILE_PLUGINREPOSITORY_RELEASE_ENABLED=$MVNCONF_PROFILE_PLUGINREPOSITORY_RELEASE_ENABLED MVNCONF_PROFILE_PLUGINREPOSITORY_RELEASE_ENABLED_01=$MVNCONF_PROFILE_PLUGINREPOSITORY_RELEASE_ENABLED_01

        #if value is specified, but count is not, then specify count:
        %ifdef MVNCONF_PROFILE_PLUGINREPOSITORY_RELEASE_ENABLED_01 %ifndef MVNCONF_PROFILE_PLUGINREPOSITORY_RELEASE_ENABLED_COUNT_01 MVNCONF_PROFILE_PLUGINREPOSITORY_RELEASE_ENABLED_COUNT_01 = 01..01

#%eecho C: MVNCONF_PROFILE_PLUGINREPOSITORY_RELEASE_ENABLED_COUNT=$MVNCONF_PROFILE_PLUGINREPOSITORY_RELEASE_ENABLED_COUNT MVNCONF_PROFILE_PLUGINREPOSITORY_RELEASE_ENABLED_COUNT_01=$MVNCONF_PROFILE_PLUGINREPOSITORY_RELEASE_ENABLED_COUNT_01

        _mvnconf_profile_pluginRepository_release_enabled_rangevar = MVNCONF_PROFILE_PLUGINREPOSITORY_RELEASE_ENABLED_COUNT_$parent_instance_count

        #if count for this element is unspecified, then only generate if we are generating empties:
        %ifndef $_mvnconf_profile_pluginRepository_release_enabled_rangevar %if $MVNCONF_GENERATE_EMPTY_ELEMENTS $_mvnconf_profile_pluginRepository_release_enabled_rangevar = 01..01

        #if this is an orphaned value, we attach instance n to parent n:
        %ifndef $_mvnconf_profile_pluginRepository_release_enabled_rangevar $_mvnconf_profile_pluginRepository_release_enabled_rangevar = $_mvnconf_profile_pluginRepository_release_enabled_rangevar:xmlcg_default_value_range

        #if count is now specified, but value is not, then set to nil:
        %ifdef MVNCONF_PROFILE_PLUGINREPOSITORY_RELEASE_ENABLED_COUNT_01 %ifndef MVNCONF_PROFILE_PLUGINREPOSITORY_RELEASE_ENABLED_01 MVNCONF_PROFILE_PLUGINREPOSITORY_RELEASE_ENABLED_01=
#%eecho D: MVNCONF_PROFILE_PLUGINREPOSITORY_RELEASE_ENABLED_COUNT_01=$MVNCONF_PROFILE_PLUGINREPOSITORY_RELEASE_ENABLED_COUNT_01 MVNCONF_PROFILE_PLUGINREPOSITORY_RELEASE_ENABLED_01=$MVNCONF_PROFILE_PLUGINREPOSITORY_RELEASE_ENABLED_01

        #if count is specified as a simple count, then adjust to be 01..<count>:
        %if $_mvnconf_profile_pluginRepository_release_enabled_rangevar:valueof:isint   $_mvnconf_profile_pluginRepository_release_enabled_rangevar = 01..$_mvnconf_profile_pluginRepository_release_enabled_rangevar:valueof

        ########
#%eecho CALL <T> mvnconf_profile_pluginRepository_release_enabled: _mvnconf_profile_pluginRepository_release_enabled_rangevar=$_mvnconf_profile_pluginRepository_release_enabled_rangevar -> $_mvnconf_profile_pluginRepository_release_enabled_rangevar:valueof
        %foreach instance_count $_mvnconf_profile_pluginRepository_release_enabled_rangevar %call mvnconf_profile_pluginRepository_release_enabled
        ########
    }
    { #generate mvnconf_profile_pluginRepository_release_updatePolicy terminal element:
#%eecho CALL <T> mvnconf_profile_pluginRepository_release_updatePolicy: parent_instance_count=$parent_instance_count

        #did user specify a value for the first instance of this element?
        %ifdef MVNCONF_PROFILE_PLUGINREPOSITORY_RELEASE_UPDATEPOLICY MVNCONF_PROFILE_PLUGINREPOSITORY_RELEASE_UPDATEPOLICY_01 = $MVNCONF_PROFILE_PLUGINREPOSITORY_RELEASE_UPDATEPOLICY
#%eecho B: MVNCONF_PROFILE_PLUGINREPOSITORY_RELEASE_UPDATEPOLICY=$MVNCONF_PROFILE_PLUGINREPOSITORY_RELEASE_UPDATEPOLICY MVNCONF_PROFILE_PLUGINREPOSITORY_RELEASE_UPDATEPOLICY_01=$MVNCONF_PROFILE_PLUGINREPOSITORY_RELEASE_UPDATEPOLICY_01

        #if value is specified, but count is not, then specify count:
        %ifdef MVNCONF_PROFILE_PLUGINREPOSITORY_RELEASE_UPDATEPOLICY_01 %ifndef MVNCONF_PROFILE_PLUGINREPOSITORY_RELEASE_UPDATEPOLICY_COUNT_01 MVNCONF_PROFILE_PLUGINREPOSITORY_RELEASE_UPDATEPOLICY_COUNT_01 = 01..01

#%eecho C: MVNCONF_PROFILE_PLUGINREPOSITORY_RELEASE_UPDATEPOLICY_COUNT=$MVNCONF_PROFILE_PLUGINREPOSITORY_RELEASE_UPDATEPOLICY_COUNT MVNCONF_PROFILE_PLUGINREPOSITORY_RELEASE_UPDATEPOLICY_COUNT_01=$MVNCONF_PROFILE_PLUGINREPOSITORY_RELEASE_UPDATEPOLICY_COUNT_01

        _mvnconf_profile_pluginRepository_release_updatePolicy_rangevar = MVNCONF_PROFILE_PLUGINREPOSITORY_RELEASE_UPDATEPOLICY_COUNT_$parent_instance_count

        #if count for this element is unspecified, then only generate if we are generating empties:
        %ifndef $_mvnconf_profile_pluginRepository_release_updatePolicy_rangevar %if $MVNCONF_GENERATE_EMPTY_ELEMENTS $_mvnconf_profile_pluginRepository_release_updatePolicy_rangevar = 01..01

        #if this is an orphaned value, we attach instance n to parent n:
        %ifndef $_mvnconf_profile_pluginRepository_release_updatePolicy_rangevar $_mvnconf_profile_pluginRepository_release_updatePolicy_rangevar = $_mvnconf_profile_pluginRepository_release_updatePolicy_rangevar:xmlcg_default_value_range

        #if count is now specified, but value is not, then set to nil:
        %ifdef MVNCONF_PROFILE_PLUGINREPOSITORY_RELEASE_UPDATEPOLICY_COUNT_01 %ifndef MVNCONF_PROFILE_PLUGINREPOSITORY_RELEASE_UPDATEPOLICY_01 MVNCONF_PROFILE_PLUGINREPOSITORY_RELEASE_UPDATEPOLICY_01=
#%eecho D: MVNCONF_PROFILE_PLUGINREPOSITORY_RELEASE_UPDATEPOLICY_COUNT_01=$MVNCONF_PROFILE_PLUGINREPOSITORY_RELEASE_UPDATEPOLICY_COUNT_01 MVNCONF_PROFILE_PLUGINREPOSITORY_RELEASE_UPDATEPOLICY_01=$MVNCONF_PROFILE_PLUGINREPOSITORY_RELEASE_UPDATEPOLICY_01

        #if count is specified as a simple count, then adjust to be 01..<count>:
        %if $_mvnconf_profile_pluginRepository_release_updatePolicy_rangevar:valueof:isint   $_mvnconf_profile_pluginRepository_release_updatePolicy_rangevar = 01..$_mvnconf_profile_pluginRepository_release_updatePolicy_rangevar:valueof

        ########
#%eecho CALL <T> mvnconf_profile_pluginRepository_release_updatePolicy: _mvnconf_profile_pluginRepository_release_updatePolicy_rangevar=$_mvnconf_profile_pluginRepository_release_updatePolicy_rangevar -> $_mvnconf_profile_pluginRepository_release_updatePolicy_rangevar:valueof
        %foreach instance_count $_mvnconf_profile_pluginRepository_release_updatePolicy_rangevar %call mvnconf_profile_pluginRepository_release_updatePolicy
        ########
    }
    { #generate mvnconf_profile_pluginRepository_release_checksumPolicy terminal element:
#%eecho CALL <T> mvnconf_profile_pluginRepository_release_checksumPolicy: parent_instance_count=$parent_instance_count

        #did user specify a value for the first instance of this element?
        %ifdef MVNCONF_PROFILE_PLUGINREPOSITORY_RELEASE_CHECKSUMPOLICY MVNCONF_PROFILE_PLUGINREPOSITORY_RELEASE_CHECKSUMPOLICY_01 = $MVNCONF_PROFILE_PLUGINREPOSITORY_RELEASE_CHECKSUMPOLICY
#%eecho B: MVNCONF_PROFILE_PLUGINREPOSITORY_RELEASE_CHECKSUMPOLICY=$MVNCONF_PROFILE_PLUGINREPOSITORY_RELEASE_CHECKSUMPOLICY MVNCONF_PROFILE_PLUGINREPOSITORY_RELEASE_CHECKSUMPOLICY_01=$MVNCONF_PROFILE_PLUGINREPOSITORY_RELEASE_CHECKSUMPOLICY_01

        #if value is specified, but count is not, then specify count:
        %ifdef MVNCONF_PROFILE_PLUGINREPOSITORY_RELEASE_CHECKSUMPOLICY_01 %ifndef MVNCONF_PROFILE_PLUGINREPOSITORY_RELEASE_CHECKSUMPOLICY_COUNT_01 MVNCONF_PROFILE_PLUGINREPOSITORY_RELEASE_CHECKSUMPOLICY_COUNT_01 = 01..01

#%eecho C: MVNCONF_PROFILE_PLUGINREPOSITORY_RELEASE_CHECKSUMPOLICY_COUNT=$MVNCONF_PROFILE_PLUGINREPOSITORY_RELEASE_CHECKSUMPOLICY_COUNT MVNCONF_PROFILE_PLUGINREPOSITORY_RELEASE_CHECKSUMPOLICY_COUNT_01=$MVNCONF_PROFILE_PLUGINREPOSITORY_RELEASE_CHECKSUMPOLICY_COUNT_01

        _mvnconf_profile_pluginRepository_release_checksumPolicy_rangevar = MVNCONF_PROFILE_PLUGINREPOSITORY_RELEASE_CHECKSUMPOLICY_COUNT_$parent_instance_count

        #if count for this element is unspecified, then only generate if we are generating empties:
        %ifndef $_mvnconf_profile_pluginRepository_release_checksumPolicy_rangevar %if $MVNCONF_GENERATE_EMPTY_ELEMENTS $_mvnconf_profile_pluginRepository_release_checksumPolicy_rangevar = 01..01

        #if this is an orphaned value, we attach instance n to parent n:
        %ifndef $_mvnconf_profile_pluginRepository_release_checksumPolicy_rangevar $_mvnconf_profile_pluginRepository_release_checksumPolicy_rangevar = $_mvnconf_profile_pluginRepository_release_checksumPolicy_rangevar:xmlcg_default_value_range

        #if count is now specified, but value is not, then set to nil:
        %ifdef MVNCONF_PROFILE_PLUGINREPOSITORY_RELEASE_CHECKSUMPOLICY_COUNT_01 %ifndef MVNCONF_PROFILE_PLUGINREPOSITORY_RELEASE_CHECKSUMPOLICY_01 MVNCONF_PROFILE_PLUGINREPOSITORY_RELEASE_CHECKSUMPOLICY_01=
#%eecho D: MVNCONF_PROFILE_PLUGINREPOSITORY_RELEASE_CHECKSUMPOLICY_COUNT_01=$MVNCONF_PROFILE_PLUGINREPOSITORY_RELEASE_CHECKSUMPOLICY_COUNT_01 MVNCONF_PROFILE_PLUGINREPOSITORY_RELEASE_CHECKSUMPOLICY_01=$MVNCONF_PROFILE_PLUGINREPOSITORY_RELEASE_CHECKSUMPOLICY_01

        #if count is specified as a simple count, then adjust to be 01..<count>:
        %if $_mvnconf_profile_pluginRepository_release_checksumPolicy_rangevar:valueof:isint   $_mvnconf_profile_pluginRepository_release_checksumPolicy_rangevar = 01..$_mvnconf_profile_pluginRepository_release_checksumPolicy_rangevar:valueof

        ########
#%eecho CALL <T> mvnconf_profile_pluginRepository_release_checksumPolicy: _mvnconf_profile_pluginRepository_release_checksumPolicy_rangevar=$_mvnconf_profile_pluginRepository_release_checksumPolicy_rangevar -> $_mvnconf_profile_pluginRepository_release_checksumPolicy_rangevar:valueof
        %foreach instance_count $_mvnconf_profile_pluginRepository_release_checksumPolicy_rangevar %call mvnconf_profile_pluginRepository_release_checksumPolicy
        ########
    }
    ###########

    #now generate me:
    XML_ELEMENT_NAME =  release
    #the kids are our body:
    XML_ELEMENT_BODY =  $MACRO_OUTPUT_ACCUMULATOR:valueof
    #restore the output accumulator varaible name:
    MACRO_OUTPUT_ACCUMULATOR    = $_mvnconf_profile_pluginRepository_release_save_accumulator

    %call xml_nested_element

    #restore parent instance count:
    parent_instance_count = $_mvnconf_profile_pluginRepository_release_save_parent_ic
#%eecho EXIT mvnconf_profile_pluginRepository_release: parent_instance_count=$parent_instance_count
EOF
}

mvnconf_profile_pluginRepository_snapshot_enabled := << EOF
{# mvnconf_profile_pluginRepository_snapshot_enabled: TERMINAL ELEMENT
    mvnconf_profile_pluginRepository_snapshot_enabled_valuevar = MVNCONF_PROFILE_PLUGINREPOSITORY_SNAPSHOT_ENABLED_$instance_count:pad:assign
    %ifndef $mvnconf_profile_pluginRepository_snapshot_enabled_valuevar    mvnconf_profile_pluginRepository_snapshot_enabled_valuevar = MVNCONF_PROFILE_PLUGINREPOSITORY_SNAPSHOT_ENABLED

    #set element contents to nil if not defined:
    %ifndef $mvnconf_profile_pluginRepository_snapshot_enabled_valuevar    $mvnconf_profile_pluginRepository_snapshot_enabled_valuevar =

    XML_ELEMENT_NAME = enabled
    XML_ELEMENT_BODY = $mvnconf_profile_pluginRepository_snapshot_enabled_valuevar:valueof
    %call xml_line_element
}
EOF

mvnconf_profile_pluginRepository_snapshot_updatePolicy := << EOF
{# mvnconf_profile_pluginRepository_snapshot_updatePolicy: TERMINAL ELEMENT
    mvnconf_profile_pluginRepository_snapshot_updatePolicy_valuevar = MVNCONF_PROFILE_PLUGINREPOSITORY_SNAPSHOT_UPDATEPOLICY_$instance_count:pad:assign
    %ifndef $mvnconf_profile_pluginRepository_snapshot_updatePolicy_valuevar    mvnconf_profile_pluginRepository_snapshot_updatePolicy_valuevar = MVNCONF_PROFILE_PLUGINREPOSITORY_SNAPSHOT_UPDATEPOLICY

    #set element contents to nil if not defined:
    %ifndef $mvnconf_profile_pluginRepository_snapshot_updatePolicy_valuevar    $mvnconf_profile_pluginRepository_snapshot_updatePolicy_valuevar =

    XML_ELEMENT_NAME = updatePolicy
    XML_ELEMENT_BODY = $mvnconf_profile_pluginRepository_snapshot_updatePolicy_valuevar:valueof
    %call xml_line_element
}
EOF

mvnconf_profile_pluginRepository_snapshot_checksumPolicy := << EOF
{# mvnconf_profile_pluginRepository_snapshot_checksumPolicy: TERMINAL ELEMENT
    mvnconf_profile_pluginRepository_snapshot_checksumPolicy_valuevar = MVNCONF_PROFILE_PLUGINREPOSITORY_SNAPSHOT_CHECKSUMPOLICY_$instance_count:pad:assign
    %ifndef $mvnconf_profile_pluginRepository_snapshot_checksumPolicy_valuevar    mvnconf_profile_pluginRepository_snapshot_checksumPolicy_valuevar = MVNCONF_PROFILE_PLUGINREPOSITORY_SNAPSHOT_CHECKSUMPOLICY

    #set element contents to nil if not defined:
    %ifndef $mvnconf_profile_pluginRepository_snapshot_checksumPolicy_valuevar    $mvnconf_profile_pluginRepository_snapshot_checksumPolicy_valuevar =

    XML_ELEMENT_NAME = checksumPolicy
    XML_ELEMENT_BODY = $mvnconf_profile_pluginRepository_snapshot_checksumPolicy_valuevar:valueof
    %call xml_line_element
}
EOF

{# mvnconf_profile_pluginRepository_snapshot: NON-TERMINAL ELEMENT
mvnconf_profile_pluginRepository_snapshot := << EOF
#%eecho ENTER mvnconf_profile_pluginRepository_snapshot: parent_instance_count=$parent_instance_count
    #parent_instance_count is zero for top element - normalize spec and increment:
    %ifnot $parent_instance_count NORMALIZE RESULT=$MVNCONF_:nameof:xmlcg_normalize_counts
    %ifnot $parent_instance_count %ifnot $NORMALIZE RESULT %eecho mvnconf_profile_pluginRepository_snapshot: ERROR: MVNCONF_:nameof:xmlcg_normalize_counts FAILED - is xmlcg_ops.pl in your CG_TEMPLATE_PATH?

    %ifnot $parent_instance_count parent_instance_count = 01

    _mvnconf_profile_pluginRepository_snapshot_save_accumulator = $MACRO_OUTPUT_ACCUMULATOR
    _mvnconf_profile_pluginRepository_snapshot_save_parent_ic = $parent_instance_count
    parent_instance_count = $instance_count:pad

    #re-assign to temporary accumulator to pick up kids:
    MACRO_OUTPUT_ACCUMULATOR = _mvnconf_profile_pluginRepository_snapshot_kid_accumulator
    #clear the kid accumulator:
    $MACRO_OUTPUT_ACCUMULATOR =

    #make calls to generate my kid elements:
    ########### GENERATE KIDS: ###########
    { #generate mvnconf_profile_pluginRepository_snapshot_enabled terminal element:
#%eecho CALL <T> mvnconf_profile_pluginRepository_snapshot_enabled: parent_instance_count=$parent_instance_count

        #did user specify a value for the first instance of this element?
        %ifdef MVNCONF_PROFILE_PLUGINREPOSITORY_SNAPSHOT_ENABLED MVNCONF_PROFILE_PLUGINREPOSITORY_SNAPSHOT_ENABLED_01 = $MVNCONF_PROFILE_PLUGINREPOSITORY_SNAPSHOT_ENABLED
#%eecho B: MVNCONF_PROFILE_PLUGINREPOSITORY_SNAPSHOT_ENABLED=$MVNCONF_PROFILE_PLUGINREPOSITORY_SNAPSHOT_ENABLED MVNCONF_PROFILE_PLUGINREPOSITORY_SNAPSHOT_ENABLED_01=$MVNCONF_PROFILE_PLUGINREPOSITORY_SNAPSHOT_ENABLED_01

        #if value is specified, but count is not, then specify count:
        %ifdef MVNCONF_PROFILE_PLUGINREPOSITORY_SNAPSHOT_ENABLED_01 %ifndef MVNCONF_PROFILE_PLUGINREPOSITORY_SNAPSHOT_ENABLED_COUNT_01 MVNCONF_PROFILE_PLUGINREPOSITORY_SNAPSHOT_ENABLED_COUNT_01 = 01..01

#%eecho C: MVNCONF_PROFILE_PLUGINREPOSITORY_SNAPSHOT_ENABLED_COUNT=$MVNCONF_PROFILE_PLUGINREPOSITORY_SNAPSHOT_ENABLED_COUNT MVNCONF_PROFILE_PLUGINREPOSITORY_SNAPSHOT_ENABLED_COUNT_01=$MVNCONF_PROFILE_PLUGINREPOSITORY_SNAPSHOT_ENABLED_COUNT_01

        _mvnconf_profile_pluginRepository_snapshot_enabled_rangevar = MVNCONF_PROFILE_PLUGINREPOSITORY_SNAPSHOT_ENABLED_COUNT_$parent_instance_count

        #if count for this element is unspecified, then only generate if we are generating empties:
        %ifndef $_mvnconf_profile_pluginRepository_snapshot_enabled_rangevar %if $MVNCONF_GENERATE_EMPTY_ELEMENTS $_mvnconf_profile_pluginRepository_snapshot_enabled_rangevar = 01..01

        #if this is an orphaned value, we attach instance n to parent n:
        %ifndef $_mvnconf_profile_pluginRepository_snapshot_enabled_rangevar $_mvnconf_profile_pluginRepository_snapshot_enabled_rangevar = $_mvnconf_profile_pluginRepository_snapshot_enabled_rangevar:xmlcg_default_value_range

        #if count is now specified, but value is not, then set to nil:
        %ifdef MVNCONF_PROFILE_PLUGINREPOSITORY_SNAPSHOT_ENABLED_COUNT_01 %ifndef MVNCONF_PROFILE_PLUGINREPOSITORY_SNAPSHOT_ENABLED_01 MVNCONF_PROFILE_PLUGINREPOSITORY_SNAPSHOT_ENABLED_01=
#%eecho D: MVNCONF_PROFILE_PLUGINREPOSITORY_SNAPSHOT_ENABLED_COUNT_01=$MVNCONF_PROFILE_PLUGINREPOSITORY_SNAPSHOT_ENABLED_COUNT_01 MVNCONF_PROFILE_PLUGINREPOSITORY_SNAPSHOT_ENABLED_01=$MVNCONF_PROFILE_PLUGINREPOSITORY_SNAPSHOT_ENABLED_01

        #if count is specified as a simple count, then adjust to be 01..<count>:
        %if $_mvnconf_profile_pluginRepository_snapshot_enabled_rangevar:valueof:isint   $_mvnconf_profile_pluginRepository_snapshot_enabled_rangevar = 01..$_mvnconf_profile_pluginRepository_snapshot_enabled_rangevar:valueof

        ########
#%eecho CALL <T> mvnconf_profile_pluginRepository_snapshot_enabled: _mvnconf_profile_pluginRepository_snapshot_enabled_rangevar=$_mvnconf_profile_pluginRepository_snapshot_enabled_rangevar -> $_mvnconf_profile_pluginRepository_snapshot_enabled_rangevar:valueof
        %foreach instance_count $_mvnconf_profile_pluginRepository_snapshot_enabled_rangevar %call mvnconf_profile_pluginRepository_snapshot_enabled
        ########
    }
    { #generate mvnconf_profile_pluginRepository_snapshot_updatePolicy terminal element:
#%eecho CALL <T> mvnconf_profile_pluginRepository_snapshot_updatePolicy: parent_instance_count=$parent_instance_count

        #did user specify a value for the first instance of this element?
        %ifdef MVNCONF_PROFILE_PLUGINREPOSITORY_SNAPSHOT_UPDATEPOLICY MVNCONF_PROFILE_PLUGINREPOSITORY_SNAPSHOT_UPDATEPOLICY_01 = $MVNCONF_PROFILE_PLUGINREPOSITORY_SNAPSHOT_UPDATEPOLICY
#%eecho B: MVNCONF_PROFILE_PLUGINREPOSITORY_SNAPSHOT_UPDATEPOLICY=$MVNCONF_PROFILE_PLUGINREPOSITORY_SNAPSHOT_UPDATEPOLICY MVNCONF_PROFILE_PLUGINREPOSITORY_SNAPSHOT_UPDATEPOLICY_01=$MVNCONF_PROFILE_PLUGINREPOSITORY_SNAPSHOT_UPDATEPOLICY_01

        #if value is specified, but count is not, then specify count:
        %ifdef MVNCONF_PROFILE_PLUGINREPOSITORY_SNAPSHOT_UPDATEPOLICY_01 %ifndef MVNCONF_PROFILE_PLUGINREPOSITORY_SNAPSHOT_UPDATEPOLICY_COUNT_01 MVNCONF_PROFILE_PLUGINREPOSITORY_SNAPSHOT_UPDATEPOLICY_COUNT_01 = 01..01

#%eecho C: MVNCONF_PROFILE_PLUGINREPOSITORY_SNAPSHOT_UPDATEPOLICY_COUNT=$MVNCONF_PROFILE_PLUGINREPOSITORY_SNAPSHOT_UPDATEPOLICY_COUNT MVNCONF_PROFILE_PLUGINREPOSITORY_SNAPSHOT_UPDATEPOLICY_COUNT_01=$MVNCONF_PROFILE_PLUGINREPOSITORY_SNAPSHOT_UPDATEPOLICY_COUNT_01

        _mvnconf_profile_pluginRepository_snapshot_updatePolicy_rangevar = MVNCONF_PROFILE_PLUGINREPOSITORY_SNAPSHOT_UPDATEPOLICY_COUNT_$parent_instance_count

        #if count for this element is unspecified, then only generate if we are generating empties:
        %ifndef $_mvnconf_profile_pluginRepository_snapshot_updatePolicy_rangevar %if $MVNCONF_GENERATE_EMPTY_ELEMENTS $_mvnconf_profile_pluginRepository_snapshot_updatePolicy_rangevar = 01..01

        #if this is an orphaned value, we attach instance n to parent n:
        %ifndef $_mvnconf_profile_pluginRepository_snapshot_updatePolicy_rangevar $_mvnconf_profile_pluginRepository_snapshot_updatePolicy_rangevar = $_mvnconf_profile_pluginRepository_snapshot_updatePolicy_rangevar:xmlcg_default_value_range

        #if count is now specified, but value is not, then set to nil:
        %ifdef MVNCONF_PROFILE_PLUGINREPOSITORY_SNAPSHOT_UPDATEPOLICY_COUNT_01 %ifndef MVNCONF_PROFILE_PLUGINREPOSITORY_SNAPSHOT_UPDATEPOLICY_01 MVNCONF_PROFILE_PLUGINREPOSITORY_SNAPSHOT_UPDATEPOLICY_01=
#%eecho D: MVNCONF_PROFILE_PLUGINREPOSITORY_SNAPSHOT_UPDATEPOLICY_COUNT_01=$MVNCONF_PROFILE_PLUGINREPOSITORY_SNAPSHOT_UPDATEPOLICY_COUNT_01 MVNCONF_PROFILE_PLUGINREPOSITORY_SNAPSHOT_UPDATEPOLICY_01=$MVNCONF_PROFILE_PLUGINREPOSITORY_SNAPSHOT_UPDATEPOLICY_01

        #if count is specified as a simple count, then adjust to be 01..<count>:
        %if $_mvnconf_profile_pluginRepository_snapshot_updatePolicy_rangevar:valueof:isint   $_mvnconf_profile_pluginRepository_snapshot_updatePolicy_rangevar = 01..$_mvnconf_profile_pluginRepository_snapshot_updatePolicy_rangevar:valueof

        ########
#%eecho CALL <T> mvnconf_profile_pluginRepository_snapshot_updatePolicy: _mvnconf_profile_pluginRepository_snapshot_updatePolicy_rangevar=$_mvnconf_profile_pluginRepository_snapshot_updatePolicy_rangevar -> $_mvnconf_profile_pluginRepository_snapshot_updatePolicy_rangevar:valueof
        %foreach instance_count $_mvnconf_profile_pluginRepository_snapshot_updatePolicy_rangevar %call mvnconf_profile_pluginRepository_snapshot_updatePolicy
        ########
    }
    { #generate mvnconf_profile_pluginRepository_snapshot_checksumPolicy terminal element:
#%eecho CALL <T> mvnconf_profile_pluginRepository_snapshot_checksumPolicy: parent_instance_count=$parent_instance_count

        #did user specify a value for the first instance of this element?
        %ifdef MVNCONF_PROFILE_PLUGINREPOSITORY_SNAPSHOT_CHECKSUMPOLICY MVNCONF_PROFILE_PLUGINREPOSITORY_SNAPSHOT_CHECKSUMPOLICY_01 = $MVNCONF_PROFILE_PLUGINREPOSITORY_SNAPSHOT_CHECKSUMPOLICY
#%eecho B: MVNCONF_PROFILE_PLUGINREPOSITORY_SNAPSHOT_CHECKSUMPOLICY=$MVNCONF_PROFILE_PLUGINREPOSITORY_SNAPSHOT_CHECKSUMPOLICY MVNCONF_PROFILE_PLUGINREPOSITORY_SNAPSHOT_CHECKSUMPOLICY_01=$MVNCONF_PROFILE_PLUGINREPOSITORY_SNAPSHOT_CHECKSUMPOLICY_01

        #if value is specified, but count is not, then specify count:
        %ifdef MVNCONF_PROFILE_PLUGINREPOSITORY_SNAPSHOT_CHECKSUMPOLICY_01 %ifndef MVNCONF_PROFILE_PLUGINREPOSITORY_SNAPSHOT_CHECKSUMPOLICY_COUNT_01 MVNCONF_PROFILE_PLUGINREPOSITORY_SNAPSHOT_CHECKSUMPOLICY_COUNT_01 = 01..01

#%eecho C: MVNCONF_PROFILE_PLUGINREPOSITORY_SNAPSHOT_CHECKSUMPOLICY_COUNT=$MVNCONF_PROFILE_PLUGINREPOSITORY_SNAPSHOT_CHECKSUMPOLICY_COUNT MVNCONF_PROFILE_PLUGINREPOSITORY_SNAPSHOT_CHECKSUMPOLICY_COUNT_01=$MVNCONF_PROFILE_PLUGINREPOSITORY_SNAPSHOT_CHECKSUMPOLICY_COUNT_01

        _mvnconf_profile_pluginRepository_snapshot_checksumPolicy_rangevar = MVNCONF_PROFILE_PLUGINREPOSITORY_SNAPSHOT_CHECKSUMPOLICY_COUNT_$parent_instance_count

        #if count for this element is unspecified, then only generate if we are generating empties:
        %ifndef $_mvnconf_profile_pluginRepository_snapshot_checksumPolicy_rangevar %if $MVNCONF_GENERATE_EMPTY_ELEMENTS $_mvnconf_profile_pluginRepository_snapshot_checksumPolicy_rangevar = 01..01

        #if this is an orphaned value, we attach instance n to parent n:
        %ifndef $_mvnconf_profile_pluginRepository_snapshot_checksumPolicy_rangevar $_mvnconf_profile_pluginRepository_snapshot_checksumPolicy_rangevar = $_mvnconf_profile_pluginRepository_snapshot_checksumPolicy_rangevar:xmlcg_default_value_range

        #if count is now specified, but value is not, then set to nil:
        %ifdef MVNCONF_PROFILE_PLUGINREPOSITORY_SNAPSHOT_CHECKSUMPOLICY_COUNT_01 %ifndef MVNCONF_PROFILE_PLUGINREPOSITORY_SNAPSHOT_CHECKSUMPOLICY_01 MVNCONF_PROFILE_PLUGINREPOSITORY_SNAPSHOT_CHECKSUMPOLICY_01=
#%eecho D: MVNCONF_PROFILE_PLUGINREPOSITORY_SNAPSHOT_CHECKSUMPOLICY_COUNT_01=$MVNCONF_PROFILE_PLUGINREPOSITORY_SNAPSHOT_CHECKSUMPOLICY_COUNT_01 MVNCONF_PROFILE_PLUGINREPOSITORY_SNAPSHOT_CHECKSUMPOLICY_01=$MVNCONF_PROFILE_PLUGINREPOSITORY_SNAPSHOT_CHECKSUMPOLICY_01

        #if count is specified as a simple count, then adjust to be 01..<count>:
        %if $_mvnconf_profile_pluginRepository_snapshot_checksumPolicy_rangevar:valueof:isint   $_mvnconf_profile_pluginRepository_snapshot_checksumPolicy_rangevar = 01..$_mvnconf_profile_pluginRepository_snapshot_checksumPolicy_rangevar:valueof

        ########
#%eecho CALL <T> mvnconf_profile_pluginRepository_snapshot_checksumPolicy: _mvnconf_profile_pluginRepository_snapshot_checksumPolicy_rangevar=$_mvnconf_profile_pluginRepository_snapshot_checksumPolicy_rangevar -> $_mvnconf_profile_pluginRepository_snapshot_checksumPolicy_rangevar:valueof
        %foreach instance_count $_mvnconf_profile_pluginRepository_snapshot_checksumPolicy_rangevar %call mvnconf_profile_pluginRepository_snapshot_checksumPolicy
        ########
    }
    ###########

    #now generate me:
    XML_ELEMENT_NAME =  snapshot
    #the kids are our body:
    XML_ELEMENT_BODY =  $MACRO_OUTPUT_ACCUMULATOR:valueof
    #restore the output accumulator varaible name:
    MACRO_OUTPUT_ACCUMULATOR    = $_mvnconf_profile_pluginRepository_snapshot_save_accumulator

    %call xml_nested_element

    #restore parent instance count:
    parent_instance_count = $_mvnconf_profile_pluginRepository_snapshot_save_parent_ic
#%eecho EXIT mvnconf_profile_pluginRepository_snapshot: parent_instance_count=$parent_instance_count
EOF
}

mvnconf_profile_pluginRepository_id := << EOF
{# mvnconf_profile_pluginRepository_id: TERMINAL ELEMENT
    mvnconf_profile_pluginRepository_id_valuevar = MVNCONF_PROFILE_PLUGINREPOSITORY_ID_$instance_count:pad:assign
    %ifndef $mvnconf_profile_pluginRepository_id_valuevar    mvnconf_profile_pluginRepository_id_valuevar = MVNCONF_PROFILE_PLUGINREPOSITORY_ID

    #set element contents to nil if not defined:
    %ifndef $mvnconf_profile_pluginRepository_id_valuevar    $mvnconf_profile_pluginRepository_id_valuevar =

    XML_ELEMENT_NAME = id
    XML_ELEMENT_BODY = $mvnconf_profile_pluginRepository_id_valuevar:valueof
    %call xml_line_element
}
EOF

mvnconf_profile_pluginRepository_name := << EOF
{# mvnconf_profile_pluginRepository_name: TERMINAL ELEMENT
    mvnconf_profile_pluginRepository_name_valuevar = MVNCONF_PROFILE_PLUGINREPOSITORY_NAME_$instance_count:pad:assign
    %ifndef $mvnconf_profile_pluginRepository_name_valuevar    mvnconf_profile_pluginRepository_name_valuevar = MVNCONF_PROFILE_PLUGINREPOSITORY_NAME

    #set element contents to nil if not defined:
    %ifndef $mvnconf_profile_pluginRepository_name_valuevar    $mvnconf_profile_pluginRepository_name_valuevar =

    XML_ELEMENT_NAME = name
    XML_ELEMENT_BODY = $mvnconf_profile_pluginRepository_name_valuevar:valueof
    %call xml_line_element
}
EOF

mvnconf_profile_pluginRepository_url := << EOF
{# mvnconf_profile_pluginRepository_url: TERMINAL ELEMENT
    mvnconf_profile_pluginRepository_url_valuevar = MVNCONF_PROFILE_PLUGINREPOSITORY_URL_$instance_count:pad:assign
    %ifndef $mvnconf_profile_pluginRepository_url_valuevar    mvnconf_profile_pluginRepository_url_valuevar = MVNCONF_PROFILE_PLUGINREPOSITORY_URL

    #set element contents to nil if not defined:
    %ifndef $mvnconf_profile_pluginRepository_url_valuevar    $mvnconf_profile_pluginRepository_url_valuevar =

    XML_ELEMENT_NAME = url
    XML_ELEMENT_BODY = $mvnconf_profile_pluginRepository_url_valuevar:valueof
    %call xml_line_element
}
EOF

mvnconf_profile_pluginRepository_layout := << EOF
{# mvnconf_profile_pluginRepository_layout: TERMINAL ELEMENT
    mvnconf_profile_pluginRepository_layout_valuevar = MVNCONF_PROFILE_PLUGINREPOSITORY_LAYOUT_$instance_count:pad:assign
    %ifndef $mvnconf_profile_pluginRepository_layout_valuevar    mvnconf_profile_pluginRepository_layout_valuevar = MVNCONF_PROFILE_PLUGINREPOSITORY_LAYOUT

    #set element contents to nil if not defined:
    %ifndef $mvnconf_profile_pluginRepository_layout_valuevar    $mvnconf_profile_pluginRepository_layout_valuevar =

    XML_ELEMENT_NAME = layout
    XML_ELEMENT_BODY = $mvnconf_profile_pluginRepository_layout_valuevar:valueof
    %call xml_line_element
}
EOF

{# mvnconf_profile_pluginRepository: NON-TERMINAL ELEMENT
mvnconf_profile_pluginRepository := << EOF
#%eecho ENTER mvnconf_profile_pluginRepository: parent_instance_count=$parent_instance_count
    #parent_instance_count is zero for top element - normalize spec and increment:
    %ifnot $parent_instance_count NORMALIZE RESULT=$MVNCONF_:nameof:xmlcg_normalize_counts
    %ifnot $parent_instance_count %ifnot $NORMALIZE RESULT %eecho mvnconf_profile_pluginRepository: ERROR: MVNCONF_:nameof:xmlcg_normalize_counts FAILED - is xmlcg_ops.pl in your CG_TEMPLATE_PATH?

    %ifnot $parent_instance_count parent_instance_count = 01

    _mvnconf_profile_pluginRepository_save_accumulator = $MACRO_OUTPUT_ACCUMULATOR
    _mvnconf_profile_pluginRepository_save_parent_ic = $parent_instance_count
    parent_instance_count = $instance_count:pad

    #re-assign to temporary accumulator to pick up kids:
    MACRO_OUTPUT_ACCUMULATOR = _mvnconf_profile_pluginRepository_kid_accumulator
    #clear the kid accumulator:
    $MACRO_OUTPUT_ACCUMULATOR =

    #make calls to generate my kid elements:
    ########### GENERATE KIDS: ###########
    { #generate mvnconf_profile_pluginRepository_release non-terminal element:
#%eecho A: CALL <NT> mvnconf_profile_pluginRepository_release: parent_instance_count=$parent_instance_count

        _mvnconf_profile_pluginRepository_release_rangevar = MVNCONF_PROFILE_PLUGINREPOSITORY_RELEASE_COUNT_$parent_instance_count

        #if count for this non-terminal element is unspecified, then only generate if we are generating empties:
#%eecho B: CALL <NT> mvnconf_profile_pluginRepository_release: _mvnconf_profile_pluginRepository_release_rangevar=$_mvnconf_profile_pluginRepository_release_rangevar -> $_mvnconf_profile_pluginRepository_release_rangevar:valueof
        %ifndef $_mvnconf_profile_pluginRepository_release_rangevar %if $MVNCONF_GENERATE_EMPTY_ELEMENTS $_mvnconf_profile_pluginRepository_release_rangevar = 01..01

        #if count is still undefined for this terminal, then we're done:
        %ifndef $_mvnconf_profile_pluginRepository_release_rangevar $_mvnconf_profile_pluginRepository_release_rangevar = 01..00

        #if count is specified as a simple count, then adjust to be 01..<count>:
        %if $_mvnconf_profile_pluginRepository_release_rangevar:valueof:isint   $_mvnconf_profile_pluginRepository_release_rangevar = 01..$_mvnconf_profile_pluginRepository_release_rangevar:valueof

        ########
#%eecho C: CALL <NT> mvnconf_profile_pluginRepository_release: _mvnconf_profile_pluginRepository_release_rangevar=$_mvnconf_profile_pluginRepository_release_rangevar -> $_mvnconf_profile_pluginRepository_release_rangevar:valueof
        %foreach instance_count $_mvnconf_profile_pluginRepository_release_rangevar %call mvnconf_profile_pluginRepository_release
        ########
    }
    { #generate mvnconf_profile_pluginRepository_snapshot non-terminal element:
#%eecho A: CALL <NT> mvnconf_profile_pluginRepository_snapshot: parent_instance_count=$parent_instance_count

        _mvnconf_profile_pluginRepository_snapshot_rangevar = MVNCONF_PROFILE_PLUGINREPOSITORY_SNAPSHOT_COUNT_$parent_instance_count

        #if count for this non-terminal element is unspecified, then only generate if we are generating empties:
#%eecho B: CALL <NT> mvnconf_profile_pluginRepository_snapshot: _mvnconf_profile_pluginRepository_snapshot_rangevar=$_mvnconf_profile_pluginRepository_snapshot_rangevar -> $_mvnconf_profile_pluginRepository_snapshot_rangevar:valueof
        %ifndef $_mvnconf_profile_pluginRepository_snapshot_rangevar %if $MVNCONF_GENERATE_EMPTY_ELEMENTS $_mvnconf_profile_pluginRepository_snapshot_rangevar = 01..01

        #if count is still undefined for this terminal, then we're done:
        %ifndef $_mvnconf_profile_pluginRepository_snapshot_rangevar $_mvnconf_profile_pluginRepository_snapshot_rangevar = 01..00

        #if count is specified as a simple count, then adjust to be 01..<count>:
        %if $_mvnconf_profile_pluginRepository_snapshot_rangevar:valueof:isint   $_mvnconf_profile_pluginRepository_snapshot_rangevar = 01..$_mvnconf_profile_pluginRepository_snapshot_rangevar:valueof

        ########
#%eecho C: CALL <NT> mvnconf_profile_pluginRepository_snapshot: _mvnconf_profile_pluginRepository_snapshot_rangevar=$_mvnconf_profile_pluginRepository_snapshot_rangevar -> $_mvnconf_profile_pluginRepository_snapshot_rangevar:valueof
        %foreach instance_count $_mvnconf_profile_pluginRepository_snapshot_rangevar %call mvnconf_profile_pluginRepository_snapshot
        ########
    }
    { #generate mvnconf_profile_pluginRepository_id terminal element:
#%eecho CALL <T> mvnconf_profile_pluginRepository_id: parent_instance_count=$parent_instance_count

        #did user specify a value for the first instance of this element?
        %ifdef MVNCONF_PROFILE_PLUGINREPOSITORY_ID MVNCONF_PROFILE_PLUGINREPOSITORY_ID_01 = $MVNCONF_PROFILE_PLUGINREPOSITORY_ID
#%eecho B: MVNCONF_PROFILE_PLUGINREPOSITORY_ID=$MVNCONF_PROFILE_PLUGINREPOSITORY_ID MVNCONF_PROFILE_PLUGINREPOSITORY_ID_01=$MVNCONF_PROFILE_PLUGINREPOSITORY_ID_01

        #if value is specified, but count is not, then specify count:
        %ifdef MVNCONF_PROFILE_PLUGINREPOSITORY_ID_01 %ifndef MVNCONF_PROFILE_PLUGINREPOSITORY_ID_COUNT_01 MVNCONF_PROFILE_PLUGINREPOSITORY_ID_COUNT_01 = 01..01

#%eecho C: MVNCONF_PROFILE_PLUGINREPOSITORY_ID_COUNT=$MVNCONF_PROFILE_PLUGINREPOSITORY_ID_COUNT MVNCONF_PROFILE_PLUGINREPOSITORY_ID_COUNT_01=$MVNCONF_PROFILE_PLUGINREPOSITORY_ID_COUNT_01

        _mvnconf_profile_pluginRepository_id_rangevar = MVNCONF_PROFILE_PLUGINREPOSITORY_ID_COUNT_$parent_instance_count

        #if count for this element is unspecified, then only generate if we are generating empties:
        %ifndef $_mvnconf_profile_pluginRepository_id_rangevar %if $MVNCONF_GENERATE_EMPTY_ELEMENTS $_mvnconf_profile_pluginRepository_id_rangevar = 01..01

        #if this is an orphaned value, we attach instance n to parent n:
        %ifndef $_mvnconf_profile_pluginRepository_id_rangevar $_mvnconf_profile_pluginRepository_id_rangevar = $_mvnconf_profile_pluginRepository_id_rangevar:xmlcg_default_value_range

        #if count is now specified, but value is not, then set to nil:
        %ifdef MVNCONF_PROFILE_PLUGINREPOSITORY_ID_COUNT_01 %ifndef MVNCONF_PROFILE_PLUGINREPOSITORY_ID_01 MVNCONF_PROFILE_PLUGINREPOSITORY_ID_01=
#%eecho D: MVNCONF_PROFILE_PLUGINREPOSITORY_ID_COUNT_01=$MVNCONF_PROFILE_PLUGINREPOSITORY_ID_COUNT_01 MVNCONF_PROFILE_PLUGINREPOSITORY_ID_01=$MVNCONF_PROFILE_PLUGINREPOSITORY_ID_01

        #if count is specified as a simple count, then adjust to be 01..<count>:
        %if $_mvnconf_profile_pluginRepository_id_rangevar:valueof:isint   $_mvnconf_profile_pluginRepository_id_rangevar = 01..$_mvnconf_profile_pluginRepository_id_rangevar:valueof

        ########
#%eecho CALL <T> mvnconf_profile_pluginRepository_id: _mvnconf_profile_pluginRepository_id_rangevar=$_mvnconf_profile_pluginRepository_id_rangevar -> $_mvnconf_profile_pluginRepository_id_rangevar:valueof
        %foreach instance_count $_mvnconf_profile_pluginRepository_id_rangevar %call mvnconf_profile_pluginRepository_id
        ########
    }
    { #generate mvnconf_profile_pluginRepository_name terminal element:
#%eecho CALL <T> mvnconf_profile_pluginRepository_name: parent_instance_count=$parent_instance_count

        #did user specify a value for the first instance of this element?
        %ifdef MVNCONF_PROFILE_PLUGINREPOSITORY_NAME MVNCONF_PROFILE_PLUGINREPOSITORY_NAME_01 = $MVNCONF_PROFILE_PLUGINREPOSITORY_NAME
#%eecho B: MVNCONF_PROFILE_PLUGINREPOSITORY_NAME=$MVNCONF_PROFILE_PLUGINREPOSITORY_NAME MVNCONF_PROFILE_PLUGINREPOSITORY_NAME_01=$MVNCONF_PROFILE_PLUGINREPOSITORY_NAME_01

        #if value is specified, but count is not, then specify count:
        %ifdef MVNCONF_PROFILE_PLUGINREPOSITORY_NAME_01 %ifndef MVNCONF_PROFILE_PLUGINREPOSITORY_NAME_COUNT_01 MVNCONF_PROFILE_PLUGINREPOSITORY_NAME_COUNT_01 = 01..01

#%eecho C: MVNCONF_PROFILE_PLUGINREPOSITORY_NAME_COUNT=$MVNCONF_PROFILE_PLUGINREPOSITORY_NAME_COUNT MVNCONF_PROFILE_PLUGINREPOSITORY_NAME_COUNT_01=$MVNCONF_PROFILE_PLUGINREPOSITORY_NAME_COUNT_01

        _mvnconf_profile_pluginRepository_name_rangevar = MVNCONF_PROFILE_PLUGINREPOSITORY_NAME_COUNT_$parent_instance_count

        #if count for this element is unspecified, then only generate if we are generating empties:
        %ifndef $_mvnconf_profile_pluginRepository_name_rangevar %if $MVNCONF_GENERATE_EMPTY_ELEMENTS $_mvnconf_profile_pluginRepository_name_rangevar = 01..01

        #if this is an orphaned value, we attach instance n to parent n:
        %ifndef $_mvnconf_profile_pluginRepository_name_rangevar $_mvnconf_profile_pluginRepository_name_rangevar = $_mvnconf_profile_pluginRepository_name_rangevar:xmlcg_default_value_range

        #if count is now specified, but value is not, then set to nil:
        %ifdef MVNCONF_PROFILE_PLUGINREPOSITORY_NAME_COUNT_01 %ifndef MVNCONF_PROFILE_PLUGINREPOSITORY_NAME_01 MVNCONF_PROFILE_PLUGINREPOSITORY_NAME_01=
#%eecho D: MVNCONF_PROFILE_PLUGINREPOSITORY_NAME_COUNT_01=$MVNCONF_PROFILE_PLUGINREPOSITORY_NAME_COUNT_01 MVNCONF_PROFILE_PLUGINREPOSITORY_NAME_01=$MVNCONF_PROFILE_PLUGINREPOSITORY_NAME_01

        #if count is specified as a simple count, then adjust to be 01..<count>:
        %if $_mvnconf_profile_pluginRepository_name_rangevar:valueof:isint   $_mvnconf_profile_pluginRepository_name_rangevar = 01..$_mvnconf_profile_pluginRepository_name_rangevar:valueof

        ########
#%eecho CALL <T> mvnconf_profile_pluginRepository_name: _mvnconf_profile_pluginRepository_name_rangevar=$_mvnconf_profile_pluginRepository_name_rangevar -> $_mvnconf_profile_pluginRepository_name_rangevar:valueof
        %foreach instance_count $_mvnconf_profile_pluginRepository_name_rangevar %call mvnconf_profile_pluginRepository_name
        ########
    }
    { #generate mvnconf_profile_pluginRepository_url terminal element:
#%eecho CALL <T> mvnconf_profile_pluginRepository_url: parent_instance_count=$parent_instance_count

        #did user specify a value for the first instance of this element?
        %ifdef MVNCONF_PROFILE_PLUGINREPOSITORY_URL MVNCONF_PROFILE_PLUGINREPOSITORY_URL_01 = $MVNCONF_PROFILE_PLUGINREPOSITORY_URL
#%eecho B: MVNCONF_PROFILE_PLUGINREPOSITORY_URL=$MVNCONF_PROFILE_PLUGINREPOSITORY_URL MVNCONF_PROFILE_PLUGINREPOSITORY_URL_01=$MVNCONF_PROFILE_PLUGINREPOSITORY_URL_01

        #if value is specified, but count is not, then specify count:
        %ifdef MVNCONF_PROFILE_PLUGINREPOSITORY_URL_01 %ifndef MVNCONF_PROFILE_PLUGINREPOSITORY_URL_COUNT_01 MVNCONF_PROFILE_PLUGINREPOSITORY_URL_COUNT_01 = 01..01

#%eecho C: MVNCONF_PROFILE_PLUGINREPOSITORY_URL_COUNT=$MVNCONF_PROFILE_PLUGINREPOSITORY_URL_COUNT MVNCONF_PROFILE_PLUGINREPOSITORY_URL_COUNT_01=$MVNCONF_PROFILE_PLUGINREPOSITORY_URL_COUNT_01

        _mvnconf_profile_pluginRepository_url_rangevar = MVNCONF_PROFILE_PLUGINREPOSITORY_URL_COUNT_$parent_instance_count

        #if count for this element is unspecified, then only generate if we are generating empties:
        %ifndef $_mvnconf_profile_pluginRepository_url_rangevar %if $MVNCONF_GENERATE_EMPTY_ELEMENTS $_mvnconf_profile_pluginRepository_url_rangevar = 01..01

        #if this is an orphaned value, we attach instance n to parent n:
        %ifndef $_mvnconf_profile_pluginRepository_url_rangevar $_mvnconf_profile_pluginRepository_url_rangevar = $_mvnconf_profile_pluginRepository_url_rangevar:xmlcg_default_value_range

        #if count is now specified, but value is not, then set to nil:
        %ifdef MVNCONF_PROFILE_PLUGINREPOSITORY_URL_COUNT_01 %ifndef MVNCONF_PROFILE_PLUGINREPOSITORY_URL_01 MVNCONF_PROFILE_PLUGINREPOSITORY_URL_01=
#%eecho D: MVNCONF_PROFILE_PLUGINREPOSITORY_URL_COUNT_01=$MVNCONF_PROFILE_PLUGINREPOSITORY_URL_COUNT_01 MVNCONF_PROFILE_PLUGINREPOSITORY_URL_01=$MVNCONF_PROFILE_PLUGINREPOSITORY_URL_01

        #if count is specified as a simple count, then adjust to be 01..<count>:
        %if $_mvnconf_profile_pluginRepository_url_rangevar:valueof:isint   $_mvnconf_profile_pluginRepository_url_rangevar = 01..$_mvnconf_profile_pluginRepository_url_rangevar:valueof

        ########
#%eecho CALL <T> mvnconf_profile_pluginRepository_url: _mvnconf_profile_pluginRepository_url_rangevar=$_mvnconf_profile_pluginRepository_url_rangevar -> $_mvnconf_profile_pluginRepository_url_rangevar:valueof
        %foreach instance_count $_mvnconf_profile_pluginRepository_url_rangevar %call mvnconf_profile_pluginRepository_url
        ########
    }
    { #generate mvnconf_profile_pluginRepository_layout terminal element:
#%eecho CALL <T> mvnconf_profile_pluginRepository_layout: parent_instance_count=$parent_instance_count

        #did user specify a value for the first instance of this element?
        %ifdef MVNCONF_PROFILE_PLUGINREPOSITORY_LAYOUT MVNCONF_PROFILE_PLUGINREPOSITORY_LAYOUT_01 = $MVNCONF_PROFILE_PLUGINREPOSITORY_LAYOUT
#%eecho B: MVNCONF_PROFILE_PLUGINREPOSITORY_LAYOUT=$MVNCONF_PROFILE_PLUGINREPOSITORY_LAYOUT MVNCONF_PROFILE_PLUGINREPOSITORY_LAYOUT_01=$MVNCONF_PROFILE_PLUGINREPOSITORY_LAYOUT_01

        #if value is specified, but count is not, then specify count:
        %ifdef MVNCONF_PROFILE_PLUGINREPOSITORY_LAYOUT_01 %ifndef MVNCONF_PROFILE_PLUGINREPOSITORY_LAYOUT_COUNT_01 MVNCONF_PROFILE_PLUGINREPOSITORY_LAYOUT_COUNT_01 = 01..01

#%eecho C: MVNCONF_PROFILE_PLUGINREPOSITORY_LAYOUT_COUNT=$MVNCONF_PROFILE_PLUGINREPOSITORY_LAYOUT_COUNT MVNCONF_PROFILE_PLUGINREPOSITORY_LAYOUT_COUNT_01=$MVNCONF_PROFILE_PLUGINREPOSITORY_LAYOUT_COUNT_01

        _mvnconf_profile_pluginRepository_layout_rangevar = MVNCONF_PROFILE_PLUGINREPOSITORY_LAYOUT_COUNT_$parent_instance_count

        #if count for this element is unspecified, then only generate if we are generating empties:
        %ifndef $_mvnconf_profile_pluginRepository_layout_rangevar %if $MVNCONF_GENERATE_EMPTY_ELEMENTS $_mvnconf_profile_pluginRepository_layout_rangevar = 01..01

        #if this is an orphaned value, we attach instance n to parent n:
        %ifndef $_mvnconf_profile_pluginRepository_layout_rangevar $_mvnconf_profile_pluginRepository_layout_rangevar = $_mvnconf_profile_pluginRepository_layout_rangevar:xmlcg_default_value_range

        #if count is now specified, but value is not, then set to nil:
        %ifdef MVNCONF_PROFILE_PLUGINREPOSITORY_LAYOUT_COUNT_01 %ifndef MVNCONF_PROFILE_PLUGINREPOSITORY_LAYOUT_01 MVNCONF_PROFILE_PLUGINREPOSITORY_LAYOUT_01=
#%eecho D: MVNCONF_PROFILE_PLUGINREPOSITORY_LAYOUT_COUNT_01=$MVNCONF_PROFILE_PLUGINREPOSITORY_LAYOUT_COUNT_01 MVNCONF_PROFILE_PLUGINREPOSITORY_LAYOUT_01=$MVNCONF_PROFILE_PLUGINREPOSITORY_LAYOUT_01

        #if count is specified as a simple count, then adjust to be 01..<count>:
        %if $_mvnconf_profile_pluginRepository_layout_rangevar:valueof:isint   $_mvnconf_profile_pluginRepository_layout_rangevar = 01..$_mvnconf_profile_pluginRepository_layout_rangevar:valueof

        ########
#%eecho CALL <T> mvnconf_profile_pluginRepository_layout: _mvnconf_profile_pluginRepository_layout_rangevar=$_mvnconf_profile_pluginRepository_layout_rangevar -> $_mvnconf_profile_pluginRepository_layout_rangevar:valueof
        %foreach instance_count $_mvnconf_profile_pluginRepository_layout_rangevar %call mvnconf_profile_pluginRepository_layout
        ########
    }
    ###########

    #now generate me:
    XML_ELEMENT_NAME =  pluginRepository
    #the kids are our body:
    XML_ELEMENT_BODY =  $MACRO_OUTPUT_ACCUMULATOR:valueof
    #restore the output accumulator varaible name:
    MACRO_OUTPUT_ACCUMULATOR    = $_mvnconf_profile_pluginRepository_save_accumulator

    %call xml_nested_element

    #restore parent instance count:
    parent_instance_count = $_mvnconf_profile_pluginRepository_save_parent_ic
#%eecho EXIT mvnconf_profile_pluginRepository: parent_instance_count=$parent_instance_count
EOF
}

{# mvnconf_profile_pluginRepositories: NON-TERMINAL ELEMENT
mvnconf_profile_pluginRepositories := << EOF
#%eecho ENTER mvnconf_profile_pluginRepositories: parent_instance_count=$parent_instance_count
    #parent_instance_count is zero for top element - normalize spec and increment:
    %ifnot $parent_instance_count NORMALIZE RESULT=$MVNCONF_:nameof:xmlcg_normalize_counts
    %ifnot $parent_instance_count %ifnot $NORMALIZE RESULT %eecho mvnconf_profile_pluginRepositories: ERROR: MVNCONF_:nameof:xmlcg_normalize_counts FAILED - is xmlcg_ops.pl in your CG_TEMPLATE_PATH?

    %ifnot $parent_instance_count parent_instance_count = 01

    _mvnconf_profile_pluginRepositories_save_accumulator = $MACRO_OUTPUT_ACCUMULATOR
    _mvnconf_profile_pluginRepositories_save_parent_ic = $parent_instance_count
    parent_instance_count = $instance_count:pad

    #re-assign to temporary accumulator to pick up kids:
    MACRO_OUTPUT_ACCUMULATOR = _mvnconf_profile_pluginRepositories_kid_accumulator
    #clear the kid accumulator:
    $MACRO_OUTPUT_ACCUMULATOR =

    #make calls to generate my kid elements:
    ########### GENERATE KIDS: ###########
    { #generate mvnconf_profile_pluginRepository non-terminal element:
#%eecho A: CALL <NT> mvnconf_profile_pluginRepository: parent_instance_count=$parent_instance_count

        _mvnconf_profile_pluginRepository_rangevar = MVNCONF_PROFILE_PLUGINREPOSITORY_COUNT_$parent_instance_count

        #if count for this non-terminal element is unspecified, then only generate if we are generating empties:
#%eecho B: CALL <NT> mvnconf_profile_pluginRepository: _mvnconf_profile_pluginRepository_rangevar=$_mvnconf_profile_pluginRepository_rangevar -> $_mvnconf_profile_pluginRepository_rangevar:valueof
        %ifndef $_mvnconf_profile_pluginRepository_rangevar %if $MVNCONF_GENERATE_EMPTY_ELEMENTS $_mvnconf_profile_pluginRepository_rangevar = 01..01

        #if count is still undefined for this terminal, then we're done:
        %ifndef $_mvnconf_profile_pluginRepository_rangevar $_mvnconf_profile_pluginRepository_rangevar = 01..00

        #if count is specified as a simple count, then adjust to be 01..<count>:
        %if $_mvnconf_profile_pluginRepository_rangevar:valueof:isint   $_mvnconf_profile_pluginRepository_rangevar = 01..$_mvnconf_profile_pluginRepository_rangevar:valueof

        ########
#%eecho C: CALL <NT> mvnconf_profile_pluginRepository: _mvnconf_profile_pluginRepository_rangevar=$_mvnconf_profile_pluginRepository_rangevar -> $_mvnconf_profile_pluginRepository_rangevar:valueof
        %foreach instance_count $_mvnconf_profile_pluginRepository_rangevar %call mvnconf_profile_pluginRepository
        ########
    }
    ###########

    #now generate me:
    XML_ELEMENT_NAME =  pluginRepositories
    #the kids are our body:
    XML_ELEMENT_BODY =  $MACRO_OUTPUT_ACCUMULATOR:valueof
    #restore the output accumulator varaible name:
    MACRO_OUTPUT_ACCUMULATOR    = $_mvnconf_profile_pluginRepositories_save_accumulator

    %call xml_nested_element

    #restore parent instance count:
    parent_instance_count = $_mvnconf_profile_pluginRepositories_save_parent_ic
#%eecho EXIT mvnconf_profile_pluginRepositories: parent_instance_count=$parent_instance_count
EOF
}

mvnconf_profile_properties := << EOF
{# mvnconf_profile_properties: TERMINAL ELEMENT
    mvnconf_profile_properties_valuevar = MVNCONF_PROFILE_PROPERTIES_$instance_count:pad:assign
    %ifndef $mvnconf_profile_properties_valuevar    mvnconf_profile_properties_valuevar = MVNCONF_PROFILE_PROPERTIES

    #set element contents to nil if not defined:
    %ifndef $mvnconf_profile_properties_valuevar    $mvnconf_profile_properties_valuevar =

    XML_ELEMENT_NAME = properties
    XML_ELEMENT_BODY = $mvnconf_profile_properties_valuevar:valueof
    %call xml_line_element
}
EOF

mvnconf_profile_id := << EOF
{# mvnconf_profile_id: TERMINAL ELEMENT
    mvnconf_profile_id_valuevar = MVNCONF_PROFILE_ID_$instance_count:pad:assign
    %ifndef $mvnconf_profile_id_valuevar    mvnconf_profile_id_valuevar = MVNCONF_PROFILE_ID

    #set element contents to nil if not defined:
    %ifndef $mvnconf_profile_id_valuevar    $mvnconf_profile_id_valuevar =

    XML_ELEMENT_NAME = id
    XML_ELEMENT_BODY = $mvnconf_profile_id_valuevar:valueof
    %call xml_line_element
}
EOF

{# mvnconf_profile: NON-TERMINAL ELEMENT
mvnconf_profile := << EOF
#%eecho ENTER mvnconf_profile: parent_instance_count=$parent_instance_count
    #parent_instance_count is zero for top element - normalize spec and increment:
    %ifnot $parent_instance_count NORMALIZE RESULT=$MVNCONF_:nameof:xmlcg_normalize_counts
    %ifnot $parent_instance_count %ifnot $NORMALIZE RESULT %eecho mvnconf_profile: ERROR: MVNCONF_:nameof:xmlcg_normalize_counts FAILED - is xmlcg_ops.pl in your CG_TEMPLATE_PATH?

    %ifnot $parent_instance_count parent_instance_count = 01

    _mvnconf_profile_save_accumulator = $MACRO_OUTPUT_ACCUMULATOR
    _mvnconf_profile_save_parent_ic = $parent_instance_count
    parent_instance_count = $instance_count:pad

    #re-assign to temporary accumulator to pick up kids:
    MACRO_OUTPUT_ACCUMULATOR = _mvnconf_profile_kid_accumulator
    #clear the kid accumulator:
    $MACRO_OUTPUT_ACCUMULATOR =

    #make calls to generate my kid elements:
    ########### GENERATE KIDS: ###########
    { #generate mvnconf_profile_activation non-terminal element:
#%eecho A: CALL <NT> mvnconf_profile_activation: parent_instance_count=$parent_instance_count

        _mvnconf_profile_activation_rangevar = MVNCONF_PROFILE_ACTIVATION_COUNT_$parent_instance_count

        #if count for this non-terminal element is unspecified, then only generate if we are generating empties:
#%eecho B: CALL <NT> mvnconf_profile_activation: _mvnconf_profile_activation_rangevar=$_mvnconf_profile_activation_rangevar -> $_mvnconf_profile_activation_rangevar:valueof
        %ifndef $_mvnconf_profile_activation_rangevar %if $MVNCONF_GENERATE_EMPTY_ELEMENTS $_mvnconf_profile_activation_rangevar = 01..01

        #if count is still undefined for this terminal, then we're done:
        %ifndef $_mvnconf_profile_activation_rangevar $_mvnconf_profile_activation_rangevar = 01..00

        #if count is specified as a simple count, then adjust to be 01..<count>:
        %if $_mvnconf_profile_activation_rangevar:valueof:isint   $_mvnconf_profile_activation_rangevar = 01..$_mvnconf_profile_activation_rangevar:valueof

        ########
#%eecho C: CALL <NT> mvnconf_profile_activation: _mvnconf_profile_activation_rangevar=$_mvnconf_profile_activation_rangevar -> $_mvnconf_profile_activation_rangevar:valueof
        %foreach instance_count $_mvnconf_profile_activation_rangevar %call mvnconf_profile_activation
        ########
    }
    { #generate mvnconf_profile_properties terminal element:
#%eecho CALL <T> mvnconf_profile_properties: parent_instance_count=$parent_instance_count

        #did user specify a value for the first instance of this element?
        %ifdef MVNCONF_PROFILE_PROPERTIES MVNCONF_PROFILE_PROPERTIES_01 = $MVNCONF_PROFILE_PROPERTIES
#%eecho B: MVNCONF_PROFILE_PROPERTIES=$MVNCONF_PROFILE_PROPERTIES MVNCONF_PROFILE_PROPERTIES_01=$MVNCONF_PROFILE_PROPERTIES_01

        #if value is specified, but count is not, then specify count:
        %ifdef MVNCONF_PROFILE_PROPERTIES_01 %ifndef MVNCONF_PROFILE_PROPERTIES_COUNT_01 MVNCONF_PROFILE_PROPERTIES_COUNT_01 = 01..01

#%eecho C: MVNCONF_PROFILE_PROPERTIES_COUNT=$MVNCONF_PROFILE_PROPERTIES_COUNT MVNCONF_PROFILE_PROPERTIES_COUNT_01=$MVNCONF_PROFILE_PROPERTIES_COUNT_01

        _mvnconf_profile_properties_rangevar = MVNCONF_PROFILE_PROPERTIES_COUNT_$parent_instance_count

        #if count for this element is unspecified, then only generate if we are generating empties:
        %ifndef $_mvnconf_profile_properties_rangevar %if $MVNCONF_GENERATE_EMPTY_ELEMENTS $_mvnconf_profile_properties_rangevar = 01..01

        #if this is an orphaned value, we attach instance n to parent n:
        %ifndef $_mvnconf_profile_properties_rangevar $_mvnconf_profile_properties_rangevar = $_mvnconf_profile_properties_rangevar:xmlcg_default_value_range

        #if count is now specified, but value is not, then set to nil:
        %ifdef MVNCONF_PROFILE_PROPERTIES_COUNT_01 %ifndef MVNCONF_PROFILE_PROPERTIES_01 MVNCONF_PROFILE_PROPERTIES_01=
#%eecho D: MVNCONF_PROFILE_PROPERTIES_COUNT_01=$MVNCONF_PROFILE_PROPERTIES_COUNT_01 MVNCONF_PROFILE_PROPERTIES_01=$MVNCONF_PROFILE_PROPERTIES_01

        #if count is specified as a simple count, then adjust to be 01..<count>:
        %if $_mvnconf_profile_properties_rangevar:valueof:isint   $_mvnconf_profile_properties_rangevar = 01..$_mvnconf_profile_properties_rangevar:valueof

        ########
#%eecho CALL <T> mvnconf_profile_properties: _mvnconf_profile_properties_rangevar=$_mvnconf_profile_properties_rangevar -> $_mvnconf_profile_properties_rangevar:valueof
        %foreach instance_count $_mvnconf_profile_properties_rangevar %call mvnconf_profile_properties
        ########
    }
    { #generate mvnconf_profile_repositories non-terminal element:
#%eecho A: CALL <NT> mvnconf_profile_repositories: parent_instance_count=$parent_instance_count

        _mvnconf_profile_repositories_rangevar = MVNCONF_PROFILE_REPOSITORIES_COUNT_$parent_instance_count

        #if count for this non-terminal element is unspecified, then only generate if we are generating empties:
#%eecho B: CALL <NT> mvnconf_profile_repositories: _mvnconf_profile_repositories_rangevar=$_mvnconf_profile_repositories_rangevar -> $_mvnconf_profile_repositories_rangevar:valueof
        %ifndef $_mvnconf_profile_repositories_rangevar %if $MVNCONF_GENERATE_EMPTY_ELEMENTS $_mvnconf_profile_repositories_rangevar = 01..01

        #if count is still undefined for this terminal, then we're done:
        %ifndef $_mvnconf_profile_repositories_rangevar $_mvnconf_profile_repositories_rangevar = 01..00

        #if count is specified as a simple count, then adjust to be 01..<count>:
        %if $_mvnconf_profile_repositories_rangevar:valueof:isint   $_mvnconf_profile_repositories_rangevar = 01..$_mvnconf_profile_repositories_rangevar:valueof

        ########
#%eecho C: CALL <NT> mvnconf_profile_repositories: _mvnconf_profile_repositories_rangevar=$_mvnconf_profile_repositories_rangevar -> $_mvnconf_profile_repositories_rangevar:valueof
        %foreach instance_count $_mvnconf_profile_repositories_rangevar %call mvnconf_profile_repositories
        ########
    }
    { #generate mvnconf_profile_pluginRepositories non-terminal element:
#%eecho A: CALL <NT> mvnconf_profile_pluginRepositories: parent_instance_count=$parent_instance_count

        _mvnconf_profile_pluginRepositories_rangevar = MVNCONF_PROFILE_PLUGINREPOSITORIES_COUNT_$parent_instance_count

        #if count for this non-terminal element is unspecified, then only generate if we are generating empties:
#%eecho B: CALL <NT> mvnconf_profile_pluginRepositories: _mvnconf_profile_pluginRepositories_rangevar=$_mvnconf_profile_pluginRepositories_rangevar -> $_mvnconf_profile_pluginRepositories_rangevar:valueof
        %ifndef $_mvnconf_profile_pluginRepositories_rangevar %if $MVNCONF_GENERATE_EMPTY_ELEMENTS $_mvnconf_profile_pluginRepositories_rangevar = 01..01

        #if count is still undefined for this terminal, then we're done:
        %ifndef $_mvnconf_profile_pluginRepositories_rangevar $_mvnconf_profile_pluginRepositories_rangevar = 01..00

        #if count is specified as a simple count, then adjust to be 01..<count>:
        %if $_mvnconf_profile_pluginRepositories_rangevar:valueof:isint   $_mvnconf_profile_pluginRepositories_rangevar = 01..$_mvnconf_profile_pluginRepositories_rangevar:valueof

        ########
#%eecho C: CALL <NT> mvnconf_profile_pluginRepositories: _mvnconf_profile_pluginRepositories_rangevar=$_mvnconf_profile_pluginRepositories_rangevar -> $_mvnconf_profile_pluginRepositories_rangevar:valueof
        %foreach instance_count $_mvnconf_profile_pluginRepositories_rangevar %call mvnconf_profile_pluginRepositories
        ########
    }
    { #generate mvnconf_profile_id terminal element:
#%eecho CALL <T> mvnconf_profile_id: parent_instance_count=$parent_instance_count

        #did user specify a value for the first instance of this element?
        %ifdef MVNCONF_PROFILE_ID MVNCONF_PROFILE_ID_01 = $MVNCONF_PROFILE_ID
#%eecho B: MVNCONF_PROFILE_ID=$MVNCONF_PROFILE_ID MVNCONF_PROFILE_ID_01=$MVNCONF_PROFILE_ID_01

        #if value is specified, but count is not, then specify count:
        %ifdef MVNCONF_PROFILE_ID_01 %ifndef MVNCONF_PROFILE_ID_COUNT_01 MVNCONF_PROFILE_ID_COUNT_01 = 01..01

#%eecho C: MVNCONF_PROFILE_ID_COUNT=$MVNCONF_PROFILE_ID_COUNT MVNCONF_PROFILE_ID_COUNT_01=$MVNCONF_PROFILE_ID_COUNT_01

        _mvnconf_profile_id_rangevar = MVNCONF_PROFILE_ID_COUNT_$parent_instance_count

        #if count for this element is unspecified, then only generate if we are generating empties:
        %ifndef $_mvnconf_profile_id_rangevar %if $MVNCONF_GENERATE_EMPTY_ELEMENTS $_mvnconf_profile_id_rangevar = 01..01

        #if this is an orphaned value, we attach instance n to parent n:
        %ifndef $_mvnconf_profile_id_rangevar $_mvnconf_profile_id_rangevar = $_mvnconf_profile_id_rangevar:xmlcg_default_value_range

        #if count is now specified, but value is not, then set to nil:
        %ifdef MVNCONF_PROFILE_ID_COUNT_01 %ifndef MVNCONF_PROFILE_ID_01 MVNCONF_PROFILE_ID_01=
#%eecho D: MVNCONF_PROFILE_ID_COUNT_01=$MVNCONF_PROFILE_ID_COUNT_01 MVNCONF_PROFILE_ID_01=$MVNCONF_PROFILE_ID_01

        #if count is specified as a simple count, then adjust to be 01..<count>:
        %if $_mvnconf_profile_id_rangevar:valueof:isint   $_mvnconf_profile_id_rangevar = 01..$_mvnconf_profile_id_rangevar:valueof

        ########
#%eecho CALL <T> mvnconf_profile_id: _mvnconf_profile_id_rangevar=$_mvnconf_profile_id_rangevar -> $_mvnconf_profile_id_rangevar:valueof
        %foreach instance_count $_mvnconf_profile_id_rangevar %call mvnconf_profile_id
        ########
    }
    ###########

    #now generate me:
    XML_ELEMENT_NAME =  profile
    #the kids are our body:
    XML_ELEMENT_BODY =  $MACRO_OUTPUT_ACCUMULATOR:valueof
    #restore the output accumulator varaible name:
    MACRO_OUTPUT_ACCUMULATOR    = $_mvnconf_profile_save_accumulator

    %call xml_nested_element

    #restore parent instance count:
    parent_instance_count = $_mvnconf_profile_save_parent_ic
#%eecho EXIT mvnconf_profile: parent_instance_count=$parent_instance_count
EOF
}

{# mvnconf_profiles: NON-TERMINAL ELEMENT
mvnconf_profiles := << EOF
#%eecho ENTER mvnconf_profiles: parent_instance_count=$parent_instance_count
    #parent_instance_count is zero for top element - normalize spec and increment:
    %ifnot $parent_instance_count NORMALIZE RESULT=$MVNCONF_:nameof:xmlcg_normalize_counts
    %ifnot $parent_instance_count %ifnot $NORMALIZE RESULT %eecho mvnconf_profiles: ERROR: MVNCONF_:nameof:xmlcg_normalize_counts FAILED - is xmlcg_ops.pl in your CG_TEMPLATE_PATH?

    %ifnot $parent_instance_count parent_instance_count = 01

    _mvnconf_profiles_save_accumulator = $MACRO_OUTPUT_ACCUMULATOR
    _mvnconf_profiles_save_parent_ic = $parent_instance_count
    parent_instance_count = $instance_count:pad

    #re-assign to temporary accumulator to pick up kids:
    MACRO_OUTPUT_ACCUMULATOR = _mvnconf_profiles_kid_accumulator
    #clear the kid accumulator:
    $MACRO_OUTPUT_ACCUMULATOR =

    #make calls to generate my kid elements:
    ########### GENERATE KIDS: ###########
    { #generate mvnconf_profile non-terminal element:
#%eecho A: CALL <NT> mvnconf_profile: parent_instance_count=$parent_instance_count

        _mvnconf_profile_rangevar = MVNCONF_PROFILE_COUNT_$parent_instance_count

        #if count for this non-terminal element is unspecified, then only generate if we are generating empties:
#%eecho B: CALL <NT> mvnconf_profile: _mvnconf_profile_rangevar=$_mvnconf_profile_rangevar -> $_mvnconf_profile_rangevar:valueof
        %ifndef $_mvnconf_profile_rangevar %if $MVNCONF_GENERATE_EMPTY_ELEMENTS $_mvnconf_profile_rangevar = 01..01

        #if count is still undefined for this terminal, then we're done:
        %ifndef $_mvnconf_profile_rangevar $_mvnconf_profile_rangevar = 01..00

        #if count is specified as a simple count, then adjust to be 01..<count>:
        %if $_mvnconf_profile_rangevar:valueof:isint   $_mvnconf_profile_rangevar = 01..$_mvnconf_profile_rangevar:valueof

        ########
#%eecho C: CALL <NT> mvnconf_profile: _mvnconf_profile_rangevar=$_mvnconf_profile_rangevar -> $_mvnconf_profile_rangevar:valueof
        %foreach instance_count $_mvnconf_profile_rangevar %call mvnconf_profile
        ########
    }
    ###########

    #now generate me:
    XML_ELEMENT_NAME =  profiles
    #the kids are our body:
    XML_ELEMENT_BODY =  $MACRO_OUTPUT_ACCUMULATOR:valueof
    #restore the output accumulator varaible name:
    MACRO_OUTPUT_ACCUMULATOR    = $_mvnconf_profiles_save_accumulator

    %call xml_nested_element

    #restore parent instance count:
    parent_instance_count = $_mvnconf_profiles_save_parent_ic
#%eecho EXIT mvnconf_profiles: parent_instance_count=$parent_instance_count
EOF
}

mvnconf_localRepository := << EOF
{# mvnconf_localRepository: TERMINAL ELEMENT
    mvnconf_localRepository_valuevar = MVNCONF_LOCALREPOSITORY_$instance_count:pad:assign
    %ifndef $mvnconf_localRepository_valuevar    mvnconf_localRepository_valuevar = MVNCONF_LOCALREPOSITORY

    #set element contents to nil if not defined:
    %ifndef $mvnconf_localRepository_valuevar    $mvnconf_localRepository_valuevar =

    XML_ELEMENT_NAME = localRepository
    XML_ELEMENT_BODY = $mvnconf_localRepository_valuevar:valueof
    %call xml_line_element
}
EOF

mvnconf_interactiveMode := << EOF
{# mvnconf_interactiveMode: TERMINAL ELEMENT
    mvnconf_interactiveMode_valuevar = MVNCONF_INTERACTIVEMODE_$instance_count:pad:assign
    %ifndef $mvnconf_interactiveMode_valuevar    mvnconf_interactiveMode_valuevar = MVNCONF_INTERACTIVEMODE

    #set element contents to nil if not defined:
    %ifndef $mvnconf_interactiveMode_valuevar    $mvnconf_interactiveMode_valuevar =

    XML_ELEMENT_NAME = interactiveMode
    XML_ELEMENT_BODY = $mvnconf_interactiveMode_valuevar:valueof
    %call xml_line_element
}
EOF

mvnconf_usePluginRegistry := << EOF
{# mvnconf_usePluginRegistry: TERMINAL ELEMENT
    mvnconf_usePluginRegistry_valuevar = MVNCONF_USEPLUGINREGISTRY_$instance_count:pad:assign
    %ifndef $mvnconf_usePluginRegistry_valuevar    mvnconf_usePluginRegistry_valuevar = MVNCONF_USEPLUGINREGISTRY

    #set element contents to nil if not defined:
    %ifndef $mvnconf_usePluginRegistry_valuevar    $mvnconf_usePluginRegistry_valuevar =

    XML_ELEMENT_NAME = usePluginRegistry
    XML_ELEMENT_BODY = $mvnconf_usePluginRegistry_valuevar:valueof
    %call xml_line_element
}
EOF

mvnconf_offline := << EOF
{# mvnconf_offline: TERMINAL ELEMENT
    mvnconf_offline_valuevar = MVNCONF_OFFLINE_$instance_count:pad:assign
    %ifndef $mvnconf_offline_valuevar    mvnconf_offline_valuevar = MVNCONF_OFFLINE

    #set element contents to nil if not defined:
    %ifndef $mvnconf_offline_valuevar    $mvnconf_offline_valuevar =

    XML_ELEMENT_NAME = offline
    XML_ELEMENT_BODY = $mvnconf_offline_valuevar:valueof
    %call xml_line_element
}
EOF

mvnconf_activeProfiles := << EOF
{# mvnconf_activeProfiles: TERMINAL ELEMENT
    mvnconf_activeProfiles_valuevar = MVNCONF_ACTIVEPROFILES_$instance_count:pad:assign
    %ifndef $mvnconf_activeProfiles_valuevar    mvnconf_activeProfiles_valuevar = MVNCONF_ACTIVEPROFILES

    #set element contents to nil if not defined:
    %ifndef $mvnconf_activeProfiles_valuevar    $mvnconf_activeProfiles_valuevar =

    XML_ELEMENT_NAME = activeProfiles
    XML_ELEMENT_BODY = $mvnconf_activeProfiles_valuevar:valueof
    %call xml_line_element
}
EOF

mvnconf_pluginGroups := << EOF
{# mvnconf_pluginGroups: TERMINAL ELEMENT
    mvnconf_pluginGroups_valuevar = MVNCONF_PLUGINGROUPS_$instance_count:pad:assign
    %ifndef $mvnconf_pluginGroups_valuevar    mvnconf_pluginGroups_valuevar = MVNCONF_PLUGINGROUPS

    #set element contents to nil if not defined:
    %ifndef $mvnconf_pluginGroups_valuevar    $mvnconf_pluginGroups_valuevar =

    XML_ELEMENT_NAME = pluginGroups
    XML_ELEMENT_BODY = $mvnconf_pluginGroups_valuevar:valueof
    %call xml_line_element
}
EOF

{# mvnconf_settings: NON-TERMINAL ELEMENT
mvnconf_settings := << EOF
#%eecho ENTER mvnconf_settings: parent_instance_count=$parent_instance_count
    #parent_instance_count is zero for top element - normalize spec and increment:
    %ifnot $parent_instance_count NORMALIZE RESULT=$MVNCONF_:nameof:xmlcg_normalize_counts
    %ifnot $parent_instance_count %ifnot $NORMALIZE RESULT %eecho mvnconf_settings: ERROR: MVNCONF_:nameof:xmlcg_normalize_counts FAILED - is xmlcg_ops.pl in your CG_TEMPLATE_PATH?

    %ifnot $parent_instance_count parent_instance_count = 01

    _mvnconf_settings_save_accumulator = $MACRO_OUTPUT_ACCUMULATOR
    _mvnconf_settings_save_parent_ic = $parent_instance_count
    parent_instance_count = $instance_count:pad

    #re-assign to temporary accumulator to pick up kids:
    MACRO_OUTPUT_ACCUMULATOR = _mvnconf_settings_kid_accumulator
    #clear the kid accumulator:
    $MACRO_OUTPUT_ACCUMULATOR =

    #make calls to generate my kid elements:
    ########### GENERATE KIDS: ###########
    { #generate mvnconf_localRepository terminal element:
#%eecho CALL <T> mvnconf_localRepository: parent_instance_count=$parent_instance_count

        #did user specify a value for the first instance of this element?
        %ifdef MVNCONF_LOCALREPOSITORY MVNCONF_LOCALREPOSITORY_01 = $MVNCONF_LOCALREPOSITORY
#%eecho B: MVNCONF_LOCALREPOSITORY=$MVNCONF_LOCALREPOSITORY MVNCONF_LOCALREPOSITORY_01=$MVNCONF_LOCALREPOSITORY_01

        #if value is specified, but count is not, then specify count:
        %ifdef MVNCONF_LOCALREPOSITORY_01 %ifndef MVNCONF_LOCALREPOSITORY_COUNT_01 MVNCONF_LOCALREPOSITORY_COUNT_01 = 01..01

#%eecho C: MVNCONF_LOCALREPOSITORY_COUNT=$MVNCONF_LOCALREPOSITORY_COUNT MVNCONF_LOCALREPOSITORY_COUNT_01=$MVNCONF_LOCALREPOSITORY_COUNT_01

        _mvnconf_localRepository_rangevar = MVNCONF_LOCALREPOSITORY_COUNT_$parent_instance_count

        #if count for this element is unspecified, then only generate if we are generating empties:
        %ifndef $_mvnconf_localRepository_rangevar %if $MVNCONF_GENERATE_EMPTY_ELEMENTS $_mvnconf_localRepository_rangevar = 01..01

        #if this is an orphaned value, we attach instance n to parent n:
        %ifndef $_mvnconf_localRepository_rangevar $_mvnconf_localRepository_rangevar = $_mvnconf_localRepository_rangevar:xmlcg_default_value_range

        #if count is now specified, but value is not, then set to nil:
        %ifdef MVNCONF_LOCALREPOSITORY_COUNT_01 %ifndef MVNCONF_LOCALREPOSITORY_01 MVNCONF_LOCALREPOSITORY_01=
#%eecho D: MVNCONF_LOCALREPOSITORY_COUNT_01=$MVNCONF_LOCALREPOSITORY_COUNT_01 MVNCONF_LOCALREPOSITORY_01=$MVNCONF_LOCALREPOSITORY_01

        #if count is specified as a simple count, then adjust to be 01..<count>:
        %if $_mvnconf_localRepository_rangevar:valueof:isint   $_mvnconf_localRepository_rangevar = 01..$_mvnconf_localRepository_rangevar:valueof

        ########
#%eecho CALL <T> mvnconf_localRepository: _mvnconf_localRepository_rangevar=$_mvnconf_localRepository_rangevar -> $_mvnconf_localRepository_rangevar:valueof
        %foreach instance_count $_mvnconf_localRepository_rangevar %call mvnconf_localRepository
        ########
    }
    { #generate mvnconf_interactiveMode terminal element:
#%eecho CALL <T> mvnconf_interactiveMode: parent_instance_count=$parent_instance_count

        #did user specify a value for the first instance of this element?
        %ifdef MVNCONF_INTERACTIVEMODE MVNCONF_INTERACTIVEMODE_01 = $MVNCONF_INTERACTIVEMODE
#%eecho B: MVNCONF_INTERACTIVEMODE=$MVNCONF_INTERACTIVEMODE MVNCONF_INTERACTIVEMODE_01=$MVNCONF_INTERACTIVEMODE_01

        #if value is specified, but count is not, then specify count:
        %ifdef MVNCONF_INTERACTIVEMODE_01 %ifndef MVNCONF_INTERACTIVEMODE_COUNT_01 MVNCONF_INTERACTIVEMODE_COUNT_01 = 01..01

#%eecho C: MVNCONF_INTERACTIVEMODE_COUNT=$MVNCONF_INTERACTIVEMODE_COUNT MVNCONF_INTERACTIVEMODE_COUNT_01=$MVNCONF_INTERACTIVEMODE_COUNT_01

        _mvnconf_interactiveMode_rangevar = MVNCONF_INTERACTIVEMODE_COUNT_$parent_instance_count

        #if count for this element is unspecified, then only generate if we are generating empties:
        %ifndef $_mvnconf_interactiveMode_rangevar %if $MVNCONF_GENERATE_EMPTY_ELEMENTS $_mvnconf_interactiveMode_rangevar = 01..01

        #if this is an orphaned value, we attach instance n to parent n:
        %ifndef $_mvnconf_interactiveMode_rangevar $_mvnconf_interactiveMode_rangevar = $_mvnconf_interactiveMode_rangevar:xmlcg_default_value_range

        #if count is now specified, but value is not, then set to nil:
        %ifdef MVNCONF_INTERACTIVEMODE_COUNT_01 %ifndef MVNCONF_INTERACTIVEMODE_01 MVNCONF_INTERACTIVEMODE_01=
#%eecho D: MVNCONF_INTERACTIVEMODE_COUNT_01=$MVNCONF_INTERACTIVEMODE_COUNT_01 MVNCONF_INTERACTIVEMODE_01=$MVNCONF_INTERACTIVEMODE_01

        #if count is specified as a simple count, then adjust to be 01..<count>:
        %if $_mvnconf_interactiveMode_rangevar:valueof:isint   $_mvnconf_interactiveMode_rangevar = 01..$_mvnconf_interactiveMode_rangevar:valueof

        ########
#%eecho CALL <T> mvnconf_interactiveMode: _mvnconf_interactiveMode_rangevar=$_mvnconf_interactiveMode_rangevar -> $_mvnconf_interactiveMode_rangevar:valueof
        %foreach instance_count $_mvnconf_interactiveMode_rangevar %call mvnconf_interactiveMode
        ########
    }
    { #generate mvnconf_usePluginRegistry terminal element:
#%eecho CALL <T> mvnconf_usePluginRegistry: parent_instance_count=$parent_instance_count

        #did user specify a value for the first instance of this element?
        %ifdef MVNCONF_USEPLUGINREGISTRY MVNCONF_USEPLUGINREGISTRY_01 = $MVNCONF_USEPLUGINREGISTRY
#%eecho B: MVNCONF_USEPLUGINREGISTRY=$MVNCONF_USEPLUGINREGISTRY MVNCONF_USEPLUGINREGISTRY_01=$MVNCONF_USEPLUGINREGISTRY_01

        #if value is specified, but count is not, then specify count:
        %ifdef MVNCONF_USEPLUGINREGISTRY_01 %ifndef MVNCONF_USEPLUGINREGISTRY_COUNT_01 MVNCONF_USEPLUGINREGISTRY_COUNT_01 = 01..01

#%eecho C: MVNCONF_USEPLUGINREGISTRY_COUNT=$MVNCONF_USEPLUGINREGISTRY_COUNT MVNCONF_USEPLUGINREGISTRY_COUNT_01=$MVNCONF_USEPLUGINREGISTRY_COUNT_01

        _mvnconf_usePluginRegistry_rangevar = MVNCONF_USEPLUGINREGISTRY_COUNT_$parent_instance_count

        #if count for this element is unspecified, then only generate if we are generating empties:
        %ifndef $_mvnconf_usePluginRegistry_rangevar %if $MVNCONF_GENERATE_EMPTY_ELEMENTS $_mvnconf_usePluginRegistry_rangevar = 01..01

        #if this is an orphaned value, we attach instance n to parent n:
        %ifndef $_mvnconf_usePluginRegistry_rangevar $_mvnconf_usePluginRegistry_rangevar = $_mvnconf_usePluginRegistry_rangevar:xmlcg_default_value_range

        #if count is now specified, but value is not, then set to nil:
        %ifdef MVNCONF_USEPLUGINREGISTRY_COUNT_01 %ifndef MVNCONF_USEPLUGINREGISTRY_01 MVNCONF_USEPLUGINREGISTRY_01=
#%eecho D: MVNCONF_USEPLUGINREGISTRY_COUNT_01=$MVNCONF_USEPLUGINREGISTRY_COUNT_01 MVNCONF_USEPLUGINREGISTRY_01=$MVNCONF_USEPLUGINREGISTRY_01

        #if count is specified as a simple count, then adjust to be 01..<count>:
        %if $_mvnconf_usePluginRegistry_rangevar:valueof:isint   $_mvnconf_usePluginRegistry_rangevar = 01..$_mvnconf_usePluginRegistry_rangevar:valueof

        ########
#%eecho CALL <T> mvnconf_usePluginRegistry: _mvnconf_usePluginRegistry_rangevar=$_mvnconf_usePluginRegistry_rangevar -> $_mvnconf_usePluginRegistry_rangevar:valueof
        %foreach instance_count $_mvnconf_usePluginRegistry_rangevar %call mvnconf_usePluginRegistry
        ########
    }
    { #generate mvnconf_offline terminal element:
#%eecho CALL <T> mvnconf_offline: parent_instance_count=$parent_instance_count

        #did user specify a value for the first instance of this element?
        %ifdef MVNCONF_OFFLINE MVNCONF_OFFLINE_01 = $MVNCONF_OFFLINE
#%eecho B: MVNCONF_OFFLINE=$MVNCONF_OFFLINE MVNCONF_OFFLINE_01=$MVNCONF_OFFLINE_01

        #if value is specified, but count is not, then specify count:
        %ifdef MVNCONF_OFFLINE_01 %ifndef MVNCONF_OFFLINE_COUNT_01 MVNCONF_OFFLINE_COUNT_01 = 01..01

#%eecho C: MVNCONF_OFFLINE_COUNT=$MVNCONF_OFFLINE_COUNT MVNCONF_OFFLINE_COUNT_01=$MVNCONF_OFFLINE_COUNT_01

        _mvnconf_offline_rangevar = MVNCONF_OFFLINE_COUNT_$parent_instance_count

        #if count for this element is unspecified, then only generate if we are generating empties:
        %ifndef $_mvnconf_offline_rangevar %if $MVNCONF_GENERATE_EMPTY_ELEMENTS $_mvnconf_offline_rangevar = 01..01

        #if this is an orphaned value, we attach instance n to parent n:
        %ifndef $_mvnconf_offline_rangevar $_mvnconf_offline_rangevar = $_mvnconf_offline_rangevar:xmlcg_default_value_range

        #if count is now specified, but value is not, then set to nil:
        %ifdef MVNCONF_OFFLINE_COUNT_01 %ifndef MVNCONF_OFFLINE_01 MVNCONF_OFFLINE_01=
#%eecho D: MVNCONF_OFFLINE_COUNT_01=$MVNCONF_OFFLINE_COUNT_01 MVNCONF_OFFLINE_01=$MVNCONF_OFFLINE_01

        #if count is specified as a simple count, then adjust to be 01..<count>:
        %if $_mvnconf_offline_rangevar:valueof:isint   $_mvnconf_offline_rangevar = 01..$_mvnconf_offline_rangevar:valueof

        ########
#%eecho CALL <T> mvnconf_offline: _mvnconf_offline_rangevar=$_mvnconf_offline_rangevar -> $_mvnconf_offline_rangevar:valueof
        %foreach instance_count $_mvnconf_offline_rangevar %call mvnconf_offline
        ########
    }
    { #generate mvnconf_proxies non-terminal element:
#%eecho A: CALL <NT> mvnconf_proxies: parent_instance_count=$parent_instance_count

        _mvnconf_proxies_rangevar = MVNCONF_PROXIES_COUNT_$parent_instance_count

        #if count for this non-terminal element is unspecified, then only generate if we are generating empties:
#%eecho B: CALL <NT> mvnconf_proxies: _mvnconf_proxies_rangevar=$_mvnconf_proxies_rangevar -> $_mvnconf_proxies_rangevar:valueof
        %ifndef $_mvnconf_proxies_rangevar %if $MVNCONF_GENERATE_EMPTY_ELEMENTS $_mvnconf_proxies_rangevar = 01..01

        #if count is still undefined for this terminal, then we're done:
        %ifndef $_mvnconf_proxies_rangevar $_mvnconf_proxies_rangevar = 01..00

        #if count is specified as a simple count, then adjust to be 01..<count>:
        %if $_mvnconf_proxies_rangevar:valueof:isint   $_mvnconf_proxies_rangevar = 01..$_mvnconf_proxies_rangevar:valueof

        ########
#%eecho C: CALL <NT> mvnconf_proxies: _mvnconf_proxies_rangevar=$_mvnconf_proxies_rangevar -> $_mvnconf_proxies_rangevar:valueof
        %foreach instance_count $_mvnconf_proxies_rangevar %call mvnconf_proxies
        ########
    }
    { #generate mvnconf_servers non-terminal element:
#%eecho A: CALL <NT> mvnconf_servers: parent_instance_count=$parent_instance_count

        _mvnconf_servers_rangevar = MVNCONF_SERVERS_COUNT_$parent_instance_count

        #if count for this non-terminal element is unspecified, then only generate if we are generating empties:
#%eecho B: CALL <NT> mvnconf_servers: _mvnconf_servers_rangevar=$_mvnconf_servers_rangevar -> $_mvnconf_servers_rangevar:valueof
        %ifndef $_mvnconf_servers_rangevar %if $MVNCONF_GENERATE_EMPTY_ELEMENTS $_mvnconf_servers_rangevar = 01..01

        #if count is still undefined for this terminal, then we're done:
        %ifndef $_mvnconf_servers_rangevar $_mvnconf_servers_rangevar = 01..00

        #if count is specified as a simple count, then adjust to be 01..<count>:
        %if $_mvnconf_servers_rangevar:valueof:isint   $_mvnconf_servers_rangevar = 01..$_mvnconf_servers_rangevar:valueof

        ########
#%eecho C: CALL <NT> mvnconf_servers: _mvnconf_servers_rangevar=$_mvnconf_servers_rangevar -> $_mvnconf_servers_rangevar:valueof
        %foreach instance_count $_mvnconf_servers_rangevar %call mvnconf_servers
        ########
    }
    { #generate mvnconf_mirrors non-terminal element:
#%eecho A: CALL <NT> mvnconf_mirrors: parent_instance_count=$parent_instance_count

        _mvnconf_mirrors_rangevar = MVNCONF_MIRRORS_COUNT_$parent_instance_count

        #if count for this non-terminal element is unspecified, then only generate if we are generating empties:
#%eecho B: CALL <NT> mvnconf_mirrors: _mvnconf_mirrors_rangevar=$_mvnconf_mirrors_rangevar -> $_mvnconf_mirrors_rangevar:valueof
        %ifndef $_mvnconf_mirrors_rangevar %if $MVNCONF_GENERATE_EMPTY_ELEMENTS $_mvnconf_mirrors_rangevar = 01..01

        #if count is still undefined for this terminal, then we're done:
        %ifndef $_mvnconf_mirrors_rangevar $_mvnconf_mirrors_rangevar = 01..00

        #if count is specified as a simple count, then adjust to be 01..<count>:
        %if $_mvnconf_mirrors_rangevar:valueof:isint   $_mvnconf_mirrors_rangevar = 01..$_mvnconf_mirrors_rangevar:valueof

        ########
#%eecho C: CALL <NT> mvnconf_mirrors: _mvnconf_mirrors_rangevar=$_mvnconf_mirrors_rangevar -> $_mvnconf_mirrors_rangevar:valueof
        %foreach instance_count $_mvnconf_mirrors_rangevar %call mvnconf_mirrors
        ########
    }
    { #generate mvnconf_profiles non-terminal element:
#%eecho A: CALL <NT> mvnconf_profiles: parent_instance_count=$parent_instance_count

        _mvnconf_profiles_rangevar = MVNCONF_PROFILES_COUNT_$parent_instance_count

        #if count for this non-terminal element is unspecified, then only generate if we are generating empties:
#%eecho B: CALL <NT> mvnconf_profiles: _mvnconf_profiles_rangevar=$_mvnconf_profiles_rangevar -> $_mvnconf_profiles_rangevar:valueof
        %ifndef $_mvnconf_profiles_rangevar %if $MVNCONF_GENERATE_EMPTY_ELEMENTS $_mvnconf_profiles_rangevar = 01..01

        #if count is still undefined for this terminal, then we're done:
        %ifndef $_mvnconf_profiles_rangevar $_mvnconf_profiles_rangevar = 01..00

        #if count is specified as a simple count, then adjust to be 01..<count>:
        %if $_mvnconf_profiles_rangevar:valueof:isint   $_mvnconf_profiles_rangevar = 01..$_mvnconf_profiles_rangevar:valueof

        ########
#%eecho C: CALL <NT> mvnconf_profiles: _mvnconf_profiles_rangevar=$_mvnconf_profiles_rangevar -> $_mvnconf_profiles_rangevar:valueof
        %foreach instance_count $_mvnconf_profiles_rangevar %call mvnconf_profiles
        ########
    }
    { #generate mvnconf_activeProfiles terminal element:
#%eecho CALL <T> mvnconf_activeProfiles: parent_instance_count=$parent_instance_count

        #did user specify a value for the first instance of this element?
        %ifdef MVNCONF_ACTIVEPROFILES MVNCONF_ACTIVEPROFILES_01 = $MVNCONF_ACTIVEPROFILES
#%eecho B: MVNCONF_ACTIVEPROFILES=$MVNCONF_ACTIVEPROFILES MVNCONF_ACTIVEPROFILES_01=$MVNCONF_ACTIVEPROFILES_01

        #if value is specified, but count is not, then specify count:
        %ifdef MVNCONF_ACTIVEPROFILES_01 %ifndef MVNCONF_ACTIVEPROFILES_COUNT_01 MVNCONF_ACTIVEPROFILES_COUNT_01 = 01..01

#%eecho C: MVNCONF_ACTIVEPROFILES_COUNT=$MVNCONF_ACTIVEPROFILES_COUNT MVNCONF_ACTIVEPROFILES_COUNT_01=$MVNCONF_ACTIVEPROFILES_COUNT_01

        _mvnconf_activeProfiles_rangevar = MVNCONF_ACTIVEPROFILES_COUNT_$parent_instance_count

        #if count for this element is unspecified, then only generate if we are generating empties:
        %ifndef $_mvnconf_activeProfiles_rangevar %if $MVNCONF_GENERATE_EMPTY_ELEMENTS $_mvnconf_activeProfiles_rangevar = 01..01

        #if this is an orphaned value, we attach instance n to parent n:
        %ifndef $_mvnconf_activeProfiles_rangevar $_mvnconf_activeProfiles_rangevar = $_mvnconf_activeProfiles_rangevar:xmlcg_default_value_range

        #if count is now specified, but value is not, then set to nil:
        %ifdef MVNCONF_ACTIVEPROFILES_COUNT_01 %ifndef MVNCONF_ACTIVEPROFILES_01 MVNCONF_ACTIVEPROFILES_01=
#%eecho D: MVNCONF_ACTIVEPROFILES_COUNT_01=$MVNCONF_ACTIVEPROFILES_COUNT_01 MVNCONF_ACTIVEPROFILES_01=$MVNCONF_ACTIVEPROFILES_01

        #if count is specified as a simple count, then adjust to be 01..<count>:
        %if $_mvnconf_activeProfiles_rangevar:valueof:isint   $_mvnconf_activeProfiles_rangevar = 01..$_mvnconf_activeProfiles_rangevar:valueof

        ########
#%eecho CALL <T> mvnconf_activeProfiles: _mvnconf_activeProfiles_rangevar=$_mvnconf_activeProfiles_rangevar -> $_mvnconf_activeProfiles_rangevar:valueof
        %foreach instance_count $_mvnconf_activeProfiles_rangevar %call mvnconf_activeProfiles
        ########
    }
    { #generate mvnconf_pluginGroups terminal element:
#%eecho CALL <T> mvnconf_pluginGroups: parent_instance_count=$parent_instance_count

        #did user specify a value for the first instance of this element?
        %ifdef MVNCONF_PLUGINGROUPS MVNCONF_PLUGINGROUPS_01 = $MVNCONF_PLUGINGROUPS
#%eecho B: MVNCONF_PLUGINGROUPS=$MVNCONF_PLUGINGROUPS MVNCONF_PLUGINGROUPS_01=$MVNCONF_PLUGINGROUPS_01

        #if value is specified, but count is not, then specify count:
        %ifdef MVNCONF_PLUGINGROUPS_01 %ifndef MVNCONF_PLUGINGROUPS_COUNT_01 MVNCONF_PLUGINGROUPS_COUNT_01 = 01..01

#%eecho C: MVNCONF_PLUGINGROUPS_COUNT=$MVNCONF_PLUGINGROUPS_COUNT MVNCONF_PLUGINGROUPS_COUNT_01=$MVNCONF_PLUGINGROUPS_COUNT_01

        _mvnconf_pluginGroups_rangevar = MVNCONF_PLUGINGROUPS_COUNT_$parent_instance_count

        #if count for this element is unspecified, then only generate if we are generating empties:
        %ifndef $_mvnconf_pluginGroups_rangevar %if $MVNCONF_GENERATE_EMPTY_ELEMENTS $_mvnconf_pluginGroups_rangevar = 01..01

        #if this is an orphaned value, we attach instance n to parent n:
        %ifndef $_mvnconf_pluginGroups_rangevar $_mvnconf_pluginGroups_rangevar = $_mvnconf_pluginGroups_rangevar:xmlcg_default_value_range

        #if count is now specified, but value is not, then set to nil:
        %ifdef MVNCONF_PLUGINGROUPS_COUNT_01 %ifndef MVNCONF_PLUGINGROUPS_01 MVNCONF_PLUGINGROUPS_01=
#%eecho D: MVNCONF_PLUGINGROUPS_COUNT_01=$MVNCONF_PLUGINGROUPS_COUNT_01 MVNCONF_PLUGINGROUPS_01=$MVNCONF_PLUGINGROUPS_01

        #if count is specified as a simple count, then adjust to be 01..<count>:
        %if $_mvnconf_pluginGroups_rangevar:valueof:isint   $_mvnconf_pluginGroups_rangevar = 01..$_mvnconf_pluginGroups_rangevar:valueof

        ########
#%eecho CALL <T> mvnconf_pluginGroups: _mvnconf_pluginGroups_rangevar=$_mvnconf_pluginGroups_rangevar -> $_mvnconf_pluginGroups_rangevar:valueof
        %foreach instance_count $_mvnconf_pluginGroups_rangevar %call mvnconf_pluginGroups
        ########
    }
    ###########

    #now generate me:
    XML_ELEMENT_NAME =  settings
    #the kids are our body:
    XML_ELEMENT_BODY =  $MACRO_OUTPUT_ACCUMULATOR:valueof
    #restore the output accumulator varaible name:
    MACRO_OUTPUT_ACCUMULATOR    = $_mvnconf_settings_save_accumulator

    %call xml_nested_element

    #restore parent instance count:
    parent_instance_count = $_mvnconf_settings_save_parent_ic
#%eecho EXIT mvnconf_settings: parent_instance_count=$parent_instance_count
EOF
}

{
show_maven_user_vars := << EOF

#create list of variables to show
maven_user_vars := << EOF2
#############
#non-terminal elements:
#NOTE:  here is where you specify how many elements to generate for a repeating
#       non-terminal element.  For example, if you have 2 developers, specify:
# MAVEN_PROJECT_DEVELOPERS_COUNT = 1
# MAVEN_DEVELOPER_COUNT = 2
#############
MVNCONF_PROXY_COUNT = 01
MVNCONF_PROXIES_COUNT = 01
MVNCONF_SERVER_COUNT = 01
MVNCONF_SERVERS_COUNT = 01
MVNCONF_MIRROR_COUNT = 01
MVNCONF_MIRRORS_COUNT = 01
MVNCONF_PROFILE_ACTIVATION_O_COUNT = 01
MVNCONF_PROFILE_ACTIVATION_PROPERTY_COUNT = 01
MVNCONF_PROFILE_ACTIVATION_FILE_COUNT = 01
MVNCONF_PROFILE_ACTIVATION_COUNT = 01
MVNCONF_PROFILE_REPOSITORY_RELEASE_COUNT = 01
MVNCONF_PROFILE_REPOSITORY_SNAPSHOT_COUNT = 01
MVNCONF_PROFILE_REPOSITORY_COUNT = 01
MVNCONF_PROFILE_REPOSITORIES_COUNT = 01
MVNCONF_PROFILE_PLUGINREPOSITORY_RELEASE_COUNT = 01
MVNCONF_PROFILE_PLUGINREPOSITORY_SNAPSHOT_COUNT = 01
MVNCONF_PROFILE_PLUGINREPOSITORY_COUNT = 01
MVNCONF_PROFILE_PLUGINREPOSITORIES_COUNT = 01
MVNCONF_PROFILE_COUNT = 01
MVNCONF_PROFILES_COUNT = 01
MVNCONF_SETTINGS_COUNT = 01

#########
#terminal elements:
#
#NOTE:  if a terminal's parent has multiple instances,
#       then specifiy instance number.  For example:
#
# E_ID_01 = fred
# E_NAME_01 = Fred Foo
# ...
#
# E_ID_02 = bob
# E_NAME_02 = Bob Fu
# ...
#
# IFF there is only one element value, you can drop the _01, for example:
#     E_VERSION = 3
#         is the same as:
#     E_VERSION_01 = 3
#
# IFF there are multiple sub-instance elements, then number the elements sequentially:
#     E_01
#     E_02
#     ...
#     E_nn
#     E_mm
# And then specify the parent instance in the element count variable,
# while setting the value to the range of each subset:
#     E_COUNT_01 = 01..02
#     E_COUNT_ii = nn..mm
# This specifies that elements {E_01, E_02} will attach to parent instance 01,
# an elements {E_nn, E_mm} will attach to parent instance ii, etc.
#
#########
MVNCONF_PROXY_ACTIVE =
MVNCONF_PROXY_PROTOCOL =
MVNCONF_PROXY_USERNAME =
MVNCONF_PROXY_PASSWORD =
MVNCONF_PROXY_PORT =
MVNCONF_PROXY_HOST =
MVNCONF_PROXY_NONPROXYHOSTS =
MVNCONF_PROXY_ID =
MVNCONF_SERVER_USERNAME =
MVNCONF_SERVER_PASSWORD =
MVNCONF_SERVER_PRIVATEKEY =
MVNCONF_SERVER_PASSPHRASE =
MVNCONF_SERVER_FILEPERMISSIONS =
MVNCONF_SERVER_DIRECTORYPERMISSIONS =
MVNCONF_SERVER_CONFIGURATION =
MVNCONF_SERVER_ID =
MVNCONF_MIRROR_MIRROROF =
MVNCONF_MIRROR_NAME =
MVNCONF_MIRROR_URL =
MVNCONF_MIRROR_ID =
MVNCONF_PROFILE_ACTIVATION_O_NAME =
MVNCONF_PROFILE_ACTIVATION_O_FAMILY =
MVNCONF_PROFILE_ACTIVATION_O_ARCH =
MVNCONF_PROFILE_ACTIVATION_O_VERSION =
MVNCONF_PROFILE_ACTIVATION_PROPERTY_NAME =
MVNCONF_PROFILE_ACTIVATION_PROPERTY_VALUE =
MVNCONF_PROFILE_ACTIVATION_MISSING =
MVNCONF_PROFILE_ACTIVATION_EXISTS =
MVNCONF_PROFILE_ACTIVATION_ACTIVEBYDEFAULT =
MVNCONF_PROFILE_ACTIVATION_JDK =
MVNCONF_PROFILE_REPOSITORY_RELEASE_ENABLED =
MVNCONF_PROFILE_REPOSITORY_RELEASE_UPDATEPOLICY =
MVNCONF_PROFILE_REPOSITORY_RELEASE_CHECKSUMPOLICY =
MVNCONF_PROFILE_REPOSITORY_SNAPSHOT_ENABLED =
MVNCONF_PROFILE_REPOSITORY_SNAPSHOT_UPDATEPOLICY =
MVNCONF_PROFILE_REPOSITORY_SNAPSHOT_CHECKSUMPOLICY =
MVNCONF_PROFILE_REPOSITORY_ID =
MVNCONF_PROFILE_REPOSITORY_NAME =
MVNCONF_PROFILE_REPOSITORY_URL =
MVNCONF_PROFILE_REPOSITORY_LAYOUT =
MVNCONF_PROFILE_PLUGINREPOSITORY_RELEASE_ENABLED =
MVNCONF_PROFILE_PLUGINREPOSITORY_RELEASE_UPDATEPOLICY =
MVNCONF_PROFILE_PLUGINREPOSITORY_RELEASE_CHECKSUMPOLICY =
MVNCONF_PROFILE_PLUGINREPOSITORY_SNAPSHOT_ENABLED =
MVNCONF_PROFILE_PLUGINREPOSITORY_SNAPSHOT_UPDATEPOLICY =
MVNCONF_PROFILE_PLUGINREPOSITORY_SNAPSHOT_CHECKSUMPOLICY =
MVNCONF_PROFILE_PLUGINREPOSITORY_ID =
MVNCONF_PROFILE_PLUGINREPOSITORY_NAME =
MVNCONF_PROFILE_PLUGINREPOSITORY_URL =
MVNCONF_PROFILE_PLUGINREPOSITORY_LAYOUT =
MVNCONF_PROFILE_PROPERTIES =
MVNCONF_PROFILE_ID =
MVNCONF_LOCALREPOSITORY =
MVNCONF_INTERACTIVEMODE =
MVNCONF_USEPLUGINREGISTRY =
MVNCONF_OFFLINE =
MVNCONF_ACTIVEPROFILES =
MVNCONF_PLUGINGROUPS =
EOF2

#show them:
%ifndef DO_NOT_DUMP_USER_VARS %echo -n $maven_user_vars
EOF
}
mvnconf_lib_reset := << EOF
{
    %call mvnconf_lib_reset_globals

%undef MVNCONF_PROXY(_.*)?
%undef MVNCONF_PROXIES(_.*)?
%undef MVNCONF_SERVER(_.*)?
%undef MVNCONF_SERVERS(_.*)?
%undef MVNCONF_MIRROR(_.*)?
%undef MVNCONF_MIRRORS(_.*)?
%undef MVNCONF_PROFILE_ACTIVATION_O(_.*)?
%undef MVNCONF_PROFILE_ACTIVATION_PROPERTY(_.*)?
%undef MVNCONF_PROFILE_ACTIVATION_FILE(_.*)?
%undef MVNCONF_PROFILE_ACTIVATION(_.*)?
%undef MVNCONF_PROFILE_REPOSITORY_RELEASE(_.*)?
%undef MVNCONF_PROFILE_REPOSITORY_SNAPSHOT(_.*)?
%undef MVNCONF_PROFILE_REPOSITORY(_.*)?
%undef MVNCONF_PROFILE_REPOSITORIES(_.*)?
%undef MVNCONF_PROFILE_PLUGINREPOSITORY_RELEASE(_.*)?
%undef MVNCONF_PROFILE_PLUGINREPOSITORY_SNAPSHOT(_.*)?
%undef MVNCONF_PROFILE_PLUGINREPOSITORY(_.*)?
%undef MVNCONF_PROFILE_PLUGINREPOSITORIES(_.*)?
%undef MVNCONF_PROFILE(_.*)?
%undef MVNCONF_PROFILES(_.*)?
%undef MVNCONF_SETTINGS(_.*)?
%undef MVNCONF_PROXY_ACTIVE(_.*)?
%undef MVNCONF_PROXY_PROTOCOL(_.*)?
%undef MVNCONF_PROXY_USERNAME(_.*)?
%undef MVNCONF_PROXY_PASSWORD(_.*)?
%undef MVNCONF_PROXY_PORT(_.*)?
%undef MVNCONF_PROXY_HOST(_.*)?
%undef MVNCONF_PROXY_NONPROXYHOSTS(_.*)?
%undef MVNCONF_PROXY_ID(_.*)?
%undef MVNCONF_SERVER_USERNAME(_.*)?
%undef MVNCONF_SERVER_PASSWORD(_.*)?
%undef MVNCONF_SERVER_PRIVATEKEY(_.*)?
%undef MVNCONF_SERVER_PASSPHRASE(_.*)?
%undef MVNCONF_SERVER_FILEPERMISSIONS(_.*)?
%undef MVNCONF_SERVER_DIRECTORYPERMISSIONS(_.*)?
%undef MVNCONF_SERVER_CONFIGURATION(_.*)?
%undef MVNCONF_SERVER_ID(_.*)?
%undef MVNCONF_MIRROR_MIRROROF(_.*)?
%undef MVNCONF_MIRROR_NAME(_.*)?
%undef MVNCONF_MIRROR_URL(_.*)?
%undef MVNCONF_MIRROR_ID(_.*)?
%undef MVNCONF_PROFILE_ACTIVATION_O_NAME(_.*)?
%undef MVNCONF_PROFILE_ACTIVATION_O_FAMILY(_.*)?
%undef MVNCONF_PROFILE_ACTIVATION_O_ARCH(_.*)?
%undef MVNCONF_PROFILE_ACTIVATION_O_VERSION(_.*)?
%undef MVNCONF_PROFILE_ACTIVATION_PROPERTY_NAME(_.*)?
%undef MVNCONF_PROFILE_ACTIVATION_PROPERTY_VALUE(_.*)?
%undef MVNCONF_PROFILE_ACTIVATION_MISSING(_.*)?
%undef MVNCONF_PROFILE_ACTIVATION_EXISTS(_.*)?
%undef MVNCONF_PROFILE_ACTIVATION_ACTIVEBYDEFAULT(_.*)?
%undef MVNCONF_PROFILE_ACTIVATION_JDK(_.*)?
%undef MVNCONF_PROFILE_REPOSITORY_RELEASE_ENABLED(_.*)?
%undef MVNCONF_PROFILE_REPOSITORY_RELEASE_UPDATEPOLICY(_.*)?
%undef MVNCONF_PROFILE_REPOSITORY_RELEASE_CHECKSUMPOLICY(_.*)?
%undef MVNCONF_PROFILE_REPOSITORY_SNAPSHOT_ENABLED(_.*)?
%undef MVNCONF_PROFILE_REPOSITORY_SNAPSHOT_UPDATEPOLICY(_.*)?
%undef MVNCONF_PROFILE_REPOSITORY_SNAPSHOT_CHECKSUMPOLICY(_.*)?
%undef MVNCONF_PROFILE_REPOSITORY_ID(_.*)?
%undef MVNCONF_PROFILE_REPOSITORY_NAME(_.*)?
%undef MVNCONF_PROFILE_REPOSITORY_URL(_.*)?
%undef MVNCONF_PROFILE_REPOSITORY_LAYOUT(_.*)?
%undef MVNCONF_PROFILE_PLUGINREPOSITORY_RELEASE_ENABLED(_.*)?
%undef MVNCONF_PROFILE_PLUGINREPOSITORY_RELEASE_UPDATEPOLICY(_.*)?
%undef MVNCONF_PROFILE_PLUGINREPOSITORY_RELEASE_CHECKSUMPOLICY(_.*)?
%undef MVNCONF_PROFILE_PLUGINREPOSITORY_SNAPSHOT_ENABLED(_.*)?
%undef MVNCONF_PROFILE_PLUGINREPOSITORY_SNAPSHOT_UPDATEPOLICY(_.*)?
%undef MVNCONF_PROFILE_PLUGINREPOSITORY_SNAPSHOT_CHECKSUMPOLICY(_.*)?
%undef MVNCONF_PROFILE_PLUGINREPOSITORY_ID(_.*)?
%undef MVNCONF_PROFILE_PLUGINREPOSITORY_NAME(_.*)?
%undef MVNCONF_PROFILE_PLUGINREPOSITORY_URL(_.*)?
%undef MVNCONF_PROFILE_PLUGINREPOSITORY_LAYOUT(_.*)?
%undef MVNCONF_PROFILE_PROPERTIES(_.*)?
%undef MVNCONF_PROFILE_ID(_.*)?
%undef MVNCONF_LOCALREPOSITORY(_.*)?
%undef MVNCONF_INTERACTIVEMODE(_.*)?
%undef MVNCONF_USEPLUGINREGISTRY(_.*)?
%undef MVNCONF_OFFLINE(_.*)?
%undef MVNCONF_ACTIVEPROFILES(_.*)?
%undef MVNCONF_PLUGINGROUPS(_.*)?
}
EOF

#avoid multiple includes:
MVNCONF_POM_GENERATOR_INCLUDED = 1
 
